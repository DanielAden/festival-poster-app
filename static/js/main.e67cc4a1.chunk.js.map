{"version":3,"sources":["images/desert.png","images/punk.png","images/metal.png","images/galaxy.png","error.ts","store/system/systemSlice.ts","store/Poster/posterSlice.ts","store/rootReducer.ts","components/Poster/CanvasUtils.ts","components/Poster/PosterFontPackage.ts","components/Poster/PosterTheme.ts","components/Poster/PosterTextLayout.ts","spotify/SpotifyAPI.ts","utils/useBoundingRectangle.ts","utils/useWindowSize.ts","utils/index.ts","store/system/useSpotifyAccessToken.ts","components/AppButton.tsx","components/List/ListRow.tsx","components/List/List.tsx","spotify/SpotifyAuth.ts","AppLog.ts","spotify/SpotifyAPIHooks.ts","components/Poster/Poster.ts","components/Poster/PosterCanvas.tsx","components/AppSelect/AppSelect.tsx","components/Options.tsx","components/TopArtistsList.tsx","components/SpotifyInfoCapturePanel.tsx","components/Toolbar/SideNav.tsx","components/Home.tsx","components/SpotifyAuthorize.tsx","App.tsx","serviceWorker.ts","store/index.ts","components/GlobalError.tsx","index.tsx"],"names":["module","exports","toStorable","e","type","AppError","message","name","stack","_type","this","Error","systemSlice","createSlice","initialState","spotifyAccessToken","spotifyAccessTokenExpire","error","isError","reducers","accessTokenUpdated","state","action","produce","draftState","payload","caughtGlobalError","clearGlobalError","actions","height","window","innerHeight","me","artists","topArtistsTimeRange","layoutType","themeType","width","posterSlice","changeThemeType","changeLayoutType","updateArtistList","updateMeData","topArtistsTimeRangeUpdated","rootReducer","combineReducers","poster","posterSliceReducer","system","systemSliceReducer","useTypedSelector","selector","useSelector","createHiDPICanvas","can","w","h","ctx","getContext","ratio","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Math","ceil","pixelRatio","style","setTransform","BasicFontPkg","fontType","fontColor","fontSizeRatio","strokeInfo","strokeStyle","widthRatio","offsetX","offsetY","sinfo","totalHeight","lineWidth","fontLineWidth","fillStyle","str","x","y","maxWidth","strokeList","Array","isArray","save","forEach","setStrokeCtx","strokeText","restore","setTextCtx","fillText","floor","scale","fheight","fontHeight","maxStrokeRatio","maxStrokeSize","siList","si","max","abs","PosterTheme","backgroundImage","sideMarginRatio","festivalNameTopRatio","artistTopRatio","skewText","nameFontPackage","artistFontPkg","DesertTheme","images","PunkTheme","RockTheme","GalaxyTheme","artistFont","artistColor","TestTheme","PosterTextLayout","_poster","theme","s","slice","length","fp","text","fullText","reduce","prev","cur","metrics","measureText","posterHeight","font","fontPkg","fontString","lines","afp","setArtistFont","currentLine","artistNames","artist","calculateTextWidth","maxPosterWidth","push","cutTrailingChar","artistSeperator","artistTopOverride","canvasCtx","baseTop","artistTop","artistLines","textBaseline","textAlign","lineHeight","console","log","movingTop","line","i","printCenter","bottom","top","transform","draw","midX","sideMargin","posterWidth","festivalName","festivalNameTop","BasicLayout","CoachellaLayout","textScaleDelta","currentArtistFontSize","scaleDownArtistFont","startTop","setHeadlinerFont","printLeft","headliners","printRight","l","filter","a","includes","WeekendLayout","oneThird","day1Lines","day2Lines","day3Lines","actualTop","dayFont","SPOTIFY_API_HOST","SPOTIFY_VERSION","SpotifyAPI","apiKey","playlistId","getPlaylistTracks","trackData","extractArtistsFromTracks","url","fetch","res","unpackResponse","json","SpotifyAuthTokenAPI","accessToken","async","spotifyGETHelper","playlist_id","map","playlistTrackObject","track","spotifyTracksFromPlaylist","spotifyMe","limit","offset","time_range","data","SpotifyUserIdAPI","apiurl","noAuthAPICall","endpoints","endpointString","join","URL","href","ok","status","spotifyFetch","access_token","headers","Authorization","objectToQueryParams","queryObject","USP","URLSearchParams","k","append","toString","urlParams","queryParams","queryStr","hasOwnProperty","items","tracks","artistsSet","Set","add","useBoundingRectangle","useState","size","setSize","useLayoutEffect","updateSize","innerWidth","addEventListener","removeEventListener","useWindowSize","undefined","rect","setrect","ref","useRef","current","useEffect","getBoundingClientRect","nowSeconds","Date","now","useSpotifyAccessToken","expire","parseInt","AppButton","children","props","color","onClick","stopPropagation","handleActionClick","item","handler","preventDefault","ListRow","rowNumber","disableActions","isEditing","setIsEditing","renderData","listProps","editText","setEditText","handleRemove","handleEdit","handleSelect","handleSelectionChange","canEdit","canEditGlobal","canRemove","canSelect","isSelected","ListGroupItem","InputGroup","Input","value","display","onChange","target","InputGroupAddon","addonType","createNewListItem","active","key","id","className","ButtonGroup","disabled","renderRow","_ID","generateId","oldItem","newItem","attachHandlers","setter","handlerCallbacks","handlerMiddleware","toRemove","oldItems","handleAddRow","addedItem","addRow","editedItem","newItems","itemToEdit","find","JSON","stringify","selectedItem","draft","findIndex","handleSelectAll","selectAllMW","selectAll","handleClear","clearMW","clear","MEMOED_AUTH_DATA","List","isAddingRow","setisAddingRow","addRowText","setAddRowText","canSelectAll","canClear","renderAddRow","canAddRow","userAdded","block","renderHeader","justifyContent","renderListActions","rows","rowNumbers","ListGroup","renderList","useErrorLog","dispatch","useDispatch","useCallback","useAppLog","useSpotifyAPI","tokenData","elog","useMemo","spotifyAuthObj","authToken","userId","spotifyAPIFactory","count","DEFAULT_FESTIVAL_NAME","BasicPoster","ps","layout","canvas","_w","_h","img","_drawBackground","festivalNameText","festivalNameCase","artistCase","loadBackground","FontFaceObserver","nameFont","festivalNameFontPkg","toAwait","load","loadImage","Promise","all","drawBackground","Poster","_draw","drawArtistBlock","drawFestivalName","maxPosterHeight","newTop","clearRect","backgroundCanvas","imgWidth","imgHeight","Image","resolve","onload","src","naturalWidth","naturalHeight","drawImage","String","fromCharCode","toUpperCase","displayName","usePoster","api","meData","fetchData","useMe","usePosterTheme","usePosterLayout","display_name","aspectRatio","getH","PosterCanvas","parentDomRect","curBackgroundImage","setCurBackgroundImage","curW","setCurW","curH","setCurH","isLoading","setisLoading","bgRef","r","document","documentElement","clientHeight","calculatePosterDims","calculatedW","calculatedH","setPosterSize","needBackgroundImageUpdate","needPosterUpdate","bgcan","redrawBG","drawMultiCanvas","drawPoster","Spinner","zIndex","position","useAppSelect","options","initialValue","changeCB","selectedValue","setSelectedValue","selected","handleChange","AppSelect","labelText","optionEls","opt","FormGroup","Label","themeOptions","layoutOptions","Options","useAppSelector","themeSelectHook","layoutSelectHook","createImage","createElement","dataURL","toDataURL","open","write","useCreateImage","Form","Row","form","Col","md","xs","topArtistTROptions","TopArtistsList","setTopArtistsTimeRange","timeRange","topArtists","topArtistsData","topArtistsList","ao","newTimeRange","useSpotifyTopArtists","initialTimeRange","v","artistSelectProps","selectorFN","actionFN","setItems","fn","newList","useReduxList","alt","marginRight","redirect_uri","location","SPOTIFY_AUTH_URL","SPOTIFY_ACCESS_TOKEN_FIELD","SPOTIFY_TOKEN_TYPE_FIELD","SPOTIFY_EXPIRES_IN_FIELD","authParams","client_id","response_type","scope","constructSpotifyAuthURL","queryParamsList","Object","entries","paramsString","spotifyAuthFromWindow","urlList","split","queryList","SpotifyInfoCapturePanel","role","SideNav","toggle","showAuth","Home","navActive","setNavActive","toggleNav","Nav","marginBottom","Container","redirectHome","to","SpotifyAuthorize","authData","expires_in","App","expiresInNum","isNaN","expireTime","hash","exact","path","Boolean","hostname","match","versionStr","localStorage","getItem","setItem","initialJSON","preloadedState","parse","middleware","store","next","getState","configureStore","reducer","GlobalError","errorData","spotifyAccessRefreshModal","setSpotifyAccessRefreshModal","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e67cc4a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/desert.1f4ebc63.png\";","module.exports = __webpack_public_path__ + \"static/media/punk.ae35ea3b.png\";","module.exports = __webpack_public_path__ + \"static/media/metal.78fbcaff.png\";","module.exports = __webpack_public_path__ + \"static/media/galaxy.5fd0b3a6.png\";","export const toStorable = function(e: Error): AppErrorStorable {\n  const type = e instanceof AppError ? e.type : null;\n  return {\n    message: e.message,\n    name: e.name,\n    stack: e.stack,\n    type: type,\n  };\n};\n\nexport type AppErrorType = 'NoSpotifyAccess' | null;\nexport interface AppErrorStorable {\n  message: string;\n  stack: string | undefined;\n  name: string;\n  type: AppErrorType;\n}\n\nexport class AppError extends Error {\n  private _type: AppErrorType = null;\n\n  constructor(message: string, type?: AppErrorType) {\n    super(message);\n    if (type) {\n      this._type = type;\n    }\n  }\n\n  get type(): AppErrorType {\n    return this._type;\n  }\n\n  set type(type: AppErrorType) {\n    this._type = type;\n  }\n\n  toJSON() {\n    return toStorable(this);\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport produce from 'immer';\nimport { toStorable, AppErrorStorable } from '../../error';\n\nexport interface SpotifyAccessTokenPackage {\n  spotifyAccessToken: string;\n  spotifyAccessTokenExpire: string;\n}\n\nexport type GlobalErrorNone = { isError: false };\nexport type GlobalError = { isError: true; error: AppErrorStorable };\nexport type GlobalErrorPackage = GlobalError | GlobalErrorNone;\n\nexport interface SystemState extends SpotifyAccessTokenPackage {\n  error: GlobalErrorPackage;\n}\n\nconst initialState: SystemState = {\n  spotifyAccessToken: '',\n  spotifyAccessTokenExpire: '',\n  error: { isError: false },\n};\n\nconst systemSlice = createSlice({\n  name: 'system',\n  initialState,\n  reducers: {\n    accessTokenUpdated(\n      state,\n      action: PayloadAction<SpotifyAccessTokenPackage>,\n    ) {\n      return produce(state, draftState => {\n        draftState.spotifyAccessToken = action.payload.spotifyAccessToken;\n        draftState.spotifyAccessTokenExpire =\n          action.payload.spotifyAccessTokenExpire;\n        if (action.payload.spotifyAccessToken !== '') {\n          if (\n            draftState.error.isError &&\n            draftState.error.error.type === 'NoSpotifyAccess'\n          ) {\n            draftState.error = { isError: false };\n          }\n        }\n      });\n    },\n    caughtGlobalError(state, action: PayloadAction<Error>) {\n      return produce(state, draftState => {\n        draftState.error = {\n          isError: true,\n          error: toStorable(action.payload),\n        };\n      });\n    },\n    clearGlobalError(state) {\n      return produce(state, draftState => {\n        draftState.error = { isError: false };\n      });\n    },\n  },\n});\n\nexport const {\n  accessTokenUpdated,\n  caughtGlobalError,\n  clearGlobalError,\n} = systemSlice.actions;\nexport default systemSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ListItems } from '../../components/List/List';\nimport produce from 'immer';\nimport {\n  SpotifyArtistObject,\n  SpotifyUserObject,\n} from '../../spotify/SpotifyAPI';\n\nexport interface PosterState {\n  me: SpotifyUserObject | null;\n  artists: ListItems<SpotifyArtistObject>;\n  topArtistsTimeRange: string; // TODO make this type safe\n  layoutType: string;\n  themeType: string;\n  height: number;\n  width: number;\n}\n\nconst height = window.innerHeight * 0.8;\nconst width = height * 0.65;\n\nconst initialState: PosterState = {\n  me: null,\n  artists: [],\n  topArtistsTimeRange: 'medium_term',\n  layoutType: 'basic',\n  themeType: 'desert',\n  width,\n  height,\n};\n\nconst posterSlice = createSlice({\n  name: 'poster',\n  initialState,\n  reducers: {\n    changeThemeType(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.themeType = action.payload;\n      });\n    },\n    changeLayoutType(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.layoutType = action.payload;\n      });\n    },\n    updateArtistList(state, action: PayloadAction<PosterState['artists']>) {\n      return produce(state, draftState => {\n        draftState.artists = action.payload;\n      });\n    },\n    updateMeData(state, action: PayloadAction<SpotifyUserObject>) {\n      return produce(state, draftState => {\n        draftState.me = action.payload;\n      });\n    },\n    topArtistsTimeRangeUpdated(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.topArtistsTimeRange = action.payload;\n      });\n    },\n  },\n});\n\nexport const {\n  changeThemeType,\n  updateArtistList,\n  topArtistsTimeRangeUpdated,\n  changeLayoutType,\n  updateMeData,\n} = posterSlice.actions;\n\nexport default posterSlice.reducer;\n","import { combineReducers } from 'redux';\nimport systemSliceReducer from './system/systemSlice';\nimport posterSliceReducer from './Poster/posterSlice';\nimport { useSelector } from 'react-redux';\n\nexport const rootReducer = combineReducers({\n  poster: posterSliceReducer,\n  system: systemSliceReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst useTypedSelector = <T>(selector: (state: RootState) => T): T => {\n  const value = useSelector(selector);\n  return value;\n};\n\nexport default useTypedSelector;\n","// based off of the following comment from stackoverflow\n// https://stackoverflow.com/a/15666143/1215360\n\nexport const pixelRatio = (ctx: CanvasRenderingContext2D) => {\n  const dpr = window.devicePixelRatio || 1;\n  const bsr =\n    (ctx as any).webkitBackingStorePixelRatio ||\n    (ctx as any).mozBackingStorePixelRatio ||\n    (ctx as any).msBackingStorePixelRatio ||\n    (ctx as any).oBackingStorePixelRatio ||\n    (ctx as any).backingStorePixelRatio ||\n    1;\n  return Math.ceil(dpr / bsr);\n};\n\nexport const createHiDPICanvas = function(\n  can: HTMLCanvasElement,\n  w: number,\n  h: number,\n) {\n  const ctx = can.getContext('2d');\n  if (!ctx)\n    throw new Error('Could not get canvas context to create HiDPI canvas');\n  const ratio = pixelRatio(ctx);\n  can.width = w * ratio;\n  can.height = h * ratio;\n  can.style.width = w + 'px';\n  can.style.height = h + 'px';\n  ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\n  return can;\n};\n","export interface PosterTextStrokeInfo {\n  strokeStyle: string;\n  widthRatio: number;\n  offsetX: number;\n  offsetY: number;\n}\n\ntype StrokeInfo = PosterTextStrokeInfo | PosterTextStrokeInfo[];\nexport default class FontPkg {\n  protected strokeInfo: StrokeInfo;\n\n  constructor(\n    public fontType: string,\n    public fontColor: string,\n    public fontSizeRatio: number, // 0 to 1\n    strokeInfo?: StrokeInfo,\n  ) {\n    this.strokeInfo = strokeInfo\n      ? strokeInfo\n      : {\n          strokeStyle: 'black',\n          widthRatio: 0.2,\n          offsetX: 0,\n          offsetY: 0,\n        };\n  }\n\n  protected setStrokeCtx(\n    ctx: CanvasRenderingContext2D,\n    sinfo: PosterTextStrokeInfo,\n    totalHeight: number,\n  ) {\n    ctx.strokeStyle = sinfo.strokeStyle;\n    ctx.lineWidth = this.fontLineWidth(sinfo.widthRatio, totalHeight);\n  }\n\n  protected setTextCtx(ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = this.fontColor;\n  }\n\n  public draw(\n    str: string,\n    x: number,\n    y: number,\n    maxWidth: number,\n    ctx: CanvasRenderingContext2D,\n    totalHeight: number,\n  ) {\n    const strokeList = Array.isArray(this.strokeInfo)\n      ? this.strokeInfo\n      : [this.strokeInfo];\n\n    ctx.save();\n    strokeList.forEach(sinfo => {\n      this.setStrokeCtx(ctx, sinfo, totalHeight);\n      ctx.strokeText(str, x + sinfo.offsetX, y + sinfo.offsetY, maxWidth);\n    });\n    ctx.restore();\n\n    ctx.save();\n    this.setTextCtx(ctx);\n    ctx.fillText(str, x, y, maxWidth);\n    ctx.restore();\n  }\n\n  public fontHeight(totalHeight: number) {\n    return Math.floor(this.fontSizeRatio * totalHeight);\n  }\n\n  public fontString(totalHeight: number, scale = 1) {\n    const fheight = this.fontHeight(totalHeight);\n    return `${fheight * scale}px ${this.fontType}`;\n  }\n\n  public fontLineWidth(widthRatio: number, totalHeight: number): number {\n    const lineWidth = widthRatio * this.fontHeight(totalHeight);\n    return lineWidth;\n  }\n\n  private get maxStrokeRatio() {\n    if (!this.strokeInfo) return 0;\n    const siList = Array.isArray(this.strokeInfo)\n      ? this.strokeInfo\n      : [this.strokeInfo];\n    let maxStrokeRatio = 0;\n    siList.forEach(si => {\n      maxStrokeRatio = Math.max(\n        maxStrokeRatio,\n        si.widthRatio + Math.abs(si.offsetY),\n      );\n    });\n    return maxStrokeRatio;\n  }\n\n  public maxStrokeSize(totalHeight: number) {\n    return this.maxStrokeRatio * this.fontHeight(totalHeight);\n  }\n\n  public lineHeight(totalHeight: number): number {\n    const fontHeight = this.fontHeight(totalHeight);\n    return fontHeight + this.maxStrokeSize(totalHeight);\n  }\n}\n\nexport class BasicFontPkg extends FontPkg {}\n","import * as images from '../../images';\nimport useTypedSelector from '../../store/rootReducer';\nimport { AppError } from '../../error';\nimport { useMemo } from 'react';\nimport FontPkg, { BasicFontPkg } from './PosterFontPackage';\n\nexport abstract class PosterTheme {\n  public backgroundImage: string = '';\n  public sideMarginRatio: number = 0;\n  public festivalNameTopRatio = 0.05;\n  public artistTopRatio = 0.4;\n  public skewText: boolean = false;\n  public abstract nameFontPackage: FontPkg;\n  public abstract artistFontPkg: FontPkg;\n}\n\nexport class DesertTheme extends PosterTheme {\n  backgroundImage = images.desert;\n  sideMarginRatio = 0.03;\n  artistTopRatio = 0.3;\n\n  nameFontPackage = new BasicFontPkg('TexasTango', 'orange', 0.08);\n  artistFontPkg = new BasicFontPkg('WesternBangBang', 'orange', 0.032);\n}\n\nexport class PunkTheme extends PosterTheme {\n  backgroundImage = images.punk;\n  nameFontPackage = new BasicFontPkg('WesternBangBang', '#37C3E1', 0.1);\n  artistFontPkg = new BasicFontPkg('WesternBangBang', '#37C3E1', 0.033);\n}\n\nexport class RockTheme extends PosterTheme {\n  backgroundImage = images.metal;\n  sideMarginRatio = 0.035;\n\n  nameFontPackage = new BasicFontPkg('MadridGrunge', '#7C7170', 0.1);\n  artistFontPkg = new BasicFontPkg('PunkrockerStamp', '#7C7170', 0.032);\n}\n\nexport class GalaxyTheme extends PosterTheme {\n  backgroundImage = images.galaxy;\n  festivalNameTopRatio = 0.05;\n\n  artistFont = 'Monteral';\n  artistColor = 'white';\n\n  nameFontPackage = new BasicFontPkg('Cocogoose', 'white', 0.1, {\n    widthRatio: 0.1,\n    offsetX: 0,\n    offsetY: 0,\n    strokeStyle: 'black',\n  });\n  artistFontPkg = new BasicFontPkg('Monteral', 'white', 0.02);\n\n  sideMarginRatio = 0.055;\n}\n\nexport class TestTheme extends PosterTheme {\n  backgroundImage = images.galaxy;\n\n  festivalNameTopRatio = 0.05;\n  sideMarginRatio = 0.055;\n\n  nameFontPackage = new BasicFontPkg('Cocogoose', 'white', 0.1);\n  artistFontPkg = new BasicFontPkg('Monteral', 'lime', 0.02, [\n    {\n      strokeStyle: 'yellow',\n      widthRatio: 0.4,\n      offsetX: 0,\n      offsetY: 0,\n    },\n    {\n      strokeStyle: 'blue',\n      widthRatio: 0.2,\n      offsetX: 0,\n      offsetY: 0,\n    },\n  ]);\n\n  skewText = true;\n}\n\nexport const usePosterTheme = (): PosterTheme => {\n  const themeType = useTypedSelector(s => s.poster.themeType);\n  const themeMemo = useMemo(() => {\n    switch (themeType) {\n      case 'punk':\n        return new PunkTheme();\n      case 'rock':\n        return new RockTheme();\n      case 'desert':\n        return new DesertTheme();\n      case 'galaxy':\n        return new GalaxyTheme();\n      case 'test':\n        return new TestTheme();\n      default:\n        throw new AppError(`Invalid theme ${themeType}`);\n    }\n  }, [themeType]);\n  return themeMemo;\n};\n","import { Poster } from './Poster';\nimport useTypedSelector from '../../store/rootReducer';\nimport { AppError } from '../../error';\nimport { useMemo } from 'react';\nimport FontPkg from './PosterFontPackage';\n\ninterface ArtistBlockMetrics {\n  top: number;\n  bottom: number;\n  height: number;\n}\n\nexport abstract class PosterTextLayout {\n  constructor(private _poster?: Poster) {}\n\n  public set poster(poster: Poster) {\n    this._poster = poster;\n  }\n\n  public get poster() {\n    if (!this._poster)\n      throw new Error('Expected poster to be set before drawing');\n    return this._poster;\n  }\n\n  public get ctx() {\n    return this.poster.canvasCtx;\n  }\n\n  public get theme() {\n    return this.poster.theme;\n  }\n\n  public fontPkg(type: 'artist' | 'name') {\n    switch (type) {\n      case 'artist':\n        return this.theme.artistFontPkg;\n      case 'name':\n        return this.theme.nameFontPackage;\n    }\n  }\n\n  protected cutTrailingChar(s: string) {\n    return s.slice(0, s.length - 1);\n  }\n\n  protected get midX() {\n    return Math.floor(this.posterWidth / 2);\n  }\n\n  protected get midY() {\n    return Math.floor(this.posterHeight / 2);\n  }\n\n  protected get posterWidth() {\n    return this.poster.w;\n  }\n\n  protected get maxPosterWidth() {\n    return this.posterWidth - this.sideMargin * 2;\n  }\n\n  protected get posterHeight() {\n    return this.poster.h;\n  }\n\n  public get maxPosterHeight() {\n    return this.posterHeight;\n  }\n\n  protected get sideMargin() {\n    return Math.ceil(this.theme.sideMarginRatio * this.posterWidth);\n  }\n\n  protected get festivalNameTop() {\n    return Math.floor(this.theme.festivalNameTopRatio * this.posterHeight);\n  }\n\n  public get artistTop() {\n    return this.posterHeight * this.theme.artistTopRatio;\n  }\n\n  protected calculateTextWidth(fp: FontPkg, ...text: string[]) {\n    const fullText = text.reduce((prev, cur) => prev + cur, '');\n    const metrics = this.ctx.measureText(fullText);\n    return Math.ceil(metrics.width + fp.maxStrokeSize(this.posterHeight) * 2);\n  }\n\n  protected setArtistFont() {\n    this.ctx.font = this.fontPkg('artist').fontString(this.posterHeight);\n  }\n\n  protected artistLines() {\n    const lines: string[] = [];\n    const poster = this.poster;\n    const afp = this.fontPkg('artist');\n\n    this.setArtistFont();\n    let currentLine = '';\n    for (let artist of this.poster.artistNames) {\n      const lineWidth = this.calculateTextWidth(afp, currentLine, artist);\n      if (lineWidth > this.maxPosterWidth) {\n        lines.push(this.cutTrailingChar(currentLine));\n        currentLine = artist + poster.artistSeperator;\n        continue;\n      }\n      currentLine = currentLine + artist + poster.artistSeperator;\n    }\n    if (currentLine !== '') lines.push(this.cutTrailingChar(currentLine));\n    return lines;\n  }\n\n  public drawArtistBlock(artistTopOverride?: number): ArtistBlockMetrics {\n    const ctx = this.poster.canvasCtx;\n    const baseTop = artistTopOverride || this.artistTop;\n    const lines = this.artistLines();\n\n    ctx.textBaseline = 'top';\n    ctx.textAlign = 'center';\n\n    const lineHeight = this.fontPkg('artist').lineHeight(this.posterHeight);\n    console.log(lineHeight);\n    let movingTop: number = 0;\n    lines.forEach((line, i) => {\n      movingTop = baseTop + (i + 1) * lineHeight;\n      this.printCenter(line, movingTop, this.fontPkg('artist'));\n    });\n\n    const bottom = movingTop + lineHeight;\n\n    return {\n      top: baseTop,\n      bottom,\n      height: bottom - baseTop,\n    };\n  }\n\n  public clearTransform() {\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n\n  public setSkew() {\n    if (this.theme.skewText) this.ctx.transform(1, 0.06, 0.06, 1, -20, 0);\n  }\n\n  public printCenter(str: string, top: number, fp: FontPkg) {\n    const ctx = this.ctx;\n    ctx.save();\n    ctx.textAlign = 'center';\n    fp.draw(str, this.midX, top, this.maxPosterWidth, ctx, this.posterHeight);\n    ctx.restore();\n  }\n\n  public printLeft(str: string, top: number, fp: FontPkg) {\n    const ctx = this.ctx;\n    ctx.save();\n    ctx.textAlign = 'left';\n    fp.draw(\n      str,\n      this.sideMargin,\n      top,\n      this.maxPosterWidth,\n      ctx,\n      this.posterHeight,\n    );\n    ctx.restore();\n  }\n\n  public printRight(str: string, top: number, fp: FontPkg) {\n    this.ctx.save();\n    this.ctx.textAlign = 'right';\n    fp.draw(\n      str,\n      this.posterWidth - this.sideMargin,\n      top,\n      this.maxPosterWidth,\n      this.ctx,\n      this.posterHeight,\n    );\n    this.ctx.restore();\n  }\n\n  public drawFestivalName() {\n    const ctx = this.poster.canvasCtx;\n    const { nameFontPackage } = this.theme;\n    ctx.save();\n    ctx.font = nameFontPackage.fontString(this.posterHeight);\n    ctx.textBaseline = 'top';\n    ctx.textAlign = 'center';\n    ctx.strokeStyle = 'black';\n    this.printCenter(\n      this.poster.festivalName,\n      this.festivalNameTop,\n      nameFontPackage,\n    );\n    ctx.restore();\n  }\n}\n\nexport class BasicLayout extends PosterTextLayout {}\n\nexport class CoachellaLayout extends PosterTextLayout {\n  private textScaleDelta: number = 0.9;\n  private currentArtistFontSize = 0;\n\n  setArtistFont() {\n    const { artistFontPkg: afp } = this.theme;\n    this.currentArtistFontSize = afp.fontHeight(this.posterHeight);\n    this.ctx.font = this.theme.artistFontPkg.fontString(this.posterHeight);\n  }\n\n  scaleDownArtistFont() {\n    const { artistFontPkg: afp } = this.theme;\n    this.currentArtistFontSize =\n      this.currentArtistFontSize * this.textScaleDelta;\n    this.ctx.font = `${this.currentArtistFontSize}px ${afp.fontType}`;\n    console.log(this.ctx.font);\n  }\n\n  setHeadlinerFont() {\n    this.ctx.font = this.theme.artistFontPkg.fontString(this.posterHeight, 2);\n  }\n\n  private get headliners() {\n    return this.poster.artistNames.slice(0, 3);\n  }\n\n  private get artistNames() {\n    const headliners = this.headliners;\n    return this.poster.artistNames.filter(a => !headliners.includes(a));\n  }\n\n  protected artistLines() {\n    const lines: string[] = [];\n    const poster = this.poster;\n    const afp = this.fontPkg('artist');\n\n    this.setArtistFont();\n    let currentLine = '';\n    for (let artist of this.artistNames) {\n      const lineWidth = this.calculateTextWidth(afp, currentLine, artist);\n      if (lineWidth > this.maxPosterWidth) {\n        lines.push(this.cutTrailingChar(currentLine));\n        currentLine = artist + poster.artistSeperator;\n        this.scaleDownArtistFont();\n        continue;\n      }\n      currentLine = currentLine + artist + poster.artistSeperator;\n    }\n    if (currentLine !== '') lines.push(this.cutTrailingChar(currentLine));\n    return lines;\n  }\n\n  drawArtistBlock(artistTopOverride?: number): ArtistBlockMetrics {\n    const { ctx } = this;\n    ctx.save();\n    ctx.textBaseline = 'bottom';\n\n    const { artistFontPkg: afp } = this.theme;\n    const lineHeight = afp.lineHeight(this.posterHeight);\n    const startTop = artistTopOverride || this.artistTop;\n    const artistLines = this.artistLines();\n    let movingTop = startTop;\n\n    this.setHeadlinerFont();\n    this.printLeft(this.headliners[0], movingTop, afp);\n    this.setArtistFont();\n    this.printRight('FRIDAY', movingTop, this.theme.artistFontPkg);\n\n    artistLines.forEach((l, i) => {\n      movingTop = movingTop + lineHeight;\n      this.printLeft(l, movingTop, afp);\n      this.scaleDownArtistFont();\n    });\n\n    ctx.restore();\n    return { bottom: 0, top: startTop, height: 0 };\n  }\n}\n\nexport class WeekendLayout extends PosterTextLayout {\n  dayFont() {\n    this.ctx.font = this.theme.artistFontPkg.fontString(this.posterHeight, 2);\n  }\n\n  artistFont() {\n    this.ctx.font = this.theme.artistFontPkg.fontString(this.posterHeight);\n  }\n\n  drawArtistBlock(artistTopOverride?: number): ArtistBlockMetrics {\n    const lines = this.artistLines();\n    const oneThird = Math.ceil(lines.length / 3);\n    const day1Lines = lines.slice(0, oneThird);\n    const day2Lines = lines.slice(oneThird, oneThird * 2);\n    const day3Lines = lines.slice(oneThird * 2);\n    const { ctx } = this;\n    const { artistFontPkg: afp } = this.theme;\n    ctx.save();\n\n    ctx.textBaseline = 'bottom';\n\n    const lineHeight = afp.lineHeight(this.posterHeight);\n    const startTop = artistTopOverride || this.artistTop;\n    const actualTop = startTop - lineHeight;\n    let movingTop = startTop;\n\n    this.dayFont();\n    this.printLeft('FRIDAY', movingTop, afp);\n    this.artistFont();\n\n    day1Lines.forEach((line, i) => {\n      movingTop += lineHeight;\n      this.printLeft(line, movingTop, afp);\n    });\n\n    movingTop = movingTop + lineHeight * 3;\n\n    this.dayFont();\n    this.printRight('SATURDAY', movingTop, afp);\n    this.artistFont();\n\n    day2Lines.forEach((line, i) => {\n      movingTop += lineHeight;\n      this.printRight(line, movingTop, afp);\n    });\n\n    movingTop = movingTop + lineHeight * 3;\n    ctx.textAlign = 'left';\n\n    this.dayFont();\n    this.printLeft('SUNDAY', movingTop, afp);\n    this.artistFont();\n    day3Lines.forEach(line => {\n      movingTop += lineHeight;\n      this.printLeft(line, movingTop, afp);\n    });\n\n    ctx.restore();\n    return {\n      top: actualTop,\n      bottom: movingTop,\n      height: movingTop - actualTop,\n    };\n  }\n}\n\nexport const usePosterLayout = (): PosterTextLayout => {\n  const layoutType = useTypedSelector(s => s.poster.layoutType);\n  const layoutMeme = useMemo(() => {\n    switch (layoutType) {\n      case 'basic':\n        return new BasicLayout();\n      case 'weekend':\n        return new WeekendLayout();\n      case 'coachella':\n        return new CoachellaLayout();\n      default:\n        throw new AppError(`Invalid theme ${layoutType}`);\n    }\n  }, [layoutType]);\n  return layoutMeme;\n};\n","import { AppError } from '../error';\n\nexport const SPOTIFY_API_HOST = 'https://api.spotify.com';\nexport const SPOTIFY_VERSION = 'v1';\n\nexport interface SpotifyUserObject {\n  country: string;\n  display_name: string;\n  email: string;\n  href: string;\n  id: string;\n  product: string;\n  type: string;\n  uri: string;\n}\n\nexport interface SpotifyPlaylistObject {\n  description: string;\n  href: string;\n  id: string;\n  name: string;\n  tracks: string;\n  type: string;\n  uri: string;\n}\nexport interface SpotifyPagingObject<T> {\n  href: string;\n  items: T[];\n  limit: number;\n  next: string;\n  offset: string;\n  previous: string;\n  total: number;\n}\n\nexport interface SpotifyAlbumObjectSimple {\n  album_type: 'album' | 'single' | 'compilation';\n  artists: SpotifyArtistObjectSimple[];\n  href: string; // A link to the Web API endpoint providing full details of the album.\n  name: string;\n  release_date: string;\n  type: 'album';\n  uri: string;\n}\n\nexport interface SpotifyArtistObjectSimple {\n  href: string; // A link to the Web API endpoint providing full details of the artist.\n  id: string;\n  name: string;\n  type: 'artist';\n  uri: string;\n}\n\nexport interface SpotifyArtistObject {\n  album: SpotifyAlbumObjectSimple;\n  artists: SpotifyArtistObjectSimple[];\n  duration_ms: number;\n  href: string; // A link to the Web API endpoint providing full details of the track.\n  id: string;\n  name: string;\n  popularity: number;\n  track_number: number;\n  type: 'artist';\n  uri: string;\n  images: SpotifyImage[];\n}\n\nexport interface SpotifyImage {\n  height: number;\n  width: number;\n  url: string;\n}\n\ntype TimeRange = 'long_term' | 'medium_term' | 'short_term';\n\nexport abstract class SpotifyAPI {\n  constructor(public apiKey: string) {}\n\n  public abstract async getPlaylists(): Promise<\n    SpotifyPlaylistObject[] | AppError\n  >;\n  public abstract async getPlaylistTracks(\n    playlistId: string,\n  ): Promise<SpotifyArtistObject[] | AppError>;\n  public abstract async me(): Promise<SpotifyUserObject | AppError>;\n  public async topArtists?(\n    query?: any,\n  ): Promise<SpotifyArtistObject[] | AppError>;\n\n  public async getPlaylistArtists(\n    playlistId: string,\n  ): Promise<string[] | AppError> {\n    const trackData = await this.getPlaylistTracks(playlistId);\n    if (trackData instanceof AppError) return trackData;\n    return extractArtistsFromTracks(trackData);\n  }\n\n  public async noAuthAPICall(url: string): Promise<any | AppError> {\n    try {\n      const res = await fetch(url);\n      const json = await unpackResponse(res, url);\n      return json;\n    } catch (e) {\n      return e;\n    }\n  }\n}\n\nexport class SpotifyAuthTokenAPI extends SpotifyAPI {\n  public getPlaylists() {\n    return spotifyPlaylistsFromToken(this.apiKey);\n  }\n\n  public getPlaylistTracks(playlistId: string) {\n    return spotifyTracksFromPlaylist(this.apiKey, playlistId);\n  }\n\n  public async me() {\n    return spotifyMe(this.apiKey);\n  }\n\n  // public async topArtists(limit: string = '30', offset: string = '0', time_range: TimeRange = 'long_term') {\n  public async topArtists({\n    limit = '50',\n    offset = '0',\n    time_range = 'medium_term',\n  } = {}) {\n    const data = await spotifyGETHelper<SpotifyArtistObject[]>(\n      this.apiKey,\n      ['me', 'top', 'artists'],\n      { limit, offset, time_range },\n    );\n    return data;\n  }\n}\n\nexport class SpotifyUserIdAPI extends SpotifyAPI {\n  public async getPlaylists() {\n    const url = apiurl('users', this.apiKey, 'playlists');\n    return await this.noAuthAPICall(url);\n  }\n\n  public async getPlaylistTracks(playlistId: string) {\n    const url = apiurl('playlists', this.apiKey, 'tracks');\n    return await this.noAuthAPICall(url);\n  }\n\n  public async me() {\n    const url = apiurl('users', this.apiKey);\n    return await this.noAuthAPICall(url);\n  }\n}\n\ninterface SpotifyAuth {\n  authToken: string;\n  userId: string;\n}\nexport function spotifyAPIFactory(\n  spotifyAuthObj: Partial<SpotifyAuth>,\n): SpotifyAPI | null {\n  const { authToken, userId } = spotifyAuthObj;\n  if (authToken && authToken !== '') {\n    return new SpotifyAuthTokenAPI(authToken);\n  } else if (userId && userId !== '') {\n    return new SpotifyUserIdAPI(userId);\n  } else {\n    return null;\n  }\n}\n\nexport function apiurl(...endpoints: string[]): string {\n  let epList = [SPOTIFY_VERSION, ...endpoints];\n  let endpointString = epList.join('/');\n  return new URL(endpointString, SPOTIFY_API_HOST).href;\n}\n\nexport async function unpackResponse(res: Response, url: string) {\n  if (!res.ok) {\n    if (res.status === 401)\n      return new AppError(\n        `Fetch for URL ${url} returned not ok status.  Status: ${res.status}`,\n        'NoSpotifyAccess',\n      );\n    return new AppError(\n      `Fetch for URL ${url} returned not ok status.  Status: ${res.status}`,\n      'NoSpotifyAccess',\n    );\n  }\n  if (res.status !== 200) {\n    return new AppError(\n      `Fetch for URL ${url} returned a status of ${res.status}`,\n      'NoSpotifyAccess',\n    );\n  }\n  try {\n    let json = await res.json();\n    return json;\n  } catch (e) {\n    return e;\n  }\n}\n\nexport async function spotifyFetch(\n  access_token: string,\n  url: string,\n): Promise<AppError | any> {\n  const headers = {\n    Authorization: `Bearer ${access_token}`,\n  };\n  let res;\n  try {\n    res = await fetch(url, { headers });\n    return unpackResponse(res, url);\n  } catch (e) {\n    return e;\n  }\n}\n\ntype QueryParamsObject = { [k: string]: string };\nfunction objectToQueryParams(queryObject?: QueryParamsObject): string {\n  if (!queryObject) return '';\n  const USP = new URLSearchParams();\n  for (const k in queryObject) {\n    USP.append(k, queryObject[k]);\n  }\n  return USP.toString();\n}\n\nasync function spotifyGETHelper<T>(\n  accessToken: string,\n  urlParams: string[],\n  queryParams?: QueryParamsObject,\n): Promise<T | AppError> {\n  const queryStr = objectToQueryParams(queryParams);\n  const url = apiurl(...urlParams, `?${queryStr}`);\n  const data = await spotifyFetch(accessToken, url);\n  if (data instanceof AppError) return data;\n  if (!data.hasOwnProperty('items')) {\n    throw new AppError(\n      `Returned paging object does not contain items field.  Url: ${url}`,\n    );\n  }\n  return data.items;\n}\n\nexport async function spotifyMe(\n  accessToken: string,\n): Promise<SpotifyUserObject> {\n  const url = apiurl('me');\n  const data = await spotifyFetch(accessToken, url);\n  return data;\n}\n\nexport async function spotifyPlaylistsFromToken(\n  accessToken: string,\n): Promise<SpotifyPlaylistObject[] | AppError> {\n  return spotifyGETHelper(accessToken, ['me', 'playlists']);\n}\n\nexport interface SpotifyPlaylistTrackObject {\n  track: SpotifyArtistObject;\n}\nexport async function spotifyTracksFromPlaylist(\n  accessToken: string,\n  playlist_id: string,\n): Promise<SpotifyArtistObject[] | AppError> {\n  const res = await spotifyGETHelper<SpotifyPlaylistTrackObject[]>(\n    accessToken,\n    ['playlists', playlist_id, 'tracks'],\n  );\n  // Strip off the PlaylistTrackObject information\n  if (res instanceof AppError) return res;\n  return res.map(playlistTrackObject => playlistTrackObject.track);\n}\n\nexport function extractArtistsFromTracks(\n  tracks: SpotifyArtistObject[],\n): string[] {\n  let artistsSet = new Set<string>();\n  tracks.forEach(track => {\n    artistsSet.add(track.artists[0].name);\n  });\n  return [...artistsSet];\n}\n","import { useState, useRef, useEffect } from 'react';\nimport { useWindowSize } from './useWindowSize';\n\nexport type UseBoundingRectangle<T> = [DOMRect | undefined, React.RefObject<T>];\nexport function useBoundingRectangle<\n  T extends HTMLElement\n>(): UseBoundingRectangle<T> {\n  const [w, h] = useWindowSize();\n  const [rect, setrect] = useState<DOMRect | undefined>(undefined);\n  const ref = useRef<T>(null);\n  const { current } = ref;\n\n  useEffect(() => {\n    const rect = current?.getBoundingClientRect();\n    setrect(rect);\n  }, [current, w, h]);\n  return [rect, ref];\n}\n","import { useState, useLayoutEffect } from 'react';\n\n// based off of this stackoverflow comment: https://stackoverflow.com/a/19014495/1215360\nexport function useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n","export * from './useBoundingRectangle';\nexport * from './useWindowSize';\n\nexport const nowSeconds = () => {\n  return Math.floor(Date.now() / 1000);\n};\n","import useTypedSelector from '../rootReducer';\nimport { nowSeconds } from '../../utils';\n\ntype UseSpotifyAccessToken =\n  | { status: 'NONE' }\n  | { status: 'EXPIRED' }\n  | { status: 'VALID'; accessToken: string };\nconst useSpotifyAccessToken = (): UseSpotifyAccessToken => {\n  const accessToken = useTypedSelector(s => s.system.spotifyAccessToken);\n  const expire = useTypedSelector(s => s.system.spotifyAccessTokenExpire);\n  if (accessToken === '' && expire === '') return { status: 'NONE' };\n  if (accessToken === '' || expire === '')\n    throw new Error('Spotify access token/expire in invalid state');\n\n  const expireTime = parseInt(expire, 10);\n  if (expireTime < nowSeconds()) return { status: 'EXPIRED' };\n  return {\n    status: 'VALID',\n    accessToken,\n  };\n};\n\nexport default useSpotifyAccessToken;\n","import React from 'react';\nimport { Button as RSButton, ButtonProps } from 'reactstrap';\n\ninterface Props extends ButtonProps {}\n\nconst AppButton: React.FC<Props> = ({ children, ...props }) => {\n  const color = props.color ? props.color : 'primary';\n  const size = props.size ? props.size : 'sm';\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    props.onClick?.(e);\n  };\n\n  return (\n    <RSButton color={color} size={size} onClick={handleClick} {...props}>\n      {children}\n    </RSButton>\n  );\n};\n\nexport default AppButton;\n","import React, { useState } from 'react';\nimport { ListItem, createNewListItem, ListHandler, ListProps } from './List';\nimport {\n  InputGroupAddon,\n  Input,\n  InputGroup,\n  ListGroupItem,\n  ButtonGroup,\n} from 'reactstrap';\nimport AppButton from '../AppButton';\nimport '../../style.css';\n\nexport function handleActionClick<T>(\n  e: any,\n  item: ListItem<T>,\n  handler: ListHandler<T>,\n) {\n  e.preventDefault();\n  handler(item);\n}\n\ninterface Props<T> extends ListProps<T> {\n  item: ListItem<T>;\n  isEditing: boolean;\n  setIsEditing: React.Dispatch<any>;\n  disableActions: boolean;\n  rowNumber?: number;\n}\ntype FCRow<T = any> = React.FC<Props<T>>;\nconst ListRow: FCRow = ({\n  rowNumber,\n  disableActions,\n  item,\n  isEditing,\n  setIsEditing,\n  renderData,\n  ...listProps\n}) => {\n  const [editText, setEditText] = useState(item.data);\n  const {\n    handleRemove,\n    handleEdit,\n    handleSelectionChange: handleSelect,\n  } = listProps;\n  const canEdit = listProps.canEditGlobal && item.canEdit && handleEdit;\n  const canRemove = !!(listProps.canRemove && handleRemove);\n  const canSelect = !!(listProps.canSelect && handleSelect !== undefined);\n  const isSelected = !!item.isSelected;\n\n  function renderIsEditing() {\n    return (\n      <ListGroupItem>\n        <InputGroup>\n          <Input\n            value={editText}\n            style={{\n              display: 'inline',\n            }}\n            onChange={e => {\n              setEditText(e.target.value);\n            }}\n          />\n\n          <InputGroupAddon addonType='append'>\n            <AppButton\n              onClick={e => {\n                if (!handleEdit)\n                  throw Error('Expected handleEdit to exist by this point');\n                handleActionClick(\n                  e,\n                  createNewListItem(item, { data: editText }),\n                  handleEdit,\n                );\n                setEditText('');\n                setIsEditing(false);\n              }}\n            >\n              Save\n            </AppButton>\n          </InputGroupAddon>\n          <InputGroupAddon addonType='append'>\n            <AppButton\n              color='danger'\n              onClick={e => {\n                setEditText('');\n                setIsEditing(false);\n              }}\n            >\n              X\n            </AppButton>\n          </InputGroupAddon>\n        </InputGroup>\n      </ListGroupItem>\n    );\n  }\n\n  const renderActionButtons = () => {\n    return (\n      <ButtonGroup>\n        {canEdit && handleEdit && (\n          <AppButton\n            disabled={disableActions}\n            onClick={e => setIsEditing(true)}\n          >\n            Edit\n          </AppButton>\n        )}\n        {canRemove && handleRemove && (\n          <AppButton\n            disabled={disableActions}\n            onClick={e => {\n              handleActionClick(e, item, handleRemove);\n            }}\n          >\n            Remove\n          </AppButton>\n        )}\n      </ButtonGroup>\n    );\n  };\n\n  const renderRow = () => {\n    const active = canSelect && isSelected;\n    return (\n      <ListGroupItem\n        key={item.id}\n        action={canSelect}\n        active={active}\n        className='noselect d-flex justify-content-between align-items-center py-1'\n        onClick={e => listProps.handleSelectionChange?.(item)}\n      >\n        {typeof rowNumber === 'number' && `${rowNumber + 1}. `}\n        {renderData(item.data)}\n        {renderActionButtons()}\n        {active ? '✅' : '❌'}\n      </ListGroupItem>\n    );\n  };\n\n  if (isEditing) {\n    return renderIsEditing();\n  } else {\n    return renderRow();\n  }\n};\n\nexport default ListRow;\n","import React, { useState, useCallback } from 'react';\nimport ListRow from './ListRow';\nimport AppButton from '../AppButton';\nimport {\n  ButtonGroup,\n  InputGroup,\n  Input,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport produce from 'immer';\n\nconst SELECTALL = 'Select All';\nconst CLEAR = 'Unselect All';\n\nexport interface ListItem<T> {\n  id: number;\n  data: T;\n  canEdit?: boolean;\n  isSelected: boolean;\n  userAdded?: boolean;\n}\nexport type ListItems<T> = ListItem<T>[];\n// Quick and dirty way to generate probably unique ids,\n// Should serve the purpose for this list implementation\nlet _ID = -1;\nconst generateId = () => {\n  _ID++;\n  return _ID;\n};\n\nexport function createNewListItem<T>(\n  oldItem: Omit<ListItem<T>, 'id'>,\n  newItem?: Omit<Partial<ListItem<T>>, 'id'>,\n): ListItem<T> {\n  return {\n    id: generateId(),\n    ...oldItem,\n    ...newItem,\n  };\n}\n\ntype UseList<T> = [\n  ListItems<T>,\n  (items: T[]) => void,\n  Required<ListHandlers<T>>,\n];\nexport function useList<T>(\n  handlerCallbacks?: ListHandlers<T>,\n  handlerMiddleware?: ListHandlerMiddleware<T>,\n): UseList<T> {\n  const [list, setList] = useState<ListItems<T>>([]);\n\n  const setListWrapper = useCallback((dataList: T[]) => {\n    const items = dataList.map(data => {\n      return createNewListItem({\n        data: data,\n        isSelected: true,\n        canEdit: false,\n        userAdded: false,\n      });\n    });\n    setList(items);\n  }, []);\n\n  const listItemHook = attachHandlers(\n    setList,\n    handlerCallbacks,\n    handlerMiddleware,\n  );\n  return [list, setListWrapper, listItemHook];\n}\n\ntype UseReduxList<T> = {\n  items: ListItems<T>;\n  setItems: (items: ListItems<T>) => void;\n  listProps: Omit<ListProps<T>, 'items'>;\n};\nexport function useReduxList<T>(\n  selectorFN: (state: any) => ListItems<T>,\n  actionFN: (newList: ListItems<T>) => void,\n  renderData: (data: T) => JSX.Element | string,\n): UseReduxList<T> {\n  const items = useSelector(selectorFN);\n  const dispatch = useDispatch();\n  const listFNSetter: ListSetter<T> = (\n    fn: (oldList: ListItems<T>) => ListItems<T>,\n  ) => {\n    const newList = fn(items);\n    dispatch(actionFN(newList));\n  };\n  const setItems = useCallback(\n    (items: ListItems<T>) => {\n      dispatch(actionFN(items));\n    },\n    [dispatch, actionFN],\n  );\n\n  const listProps = { ...attachHandlers(listFNSetter), renderData };\n  return {\n    items: items,\n    setItems,\n    listProps,\n  };\n}\n\n// TODO use immer produce for all of this\ntype ListSetter<T> = (fn: (oldList: ListItems<T>) => ListItems<T>) => void;\nexport function attachHandlers<T>(\n  setter: ListSetter<T>,\n  handlerCallbacks?: ListHandlers<T>,\n  handlerMiddleware?: ListHandlerMiddleware<T>,\n): Required<ListHandlers<T>> {\n  return {\n    handleRemove: toRemove => {\n      setter(oldItems => {\n        return oldItems.filter(i => i.id !== toRemove.id);\n      });\n      handlerCallbacks?.handleRemove?.(toRemove);\n    },\n    handleAddRow: addedItem => {\n      const newItem = handlerMiddleware?.addRow?.(addedItem) || addedItem;\n      setter(oldItems => {\n        return [...oldItems, newItem];\n      });\n      handlerCallbacks?.handleAddRow?.(newItem);\n    },\n    handleEdit: editedItem => {\n      setter(oldItems => {\n        const newItems = [...oldItems];\n        let itemToEdit = newItems.find(i => i.id === editedItem.id);\n        if (!itemToEdit)\n          throw new Error(\n            `Could not find edited item: ${JSON.stringify(editedItem)}`,\n          );\n        itemToEdit.data = editedItem.data;\n        return newItems;\n      });\n      handlerCallbacks?.handleEdit?.(editedItem);\n    },\n    handleSelectionChange: selectedItem => {\n      setter(oldItems => {\n        return produce(oldItems, draft => {\n          const i = draft.findIndex(i => i.id === selectedItem.id);\n          draft[i].isSelected = !selectedItem.isSelected;\n          handlerCallbacks?.handleSelectionChange?.(draft[i] as ListItem<T>);\n        });\n      });\n    },\n    handleSelectAll: () => {\n      setter(oldItems => {\n        let newItems = oldItems.map(i => {\n          return { ...i, isSelected: true };\n        });\n        const selectAllMW = handlerMiddleware?.selectAll;\n        if (selectAllMW) {\n          newItems = selectAllMW(newItems);\n        }\n        return newItems;\n      });\n    },\n    handleClear: () => {\n      setter(oldItems => {\n        let newItems = oldItems.map(i => {\n          return { ...i, isSelected: false };\n        });\n        const clearMW = handlerMiddleware?.clear;\n        if (clearMW) {\n          newItems = clearMW(newItems);\n        }\n        return newItems;\n      });\n    },\n  };\n}\n\nexport interface ListHandlerMiddleware<T> {\n  addRow?: (item: ListItem<T>) => ListItem<T>;\n  selectAll?: (items: ListItems<T>) => ListItems<T>;\n  clear?: (items: ListItems<T>) => ListItems<T>;\n}\n\nexport type ListHandler<T> = (item: ListItem<T>) => void;\nexport type ListActionHandler = (actionValue: any) => void;\nexport interface ListHandlers<T> {\n  handleRemove?: ListHandler<T>;\n  handleAddRow?: ListHandler<T>;\n  handleEdit?: ListHandler<T>;\n  handleSelectionChange?: ListHandler<T>;\n  handleSelectAll?: (newItems?: ListItem<T>[]) => void;\n  handleClear?: (newItems?: ListItems<T>) => void;\n}\nexport interface ListProps<T> extends ListHandlers<T> {\n  items: ListItems<T>;\n  renderData: (data: T) => JSX.Element | string;\n  name?: string;\n  canRemove?: boolean;\n  canAddRow?: boolean;\n  canEditGlobal?: boolean;\n  canSelect?: boolean;\n  rowNumbers?: boolean;\n}\n\ntype FCList<T = any> = React.FC<ListProps<T>>;\nconst List: FCList = props => {\n  const [isAddingRow, setisAddingRow] = useState(false);\n  const [addRowText, setAddRowText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const { items } = props;\n  const canSelectAll = props.canSelect && props.handleSelectAll;\n  const canClear = props.canSelect && props.handleClear;\n\n  const renderAddRow = () => {\n    const { handleAddRow, canAddRow } = props;\n    if (!(handleAddRow && canAddRow)) return null;\n    if (isAddingRow)\n      return (\n        <div>\n          <ListGroupItem>\n            <InputGroup>\n              <Input\n                value={addRowText}\n                onChange={e => setAddRowText(e.target.value)}\n              />\n              <ButtonGroup>\n                <AppButton\n                  onClick={() => {\n                    const newItem = createNewListItem(\n                      {\n                        data: addRowText,\n                        userAdded: true,\n                        isSelected: false,\n                      },\n                      {},\n                    );\n                    setisAddingRow(false);\n                    handleAddRow(newItem);\n                    setAddRowText('');\n                  }}\n                >\n                  Save\n                </AppButton>\n                <AppButton\n                  color='danger'\n                  onClick={() => {\n                    setisAddingRow(false);\n                    setAddRowText('');\n                  }}\n                >\n                  X\n                </AppButton>\n              </ButtonGroup>\n            </InputGroup>\n          </ListGroupItem>\n        </div>\n      );\n\n    return (\n      <ListGroupItem>\n        <AppButton\n          block\n          disabled={isEditing}\n          onClick={() => setisAddingRow(true)}\n        >\n          Add Row\n        </AppButton>\n      </ListGroupItem>\n    );\n  };\n\n  const renderListActions = () => {\n    let selectAll = null;\n    let clear = null;\n    if (canSelectAll) {\n      selectAll = (\n        <AppButton\n          color='success'\n          onClick={e => {\n            props.handleSelectAll?.();\n          }}\n        >\n          {SELECTALL}\n        </AppButton>\n      );\n    }\n    if (canClear) {\n      clear = (\n        <AppButton\n          color='warning'\n          onClick={e => {\n            props.handleClear?.();\n          }}\n        >\n          {CLEAR}\n        </AppButton>\n      );\n    }\n    return (\n      <div className='list__actions'>\n        <ButtonGroup>\n          {selectAll}\n          {clear}\n        </ButtonGroup>\n      </div>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <div\n        className='list__header'\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        {props.name ? <h3>{props.name}</h3> : null}\n        {renderListActions()}\n      </div>\n    );\n  };\n\n  function renderList() {\n    const rows = items.map((item, i) => {\n      const rowNumber = props.rowNumbers ? i : undefined;\n      return (\n        <ListRow\n          key={item.id}\n          item={item}\n          setIsEditing={setIsEditing}\n          isEditing={isEditing}\n          disableActions={isAddingRow}\n          rowNumber={rowNumber}\n          {...props}\n        />\n      );\n    });\n    return (\n      <div className='list'>\n        {renderHeader()}\n        <ListGroup>\n          {rows}\n          {renderAddRow()}\n        </ListGroup>\n      </div>\n    );\n  }\n  return <div className='list'>{renderList()}</div>;\n};\n\nexport default List;\n","const client_id = 'f775b626d4784dfba4491742d5453d55'; // Your client id\nconst redirect_uri = window.location.href;\n// process.env.NODE_ENV === 'development'\n//   ? window.location.href\n//   : 'https://danieladen.github.io/festival-poster-app/'; // TODO remove hard coded redirect\nconst scope = 'user-top-read';\nconst SPOTIFY_AUTH_URL = 'https://accounts.spotify.com/authorize';\nconst SPOTIFY_ACCESS_TOKEN_FIELD = 'access_token';\nconst SPOTIFY_TOKEN_TYPE_FIELD = 'token_type';\nconst SPOTIFY_EXPIRES_IN_FIELD = 'expires_in';\n\nconst authParams = {\n  client_id,\n  response_type: 'token',\n  redirect_uri,\n  scope,\n};\n\nexport function constructSpotifyAuthURL() {\n  const queryParamsList = [];\n  for (let [k, v] of Object.entries(authParams)) {\n    queryParamsList.push(`${k}=${v}`);\n  }\n  const paramsString = queryParamsList.join('&');\n  return `${SPOTIFY_AUTH_URL}?${paramsString}`;\n}\n\ninterface SpotifyAuthData {\n  access_token: string;\n  token_type: string;\n  expires_in: string;\n  state?: string;\n}\n\nlet MEMOED_AUTH_DATA: SpotifyAuthData | undefined;\n\ntype AuthDataStatus =\n  | 'AUTHORIZED'\n  | 'NOT_AUTHORIZED'\n  | 'ACCESS_DENIED'\n  | 'ERROR';\nexport function spotifyAuthFromWindow(): {\n  status: AuthDataStatus;\n  data?: SpotifyAuthData;\n  error?: string;\n} {\n  if (MEMOED_AUTH_DATA) {\n    return {\n      status: 'AUTHORIZED',\n      data: MEMOED_AUTH_DATA,\n    };\n  }\n  const data: any = {};\n  const urlList = window.location.href.split('#');\n  if (urlList.length !== 2) return { status: 'NOT_AUTHORIZED' }; // no hash fragment\n  const queryList = urlList[1].split('&');\n  for (let queryString of queryList) {\n    let [k, v] = queryString.split('=');\n    data[k] = v;\n  }\n\n  if (data.hasOwnProperty('error')) {\n    return { status: 'ACCESS_DENIED' };\n  }\n\n  let error = '';\n  if (!data.hasOwnProperty(SPOTIFY_ACCESS_TOKEN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_ACCESS_TOKEN_FIELD}`;\n  }\n  if (!data.hasOwnProperty(SPOTIFY_EXPIRES_IN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_EXPIRES_IN_FIELD}`;\n  }\n  if (!data.hasOwnProperty(SPOTIFY_TOKEN_TYPE_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_TOKEN_TYPE_FIELD}`;\n  }\n  if (error !== '') {\n    return {\n      status: 'ERROR',\n      error,\n    };\n  }\n\n  return {\n    status: 'AUTHORIZED',\n    data,\n  };\n}\n","// import useTypedSelector from \"./store/rootReducer\";\nimport { useDispatch } from 'react-redux';\nimport { caughtGlobalError } from './store/system/systemSlice';\nimport { useCallback } from 'react';\nimport { AppErrorType } from './error';\n\n// TODO implement smarter error logging.  This will so far\n//      only catch one error at a time.\nexport const useErrorLog = () => {\n  // const error = useTypedSelector(s => s.system.error)\n  const dispatch = useDispatch();\n\n  const log = useCallback(\n    (e: Error, type?: AppErrorType) => {\n      // if (error.isError) return;\n      if (type) (e as any).type = type;\n      dispatch(caughtGlobalError(e));\n    },\n    [dispatch],\n  );\n  return log;\n};\n\nexport const useAppLog = () => {\n  const log = useCallback((data: any) => {\n    console.log(data);\n  }, []);\n  return log;\n};\n","import { useEffect, useMemo } from 'react';\nimport {\n  spotifyAPIFactory,\n  SpotifyAPI,\n  SpotifyArtistObject,\n} from './SpotifyAPI';\nimport { useDispatch } from 'react-redux';\nimport useSpotifyAccessToken from '../store/system/useSpotifyAccessToken';\nimport useTypedSelector from '../store/rootReducer';\nimport {\n  updateArtistList,\n  topArtistsTimeRangeUpdated,\n  updateMeData,\n} from '../store/Poster/posterSlice';\nimport { createNewListItem, ListItems } from '../components/List/List';\nimport { useErrorLog, useAppLog } from '../AppLog';\nimport { AppError } from '../error';\n\nexport const useSpotifyAPI = (): SpotifyAPI | null => {\n  const tokenData = useSpotifyAccessToken();\n  const elog = useErrorLog();\n  let accessToken = '';\n  if (tokenData.status === 'NONE' || tokenData.status === 'EXPIRED') {\n    const e = new AppError(\n      `Spotify Access token status not valid.  status: ${tokenData.status}`,\n    );\n    elog(e, 'NoSpotifyAccess');\n  } else {\n    accessToken = tokenData.accessToken;\n  }\n  const memoedAPI = useMemo(() => {\n    if (accessToken === '') return null;\n    return spotifyAPIFactory({ authToken: accessToken });\n  }, [accessToken]);\n\n  return memoedAPI;\n};\n\nconst artistObjectsToListItems = (artistObjects: SpotifyArtistObject[]) => {\n  return artistObjects.map(ao => {\n    return createNewListItem({\n      isSelected: true,\n      data: ao,\n      canEdit: false,\n      userAdded: false,\n    });\n  });\n};\n\nlet count = 0; // TODO remove\ntype UseSpotifyTopArtists<T> = [ListItems<T>, (newTimeRange: string) => void];\nexport const useSpotifyTopArtists = () => {\n  const timeRange = useTypedSelector(s => s.poster.topArtistsTimeRange);\n  const topArtists = useTypedSelector(s => s.poster.artists);\n\n  const api = useSpotifyAPI();\n  const dispatch = useDispatch();\n  const log = useAppLog();\n  const elog = useErrorLog();\n\n  const setTopArtistsTimeRange = (newTimeRange: string) => {\n    dispatch(topArtistsTimeRangeUpdated(newTimeRange));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!api?.topArtists)\n        throw new Error(\n          'Expected topArtists method to exist on spotify api object',\n        );\n      count++;\n      if (count > 5) throw new Error('Max Count Reached');\n      log('Using api to retreive top Artists for range ' + timeRange);\n      let topArtistsData;\n      try {\n        topArtistsData = await api.topArtists({ time_range: timeRange });\n      } catch (e) {\n        elog(e, 'NoSpotifyAccess');\n      } finally {\n        // TODO this logic probably shouldn't be in a finally block, look into removing\n        if (!topArtistsData) throw new AppError('Expected top artists data');\n        if (topArtistsData instanceof Error) {\n          elog(topArtistsData);\n          return;\n        }\n        const topArtistsList = artistObjectsToListItems(topArtistsData);\n        dispatch(updateArtistList(topArtistsList));\n      }\n    };\n    if (!api) return;\n    fetchData();\n  }, [dispatch, log, elog, api, timeRange]);\n\n  return { topArtists, setTopArtistsTimeRange };\n};\n\nexport const useMe = () => {\n  const me = useTypedSelector(s => s.poster.me);\n  const api = useSpotifyAPI();\n  const dispatch = useDispatch();\n  const log = useAppLog();\n  const elog = useErrorLog();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!api) throw new Error('Expected api');\n      log('Using spotify api to fetch me data');\n      let meData;\n      try {\n        meData = await api.me();\n      } catch (e) {\n        elog(e);\n        return;\n      }\n      if (!meData) throw new Error('Expected me data');\n      if (meData instanceof Error)\n        throw new Error('Expected error to be caught');\n      dispatch(updateMeData(meData));\n    };\n    if (!api) return;\n    fetchData();\n  }, [api, dispatch, elog, log]);\n\n  return me;\n};\n","import { PosterState } from '../../store/Poster/posterSlice';\nimport { AppError } from '../../error';\nimport useTypedSelector from '../../store/rootReducer';\nimport { createHiDPICanvas } from './CanvasUtils';\nimport { PosterTheme, usePosterTheme } from './PosterTheme';\nimport { PosterTextLayout } from './PosterTextLayout';\nimport { usePosterLayout } from './PosterTextLayout';\nimport FontFaceObserver from 'fontfaceobserver';\nimport { useMemo } from 'react';\nimport { useMe } from '../../spotify/SpotifyAPIHooks';\n\nconst DEFAULT_FESTIVAL_NAME = 'My Festival';\nconst festivalNameTemplate = (one: string) => `${one} FEST`;\n\ntype Case = 'none' | 'upper';\nexport abstract class Poster {\n  public canvas!: HTMLCanvasElement;\n  public canvasCtx!: CanvasRenderingContext2D;\n  protected _w: number = 0;\n  protected _h: number = 0;\n  public img!: HTMLImageElement;\n  protected _drawBackground: boolean = true;\n\n  protected festivalNameText: string = DEFAULT_FESTIVAL_NAME;\n  protected festivalNameCase: Case = 'upper';\n\n  protected artistCase: Case = 'upper';\n\n  constructor(\n    protected ps: PosterState,\n    public theme: PosterTheme,\n    protected layout: PosterTextLayout,\n  ) {}\n\n  protected get artistFontPkg() {\n    return this.theme.artistFontPkg;\n  }\n\n  protected get festivalNameFontPkg() {\n    return this.theme.nameFontPackage;\n  }\n\n  protected static getContext(can: HTMLCanvasElement) {\n    const ctx = can.getContext('2d');\n    if (!ctx) throw new AppError('Expected canvas context');\n    return ctx;\n  }\n\n  public setPosterSize(w: number, h: number) {\n    this._w = Math.floor(w);\n    this._h = Math.floor(h);\n  }\n\n  public get w() {\n    return this._w;\n  }\n\n  public get h() {\n    return this._h;\n  }\n\n  public get artistSeperator() {\n    return String.fromCharCode(8226);\n  }\n\n  public get festivalName(): string {\n    return this.festivalNameCase === 'upper'\n      ? this.festivalNameText.toUpperCase()\n      : this.festivalNameText;\n  }\n\n  public set display_name(displayName: string | undefined) {\n    if (!displayName) {\n      this.festivalNameText = DEFAULT_FESTIVAL_NAME;\n      return;\n    }\n    this.festivalNameText = festivalNameTemplate(displayName);\n  }\n\n  public get artistNames() {\n    let artists = this.ps.artists.filter(a => a.isSelected);\n    const artistNames = artists.map(a => {\n      let { name } = a.data;\n      if (this.artistCase === 'upper') name = name.toUpperCase();\n      return name;\n    });\n    return artistNames;\n  }\n\n  protected async load(can: HTMLCanvasElement, loadBackground: boolean) {\n    const artistFont = new FontFaceObserver(this.artistFontPkg.fontType);\n    const nameFont = new FontFaceObserver(this.festivalNameFontPkg.fontType);\n\n    const toAwait = [artistFont.load(), nameFont.load()];\n    if (loadBackground) toAwait.push(this.loadImage());\n    await this.loadImage();\n\n    try {\n      await Promise.all(toAwait);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  public async draw(can: HTMLCanvasElement, drawBackground = true) {\n    createHiDPICanvas(can, this.w, this.h);\n    await this.load(can, drawBackground);\n\n    this._drawBackground = drawBackground;\n    this.canvas = can;\n    this.canvasCtx = Poster.getContext(this.canvas);\n    this.layout.poster = this;\n    await this._draw();\n  }\n\n  protected async _draw({\n    drawBackground = true,\n    drawArtistBlock = true,\n    drawFestivalName = true,\n  } = {}) {\n    this.clear();\n    if (drawBackground && this._drawBackground)\n      await this.drawBackground(this.canvas);\n    if (drawFestivalName) this.layout.drawFestivalName();\n    if (drawArtistBlock) await this.drawArtistBlock();\n  }\n\n  protected async drawArtistBlock() {\n    const { bottom } = this.layout.drawArtistBlock();\n    const { maxPosterHeight } = this.layout;\n    if (bottom <= maxPosterHeight) return;\n    const newTop = this.layout.artistTop - (bottom - maxPosterHeight);\n    await this._draw({ drawArtistBlock: false });\n    this.layout.drawArtistBlock(newTop);\n  }\n\n  public clear() {\n    this.canvasCtx.clearRect(0, 0, this.w, this.h);\n  }\n\n  public async drawMultiCanvas(\n    can: HTMLCanvasElement,\n    backgroundCanvas?: HTMLCanvasElement,\n  ) {\n    createHiDPICanvas(can, this.w, this.h);\n    if (backgroundCanvas) await this.drawBackground(backgroundCanvas);\n    await this.draw(can, false);\n    return;\n  }\n\n  public async loadImage(imgWidth?: number, imgHeight?: number): Promise<void> {\n    this.img = new Image(imgWidth, imgHeight);\n    return new Promise(resolve => {\n      this.img.onload = () => {\n        resolve();\n      };\n      this.img.src = this.theme.backgroundImage;\n    });\n  }\n\n  public async drawBackground(can: HTMLCanvasElement): Promise<void> {\n    createHiDPICanvas(can, this.w, this.h);\n    await this.loadImage();\n    const imgWidth = this.img.naturalWidth;\n    const imgHeight = this.img.naturalHeight;\n    const ctx = Poster.getContext(can);\n    ctx.drawImage(this.img, 0, 0, imgWidth, imgHeight, 0, 0, this.w, this.h);\n  }\n}\n\nclass BasicPoster extends Poster {}\n\nexport const usePoster = (): Poster => {\n  const me = useMe();\n  const theme = usePosterTheme();\n  const layout = usePosterLayout();\n  const ps = useTypedSelector(s => s.poster);\n\n  const posterMemo = useMemo(() => {\n    const poster = new BasicPoster(ps, theme, layout);\n    poster.display_name = me?.display_name;\n    return poster;\n  }, [layout, me, ps, theme]);\n  return posterMemo;\n};\n","import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport '../../style/Poster.css';\nimport { usePoster } from './Poster';\nimport { Spinner } from 'reactstrap';\n\nexport const POSTER_CANVAS_ID = 'poster-canvas';\n\nconst aspectRatio = [4, 5]; // 4:5\nconst getH = (w: number) => w * (aspectRatio[1] / aspectRatio[0]);\nconst maxHeight = (top: number) => document.documentElement.clientHeight - top;\nconst calculatePosterDims = (r?: DOMRect) => {\n  if (!r) return { w: 0, h: 0 };\n  let w = r.width;\n  let h = getH(w);\n  while (h >= maxHeight(r.top)) {\n    w = w - 5;\n    h = getH(w);\n  }\n  w = Math.floor(w);\n  h = Math.floor(h);\n  return { w, h };\n};\n\ninterface Props {\n  parentDomRect?: DOMRect;\n}\nconst PosterCanvas: React.FC<Props> = ({ parentDomRect }) => {\n  const poster = usePoster();\n  const [curBackgroundImage, setCurBackgroundImage] = useState('');\n  const [curW, setCurW] = useState(0);\n  const [curH, setCurH] = useState(0);\n  const [isLoading, setisLoading] = useState(false);\n  const ref = useRef<HTMLCanvasElement>(null);\n  const bgRef = useRef<HTMLCanvasElement>(null);\n\n  const { w: calculatedW, h: calculatedH } = calculatePosterDims(parentDomRect);\n  const { backgroundImage } = poster.theme;\n  poster.setPosterSize(calculatedW, calculatedH);\n\n  const needBackgroundImageUpdate = useCallback(() => {\n    return (\n      backgroundImage !== curBackgroundImage ||\n      curW !== calculatedW ||\n      curH !== calculatedH\n    );\n  }, [\n    backgroundImage,\n    calculatedH,\n    calculatedW,\n    curBackgroundImage,\n    curH,\n    curW,\n  ]);\n\n  const needPosterUpdate = useCallback(() => {\n    if (calculatedW === 0 || calculatedH === 0) return false;\n    return true;\n  }, [calculatedH, calculatedW]);\n\n  useEffect(() => {\n    const drawPoster = async () => {\n      const can = ref.current;\n      if (!can) throw new Error('Unable to retreive poster canvas element');\n\n      const bgcan = bgRef.current;\n      if (!bgcan)\n        throw new Error('Unable to retreive poster background canvas element');\n\n      const redrawBG = needBackgroundImageUpdate();\n      console.log(redrawBG);\n      if (redrawBG) setisLoading(true);\n      await poster.drawMultiCanvas(can, redrawBG ? bgcan : undefined);\n      setisLoading(false);\n      setCurBackgroundImage(poster.theme.backgroundImage);\n      setCurW(poster.w);\n      setCurH(poster.h);\n    };\n    if (needPosterUpdate()) {\n      drawPoster();\n    }\n  }, [needPosterUpdate, needBackgroundImageUpdate, poster]);\n\n  const canvasStyle = (): React.CSSProperties => {\n    return {\n      position: 'absolute',\n    };\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <Spinner style={{ width: '3rem', height: '3rem', zIndex: 99 }} />\n      )}\n      <canvas id='poster-bg' ref={bgRef} style={canvasStyle()}>\n        Poster BackGround\n      </canvas>\n      <canvas ref={ref} id={POSTER_CANVAS_ID} style={canvasStyle()}>\n        Festival Poster Viewer\n      </canvas>\n    </>\n  );\n};\n\nexport default PosterCanvas;\n","import React, { useState } from 'react';\nimport { Input, FormGroup, Label } from 'reactstrap';\n\ntype UseAppSelect = [string, Props];\nexport const useAppSelect = (\n  options: SelectOption[],\n  initialValue: string,\n  changeCB?: (value: string) => void,\n): UseAppSelect => {\n  const [selectedValue, setSelectedValue] = useState(initialValue);\n  const handleChange = (value: string) => {\n    setSelectedValue(value);\n    if (changeCB) changeCB(value);\n  };\n\n  return [\n    selectedValue,\n    {\n      options,\n      selected: selectedValue,\n      handleChange,\n    },\n  ];\n};\n\nexport interface SelectOption {\n  value: string;\n  text: string;\n}\ninterface Props {\n  labelText?: string;\n  selected: string;\n  options: SelectOption[];\n  handleChange?: (value: string) => void;\n}\nconst AppSelect: React.FC<Props> = ({\n  options,\n  handleChange,\n  selected,\n  labelText,\n}) => {\n  const optionEls = options.map(opt => {\n    return (\n      <option key={opt.value} value={opt.value}>\n        {opt.text}\n      </option>\n    );\n  });\n\n  return (\n    <FormGroup>\n      {labelText && <Label>{labelText}</Label>}\n      <Input\n        type='select'\n        value={selected}\n        onChange={e => {\n          if (handleChange) handleChange(e.target.value);\n        }}\n      >\n        {optionEls}\n      </Input>\n    </FormGroup>\n  );\n};\n\nexport default AppSelect;\n","import React, { useCallback } from 'react';\nimport { Form, Row, Col } from 'reactstrap';\nimport AppSelect, { useAppSelect, SelectOption } from './AppSelect/AppSelect';\nimport AppButton from './AppButton';\nimport { usePoster } from './Poster/Poster';\nimport { changeThemeType, changeLayoutType } from '../store/Poster/posterSlice';\nimport { useDispatch } from 'react-redux';\nimport useAppSelector from '../store/rootReducer';\n\nconst useCreateImage = () => {\n  const poster = usePoster();\n  const createImage = useCallback(async () => {\n    const can = document.createElement('canvas');\n    poster.setPosterSize(1600, 2000);\n    await poster.draw(can);\n    const dataURL = can.toDataURL('png', 1.0);\n    const w = window.open('_blank');\n    w?.document.write(`<img src=${dataURL}></img>`);\n  }, [poster]);\n  return createImage;\n};\n\nconst themeOptions: SelectOption[] = [\n  {\n    text: 'Desert',\n    value: 'desert',\n  },\n  {\n    text: 'Punk',\n    value: 'punk',\n  },\n  {\n    text: 'Rock',\n    value: 'rock',\n  },\n  {\n    text: 'Galaxy',\n    value: 'galaxy',\n  },\n  {\n    text: 'TEST',\n    value: 'test',\n  },\n];\n\nconst layoutOptions: SelectOption[] = [\n  {\n    text: 'Basic',\n    value: 'basic',\n  },\n  {\n    text: 'Weekend',\n    value: 'weekend',\n  },\n  {\n    text: 'Coachella',\n    value: 'coachella',\n  },\n];\n\ninterface Props {}\n\nconst Options: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const themeType = useAppSelector(s => s.poster.themeType);\n  const layoutType = useAppSelector(s => s.poster.layoutType);\n\n  const [, themeSelectHook] = useAppSelect(themeOptions, themeType, value => {\n    dispatch(changeThemeType(value));\n  });\n  const [, layoutSelectHook] = useAppSelect(\n    layoutOptions,\n    layoutType,\n    value => {\n      dispatch(changeLayoutType(value));\n    },\n  );\n  const createImage = useCreateImage();\n  return (\n    <div className='options mb-2'>\n      <Form>\n        <Row form>\n          <Col md={6} xs={6}>\n            <AppSelect labelText={'Theme'} {...themeSelectHook} />\n          </Col>\n          <Col md={6} xs={6}>\n            <AppSelect labelText={'Text Layout'} {...layoutSelectHook} />\n          </Col>\n          <Col md={6} xs={6}></Col>\n        </Row>\n      </Form>\n      <AppButton color={'warning'} onClick={() => createImage()}>\n        Create Image\n      </AppButton>\n    </div>\n  );\n};\n\nexport default Options;\n","import React from 'react';\nimport { useSpotifyTopArtists } from '../spotify/SpotifyAPIHooks';\nimport List, { useReduxList } from './List/List';\nimport AppSelect, { useAppSelect } from './AppSelect/AppSelect';\nimport useTypedSelector, { RootState } from '../store/rootReducer';\nimport { updateArtistList } from '../store/Poster/posterSlice';\n\nconst listName = 'Top Artists';\nconst topArtistTROptions = [\n  {\n    text: 'Last 6 Months',\n    value: 'medium_term',\n  },\n  {\n    text: 'All Time',\n    value: 'long_term',\n  },\n  {\n    text: '1 Month',\n    value: 'short_term',\n  },\n];\n\ninterface Props {}\nconst TopArtistsList: React.FC<Props> = () => {\n  const { setTopArtistsTimeRange } = useSpotifyTopArtists();\n  const initialTimeRange = useTypedSelector(s => s.poster.topArtistsTimeRange);\n  const [, artistSelectProps] = useAppSelect(\n    topArtistTROptions,\n    initialTimeRange,\n    v => setTopArtistsTimeRange(v),\n  );\n\n  const { items, listProps } = useReduxList(\n    (state: RootState) => state.poster.artists,\n    updateArtistList,\n    data => {\n      const url = data.images[data.images.length - 1].url;\n      return (\n        <span>\n          <img\n            className=''\n            alt={data.name + ' photo'}\n            src={url}\n            style={{\n              height: '50px',\n              width: '50px',\n              marginRight: '5px',\n            }}\n          />\n          {data.name}\n        </span>\n      );\n    },\n  );\n\n  return (\n    <div>\n      <h3 style={{ display: 'inline-block' }}>{listName}</h3>\n      <AppSelect {...artistSelectProps} />\n      <List items={items} {...listProps} canSelect />\n    </div>\n  );\n};\n\nexport default TopArtistsList;\n","import React from 'react';\nimport { constructSpotifyAuthURL } from '../spotify/SpotifyAuth';\n\n// const centerContent = 'justify-content-md-center';\n// const uriFormText = `Enter a Spotify User URI`;\n// const userIdFormat = 'spotify:user:yourid';\n// const invalidURIMsg = `Invalid Spotify URI. Format should be '${userIdFormat}'`;\n// const testURI = 'spotify:user:1238922402'\n\n// function parseUserIdFromURI(uri: string) {\n//   const uriParts = uri.split(':')\n//   if (uriParts.length !== 3) return;\n//   if (uriParts[0] !== 'spotify' || uriParts[1] !== 'user') return;\n//   const userId = uriParts[2];\n//   if (userId === '') return;\n//   return userId;\n// }\n\ninterface Props {}\nconst SpotifyInfoCapturePanel: React.FC<Props> = () => {\n  return (\n    <div className='h-100 d-flex justify-content-center align-items-center'>\n      <a\n        className='btn btn-success'\n        role='button'\n        href={constructSpotifyAuthURL()}\n      >\n        Authorize Spotify\n      </a>\n    </div>\n  );\n};\n\nexport default SpotifyInfoCapturePanel;\n","import React from 'react';\nimport './SideNav.css';\nimport TopArtistsList from '../TopArtistsList';\nimport SpotifyInfoCapturePanel from '../SpotifyInfoCapturePanel';\nimport useSpotifyAccessToken from '../../store/system/useSpotifyAccessToken';\n\ninterface Props {\n  active: boolean;\n  toggle: () => void;\n}\nconst SideNav: React.FC<Props> = ({ active, toggle }) => {\n  const width = active ? 300 : 0;\n  const data = useSpotifyAccessToken();\n  const showAuth = data.status !== 'VALID';\n\n  return (\n    <div className='sidenav ' style={{ width }}>\n      <a href='#' className='closebtn' onClick={toggle}>\n        &times;\n      </a>\n      {showAuth && <SpotifyInfoCapturePanel />}\n      {!showAuth && <TopArtistsList />}\n    </div>\n  );\n};\n\nexport default SideNav;\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Nav } from 'reactstrap';\nimport PosterCanvas from './Poster/PosterCanvas';\nimport Options from './Options';\nimport AppButton from './AppButton';\nimport SideNav from './Toolbar/SideNav';\nimport { useBoundingRectangle } from '../utils';\n\nconst renderDevTools = () => {\n  if (process.env.NODE_ENV !== 'development') return null;\n  return (\n    <form className='form-inline'>\n      <button\n        className='btn btn-outline-danger'\n        type='button'\n        onClick={() => {\n          window.localStorage.clear();\n          window.location.reload();\n        }}\n      >\n        Clear Cache\n      </button>\n    </form>\n  );\n};\n\ninterface Props {}\nconst Home: React.FC<Props> = () => {\n  const [navActive, setNavActive] = useState(false);\n  const toggleNav = () => setNavActive(!navActive);\n  const [rect, ref] = useBoundingRectangle<HTMLDivElement>();\n\n  return (\n    <div className='home h-100'>\n      <Nav\n        className='navbar navbar-expand-sm navbar-light bg-light py-0'\n        style={{ marginBottom: '10px' }}\n      >\n        <AppButton className='mr-2' onClick={() => toggleNav()}>\n          Artists\n        </AppButton>\n        <div className='navbar-brand'>Poster App</div>\n        {renderDevTools()}\n      </Nav>\n      <SideNav active={navActive} toggle={toggleNav} />\n      <Options />\n      <div ref={ref} className='h-100'>\n        <Container className='h-100'>\n          <Row className='h-100'>\n            <Col className='d-flex justify-content-center h-100'>\n              <PosterCanvas parentDomRect={rect} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { spotifyAuthFromWindow } from '../spotify/SpotifyAuth';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { accessTokenUpdated } from '../store/system/systemSlice';\n\nconst redirectHome = () => {\n  return <Redirect to='/' />;\n};\n\ninterface Props {}\nconst SpotifyAuthorize: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  if (authData.status !== 'AUTHORIZED') {\n    console.log(`Non Authorized status: ${authData.status}`);\n    console.log(authData.error);\n    return redirectHome();\n  }\n\n  if (!authData.data)\n    throw new Error('Received authorized status without data');\n  const { access_token, expires_in } = authData.data;\n  dispatch(\n    accessTokenUpdated({\n      spotifyAccessToken: access_token,\n      spotifyAccessTokenExpire: expires_in,\n    }),\n  );\n  return redirectHome();\n};\n\nexport default SpotifyAuthorize;\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport { Switch, Route } from 'react-router-dom';\nimport SpotifyAuthorize from './components/SpotifyAuthorize';\nimport { useDispatch } from 'react-redux';\nimport { spotifyAuthFromWindow } from './spotify/SpotifyAuth';\nimport { accessTokenUpdated } from './store/system/systemSlice';\nimport { nowSeconds } from './utils';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  // TODO update this to be safer\n  if (authData.status !== 'AUTHORIZED') {\n    // console.log(`Non Authorized status: ${authData.status}`)\n    // console.log(authData.error)\n  } else {\n    if (!authData.data)\n      throw new Error('Received authorized status without data');\n    const { access_token, expires_in } = authData.data;\n    const expiresInNum = parseInt(expires_in, 10);\n    if (isNaN(expiresInNum))\n      throw new Error(`Spotify did not return a valid number ${expires_in}`);\n    const expireTime = nowSeconds() + expiresInNum;\n    window.location.hash = '';\n    dispatch(\n      accessTokenUpdated({\n        spotifyAccessToken: access_token,\n        spotifyAccessTokenExpire: expireTime.toString(),\n      }),\n    );\n  }\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/authenticate'>\n          <SpotifyAuthorize />\n        </Route>\n        <Route exact path='/'>\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './rootReducer';\n\n// TODO this is only for development but still need to figure out a better way\n// to do this\nconst VERSION = 4;\nconst key = 'version';\nconst versionStr = window.localStorage.getItem(key);\nif (!versionStr) {\n  window.localStorage.clear();\n  window.localStorage.setItem(key, VERSION.toString());\n} else {\n  const version = parseInt(versionStr, 10);\n  if (version < VERSION) {\n    window.localStorage.clear();\n    window.localStorage.setItem(key, VERSION.toString());\n  }\n}\n\n// TODO look into other options to replicate this functionality.\n// works for now but obviously not very efficient\nexport const REDUX_LOCAL_STORAGE_KEY = '__REDUX_LOCAL_STORAGE_KEY';\nconst localStorageMiddleware = (store: any) => (next: any) => (action: any) => {\n  let res = next(action);\n  let state = store.getState();\n  let json = JSON.stringify(state);\n  window.localStorage.setItem(REDUX_LOCAL_STORAGE_KEY, json);\n  return res;\n};\n\nconst initialJSON = window.localStorage.getItem(REDUX_LOCAL_STORAGE_KEY);\nconst preloadedState = initialJSON ? JSON.parse(initialJSON) : undefined;\n\nconst middleware = [localStorageMiddleware];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n  middleware,\n});\n\nexport default store;\n","import React, { useState } from 'react';\nimport { Modal, ModalProps, ModalHeader, ModalBody } from 'reactstrap';\nimport { constructSpotifyAuthURL } from '../spotify/SpotifyAuth';\nimport useTypedSelector from '../store/rootReducer';\n\ninterface SpotifyAuthRefreshModalProps extends ModalProps {\n  toggle: () => void;\n}\n// const SpotifyAuthRefreshModal: React.FC<SpotifyAuthRefreshModalProps> = props => {\n//   const { toggle } = props;\n//   return (\n//     <Modal {...props} className='spotify-auth-refresh-modal'>\n//       <ModalHeader toggle={toggle}>\n//         Spotify Is Asking To Be Authorized\n//       </ModalHeader>\n//       <ModalBody>\n//         <a href={constructSpotifyAuthURL()}>Authorize Spotify</a>\n//       </ModalBody>\n//     </Modal>\n//   );\n// };\n\ninterface Props {}\nconst GlobalError: React.FC<Props> = ({ children }) => {\n  const errorData = useTypedSelector(s => s.system.error);\n  const [spotifyAccessRefreshModal, setSpotifyAccessRefreshModal] = useState(\n    false,\n  );\n\n  const toggleModal = () =>\n    setSpotifyAccessRefreshModal(!spotifyAccessRefreshModal);\n\n  if (!errorData.isError || !errorData.error) {\n    if (spotifyAccessRefreshModal) {\n      toggleModal();\n    }\n    return <>{children}</>;\n  }\n\n  const error = errorData.error;\n\n  let errorBanner;\n  if (error) {\n    switch (error.type) {\n      case 'NoSpotifyAccess':\n        if (!spotifyAccessRefreshModal) setSpotifyAccessRefreshModal(true);\n        errorBanner = null; // Modal will take care of error message\n        break;\n      default:\n        errorBanner = <h3>Error</h3>;\n        console.error(error);\n    }\n  }\n\n  return (\n    <>\n      {/* {spotifyAccessRefreshModal && (\n        <SpotifyAuthRefreshModal\n          isOpen={spotifyAccessRefreshModal}\n          toggle={toggleModal}\n        />\n      )}\n      {errorBanner} */}\n      {children}\n    </>\n  );\n};\n\nexport default GlobalError;\n","import './index.css';\nimport './fonts/fonts.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport GlobalError from './components/GlobalError';\nimport { MemoryRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalError>\n      <Router>\n        <App />\n      </Router>\n    </GlobalError>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}