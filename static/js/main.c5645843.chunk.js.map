{"version":3,"sources":["images/desert.png","images/punk.png","images/metal.png","images/galaxy.png","images/portrait_placeholder.png","spotify/SpotifyAuth.ts","error.ts","store/system/systemSlice.ts","store/Poster/posterSlice.ts","store/SideNav/sideNavSlice.ts","store/rootReducer.ts","components/Poster/CanvasUtils.ts","components/Poster/PosterFontPackage.ts","components/Poster/PosterTheme.ts","components/Poster/TextBox.ts","components/Poster/PosterTextLayout.ts","components/Poster/Poster.ts","components/Poster/PosterCanvas.tsx","components/AppSelect/AppSelect.tsx","components/AppButton.tsx","components/Options.tsx","components/SpotifyInfoCapturePanel.tsx","utils/useBoundingRectangle.ts","utils/useWindowSize.ts","utils/index.ts","store/system/useSpotifyAccessToken.ts","components/Group/Group.tsx","components/Group/ModalGroup.tsx","components/Group/useGroup.ts","spotify/SpotifyAPI.ts","components/List/ListRow.tsx","components/List/List.tsx","AppLog.ts","spotify/SpotifyAPIHooks.ts","components/SideNav/ImportArtists.tsx","components/AppInput/AppInput.tsx","components/SideNav/ArtistsList.tsx","components/SideNav/PosterOptions.tsx","components/SideNav/SideNav.tsx","components/Home.tsx","components/SpotifyAuthorize.tsx","App.tsx","serviceWorker.ts","store/index.ts","components/GlobalError.tsx","index.tsx"],"names":["module","exports","MEMOED_AUTH_DATA","toStorable","e","type","AppError","message","name","stack","_type","this","Error","systemSlice","createSlice","initialState","spotifyAccessToken","spotifyAccessTokenExpire","error","isError","reducers","accessTokenUpdated","state","action","produce","draftState","payload","caughtGlobalError","clearGlobalError","actions","me","artists","topArtistsTimeRange","layoutType","themeType","festivalName","showDates","date1","date","date2","date3","showPresentedBy","presentedBy","headliners","posterSlice","mergePoster","changeThemeType","changeFestivalName","changeLayoutType","updateArtistList","artistRemoved","removedName","headliner","filter","ao","data","forEach","headlinerList","line","pos","findIndex","splice","mergeArtistList","unionBy","a","moveArtist","from","to","fromArtist","updateMeData","topArtistsTimeRangeUpdated","headlinerChanged","newHeadliner","headlinerRemoved","sideNavSlice","isOpen","selectedOption","sideNavSelectionChange","draft","setSideNavOpen","toggleSideNav","rootReducer","combineReducers","poster","posterSliceReducer","system","systemSliceReducer","sidenav","sidenavReducer","useTypedSelector","selector","useSelector","createHiDPICanvas","can","w","h","ctx","getContext","ratio","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Math","ceil","pixelRatio","width","height","style","setTransform","BasicFontPkg","fontType","fontColor","fontSizeRatio","strokeInfo","strokeStyle","widthRatio","offsetX","offsetY","sinfo","totalHeight","scale","lineWidth","fontLineWidth","fillStyle","str","x","y","maxWidth","strokeList","Array","isArray","save","setStrokeCtx","strokeText","restore","setTextCtx","fillText","floor","fheight","fontHeight","maxStrokeRatio","maxStrokeSize","siList","si","max","abs","PosterTheme","backgroundImage","sideMarginRatio","festivalNameTopRatio","artistTopRatio","skewText","nameFontPkg","artistFontPkg","dateFontPkg","DesertTheme","images","PunkTheme","RockTheme","GalaxyTheme","artistFont","artistColor","TestTheme","TextBox","text","fontPkg","textAlign","left","maxLeft","setup","draw","maxRight","font","fontString","_metrics","measureText","lineHeight","PosterTextLayout","_poster","dateCount","headlinerLineCount","theme","s","slice","length","fp","fullText","reduce","prev","cur","metrics","posterHeight","lines","afp","setArtistFont","currentLine","artistNames","artist","calculateTextWidth","maxPosterWidth","push","cutTrailingChar","artistSeperator","artistTopOverride","canvasCtx","baseTop","artistTop","artistLines","textBaseline","movingTop","i","printCenter","bottom","top","transform","midX","nameFontPackage","drawPresentedBy","festivalNameTop","dates","map","drawDates","initDates","date1box","pbTextBox","presentedByText","posterWidth","sideMargin","list","getHeadlinersList","BasicLayout","CoachellaLayout","textScaleDelta","currentArtistFontSize","scaleDownArtistFont","startTop","hlLine1","headlinersLine1","setHeadlinerFont","printLeft","printRight","l","WeekendLayout","dateBoxes","oneThird","day1Lines","day2Lines","day3Lines","db","dateLH","drawDate","right","drawRight","drawLeft","usePosterLayout","useMemo","BasicPoster","ps","layout","canvas","_w","_h","img","_drawBackground","festivalNameCase","artistCase","loadBackground","FontFaceObserver","nameFont","festivalNameFontPkg","toAwait","load","loadImage","Promise","all","console","drawBackground","Poster","_draw","drawArtistBlock","drawFestivalName","clear","maxPosterHeight","newTop","clearRect","backgroundCanvas","imgWidth","imgHeight","Image","resolve","onload","src","naturalWidth","naturalHeight","drawImage","String","fromCharCode","toUpperCase","isSelected","allHeadliners","includes","flat","usePoster","usePosterTheme","aspectRatio","getH","PosterCanvas","parentDomRect","useState","curBackgroundImage","setCurBackgroundImage","curW","setCurW","curH","setCurH","isLoading","setisLoading","ref","useRef","bgRef","r","document","documentElement","clientHeight","calculatePosterDims","calculatedW","calculatedH","setPosterSize","needBackgroundImageUpdate","useCallback","needPosterUpdate","useEffect","async","current","bgcan","redrawBG","drawMultiCanvas","undefined","drawPoster","Spinner","zIndex","id","position","useAppSelect","options","initialValue","changeCB","selectedValue","setSelectedValue","selected","handleChange","value","AppSelect","labelText","optionEls","opt","key","FormGroup","Label","Input","onChange","target","AppButton","children","props","color","size","onClick","stopPropagation","themeOptions","layoutOptions","Options","dispatch","useDispatch","useAppSelector","themeSelectHook","layoutSelectHook","createImage","createElement","dataURL","toDataURL","open","write","useCreateImage","className","Form","form","Col","md","xs","redirect_uri","location","href","SPOTIFY_AUTH_URL","SPOTIFY_ACCESS_TOKEN_FIELD","SPOTIFY_TOKEN_TYPE_FIELD","SPOTIFY_EXPIRES_IN_FIELD","authParams","client_id","response_type","scope","constructSpotifyAuthURL","queryParamsList","Object","entries","k","v","paramsString","join","spotifyAuthFromWindow","status","urlList","split","queryList","hasOwnProperty","SpotifyInfoCapturePanel","role","useBoundingRectangle","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","rect","setrect","getBoundingClientRect","nowSeconds","Date","now","useSpotifyAccessToken","accessToken","expire","parseInt","Group","currentPage","React","Children","child","ModalGroup","active","toggle","groupProps","groupStatePkg","submitOptions","pageHeaders","lastPage","count","pageHeader","Modal","scrollable","ModalHeader","ModalBody","ModalFooter","Button","onPrevPage","onNextPage","submitFN","useModalGroup","setCurrentPage","setState","_pageHeaders","mergeState","newState","assign","_onNextPage","_onPrevPage","useGroup","gsp","setActive","oldActive","SPOTIFY_API_HOST","SPOTIFY_VERSION","SpotifyAPI","apiKey","playlistId","getPlaylistTracks","trackData","extractArtistsFromTracks","url","fetch","res","unpackResponse","json","SpotifyAuthTokenAPI","spotifyGETHelper","playlist_id","playlistTrackObject","track","spotifyTracksFromPlaylist","spotifyMe","limit","offset","time_range","SpotifyUserIdAPI","apiurl","noAuthAPICall","endpoints","endpointString","URL","ok","spotifyFetch","access_token","headers","Authorization","objectToQueryParams","queryObject","USP","URLSearchParams","append","toString","urlParams","queryParams","queryStr","items","tracks","artistsSet","Set","add","handleActionClick","item","handler","preventDefault","ListRow","rowNumber","disableActions","isEditing","setIsEditing","renderData","listProps","editText","setEditText","handleRemove","handleEdit","handleSelect","handleSelectionChange","canEdit","canEditGlobal","canRemove","canSelect","ListGroupItem","InputGroup","display","InputGroupAddon","addonType","createNewListItem","ButtonGroup","disabled","renderRow","_ID","generateId","oldItem","newItem","useList","handlerCallbacks","handlerMiddleware","setList","dataList","userAdded","attachHandlers","setter","toRemove","oldItems","handleAddRow","addedItem","addRow","editedItem","newItems","itemToEdit","find","JSON","stringify","selectedItem","handleSelectAll","selectAllMW","selectAll","handleClear","clearMW","List","isAddingRow","setisAddingRow","addRowText","setAddRowText","canSelectAll","canClear","renderAddRow","canAddRow","block","renderHeader","justifyContent","renderListActions","rows","rowNumbers","ListGroup","renderList","useErrorLog","useSpotifyAPI","tokenData","elog","spotifyAuthObj","authToken","userId","spotifyAPIFactory","renderSpotifyArtist","alt","marginRight","SpotifyArtists","timeRange","api","setartists","topArtists","fetchData","useSpotifyTopArtists","setItems","listItemHook","playlists","SpotifyPlaylistList","ImportArtists","showAuth","setTimeRange","topArtistsPkg","topArtistProps","topArtistToggle","selectedPlaylist","playlistPkg","playlistProps","playlistToggle","AppInput","validations","changeHook","onResult","submittable","submitHook","submitText","debounceRate","inputProps","inputValue","setInputValue","inError","setinError","errorText","seterrorText","vFNs","dvHook","debounce","newText","errorVobj","isUndefined","vobj","isValid","errorMsg","handleSubmit","handleEnter","invalid","onKeyPress","FormFeedback","isTouch","navigator","msMaxTouchPoints","Row","artistObj","rowIndex","moveItem","useDrag","collect","mon","isDragging","end","getDropResult","drag","useDrop","accept","hover","monitor","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","hoverClientY","getClientOffset","drop","isOver","log","listRef","iconRef","opacity","boxShadow","cursor","class","aria-label","aria-hidden","fontSize","paddingRight","ArtistsList","listItem","uri","portraitPlaceholder","placeholder","DndProvider","backend","TouchBackend","HTML5Backend","PresentedBy","check","checked","Dates","dispatchDate","Headliners","HeadlinerSelect","noArtists","PosterOptions","buttons","Selections","onSelectChange","selectedId","b","SideNav","Home","Nav","marginBottom","Container","redirectHome","SpotifyAuthorize","authData","expires_in","App","expiresInNum","isNaN","expireTime","hash","exact","path","Boolean","hostname","match","versionStr","localStorage","getItem","setItem","initialJSON","preloadedState","parse","middleware","store","next","getState","configureStore","reducer","GlobalError","errorData","spotifyAccessRefreshModal","setSpotifyAccessRefreshModal","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5645843.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/desert.1f4ebc63.png\";","module.exports = __webpack_public_path__ + \"static/media/punk.ae35ea3b.png\";","module.exports = __webpack_public_path__ + \"static/media/metal.78fbcaff.png\";","module.exports = __webpack_public_path__ + \"static/media/galaxy.5fd0b3a6.png\";","module.exports = __webpack_public_path__ + \"static/media/portrait_placeholder.4788048f.png\";","const client_id = 'f775b626d4784dfba4491742d5453d55'; // Your client id\nconst redirect_uri = window.location.href;\n// process.env.NODE_ENV === 'development'\n//   ? window.location.href\n//   : 'https://danieladen.github.io/festival-poster-app/'; // TODO remove hard coded redirect\nconst scope = 'user-top-read';\nconst SPOTIFY_AUTH_URL = 'https://accounts.spotify.com/authorize';\nconst SPOTIFY_ACCESS_TOKEN_FIELD = 'access_token';\nconst SPOTIFY_TOKEN_TYPE_FIELD = 'token_type';\nconst SPOTIFY_EXPIRES_IN_FIELD = 'expires_in';\n\nconst authParams = {\n  client_id,\n  response_type: 'token',\n  redirect_uri,\n  scope,\n};\n\nexport function constructSpotifyAuthURL() {\n  const queryParamsList = [];\n  for (let [k, v] of Object.entries(authParams)) {\n    queryParamsList.push(`${k}=${v}`);\n  }\n  const paramsString = queryParamsList.join('&');\n  return `${SPOTIFY_AUTH_URL}?${paramsString}`;\n}\n\ninterface SpotifyAuthData {\n  access_token: string;\n  token_type: string;\n  expires_in: string;\n  state?: string;\n}\n\nlet MEMOED_AUTH_DATA: SpotifyAuthData | undefined;\n\ntype AuthDataStatus =\n  | 'AUTHORIZED'\n  | 'NOT_AUTHORIZED'\n  | 'ACCESS_DENIED'\n  | 'ERROR';\nexport function spotifyAuthFromWindow(): {\n  status: AuthDataStatus;\n  data?: SpotifyAuthData;\n  error?: string;\n} {\n  if (MEMOED_AUTH_DATA) {\n    return {\n      status: 'AUTHORIZED',\n      data: MEMOED_AUTH_DATA,\n    };\n  }\n  const data: any = {};\n  const urlList = window.location.href.split('#');\n  if (urlList.length !== 2) return { status: 'NOT_AUTHORIZED' }; // no hash fragment\n  const queryList = urlList[1].split('&');\n  for (let queryString of queryList) {\n    let [k, v] = queryString.split('=');\n    data[k] = v;\n  }\n\n  if (data.hasOwnProperty('error')) {\n    return { status: 'ACCESS_DENIED' };\n  }\n\n  let error = '';\n  if (!data.hasOwnProperty(SPOTIFY_ACCESS_TOKEN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_ACCESS_TOKEN_FIELD}`;\n  }\n  if (!data.hasOwnProperty(SPOTIFY_EXPIRES_IN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_EXPIRES_IN_FIELD}`;\n  }\n  if (!data.hasOwnProperty(SPOTIFY_TOKEN_TYPE_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_TOKEN_TYPE_FIELD}`;\n  }\n  if (error !== '') {\n    return {\n      status: 'ERROR',\n      error,\n    };\n  }\n\n  return {\n    status: 'AUTHORIZED',\n    data,\n  };\n}\n","export const toStorable = function(e: Error): AppErrorStorable {\n  const type = e instanceof AppError ? e.type : null;\n  return {\n    message: e.message,\n    name: e.name,\n    stack: e.stack,\n    type: type,\n  };\n};\n\nexport type AppErrorType = 'NoSpotifyAccess' | null;\nexport interface AppErrorStorable {\n  message: string;\n  stack: string | undefined;\n  name: string;\n  type: AppErrorType;\n}\n\nexport class AppError extends Error {\n  private _type: AppErrorType = null;\n\n  constructor(message: string, type?: AppErrorType) {\n    super(message);\n    if (type) {\n      this._type = type;\n    }\n  }\n\n  get type(): AppErrorType {\n    return this._type;\n  }\n\n  set type(type: AppErrorType) {\n    this._type = type;\n  }\n\n  toJSON() {\n    return toStorable(this);\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport produce from 'immer';\nimport { toStorable, AppErrorStorable } from '../../error';\n\nexport interface SpotifyAccessTokenPackage {\n  spotifyAccessToken: string;\n  spotifyAccessTokenExpire: string;\n}\n\nexport type GlobalErrorNone = { isError: false };\nexport type GlobalError = { isError: true; error: AppErrorStorable };\nexport type GlobalErrorPackage = GlobalError | GlobalErrorNone;\n\nexport interface SystemState extends SpotifyAccessTokenPackage {\n  error: GlobalErrorPackage;\n}\n\nconst initialState: SystemState = {\n  spotifyAccessToken: '',\n  spotifyAccessTokenExpire: '',\n  error: { isError: false },\n};\n\nconst systemSlice = createSlice({\n  name: 'system',\n  initialState,\n  reducers: {\n    accessTokenUpdated(\n      state,\n      action: PayloadAction<SpotifyAccessTokenPackage>,\n    ) {\n      return produce(state, draftState => {\n        draftState.spotifyAccessToken = action.payload.spotifyAccessToken;\n        draftState.spotifyAccessTokenExpire =\n          action.payload.spotifyAccessTokenExpire;\n        if (action.payload.spotifyAccessToken !== '') {\n          if (\n            draftState.error.isError &&\n            draftState.error.error.type === 'NoSpotifyAccess'\n          ) {\n            draftState.error = { isError: false };\n          }\n        }\n      });\n    },\n    caughtGlobalError(state, action: PayloadAction<Error>) {\n      return produce(state, draftState => {\n        draftState.error = {\n          isError: true,\n          error: toStorable(action.payload),\n        };\n      });\n    },\n    clearGlobalError(state) {\n      return produce(state, draftState => {\n        draftState.error = { isError: false };\n      });\n    },\n  },\n});\n\nexport const {\n  accessTokenUpdated,\n  caughtGlobalError,\n  clearGlobalError,\n} = systemSlice.actions;\nexport default systemSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ListItems } from '../../components/List/List';\nimport { unionBy } from 'lodash';\nimport { SpotifyUserObject } from '../../spotify/SpotifyAPI';\n\nexport const DEFAULT_FESTIVAL_NAME = 'My Festival';\nexport const DEFAULT_PRESENTED_BY = 'Presented by Red Bull';\nexport const DEFAULT_HEADLINER = 'Select a Headliner';\n\nexport interface AppArtistImage {\n  url: string;\n}\nexport interface AppArtistObject {\n  name: string;\n  uri: string;\n  images: AppArtistImage[];\n}\n\nexport interface FestivalDate {\n  date: string;\n}\n\nexport interface PosterState {\n  me: SpotifyUserObject | null;\n  artists: ListItems<AppArtistObject>;\n  topArtistsTimeRange: string; // TODO make this type safe\n  layoutType: string;\n  themeType: string;\n  festivalName: string;\n  showDates: boolean;\n  date1: FestivalDate;\n  date2: FestivalDate;\n  date3: FestivalDate;\n  showPresentedBy: boolean;\n  presentedBy: string;\n  headliners: Array<string[]>;\n}\n\nconst initialState: PosterState = {\n  me: null,\n  artists: [],\n  topArtistsTimeRange: 'medium_term',\n  layoutType: 'basic',\n  themeType: 'desert',\n  festivalName: DEFAULT_FESTIVAL_NAME,\n  showDates: true,\n  date1: { date: 'FRIDAY APRIL 10' },\n  date2: { date: 'SATURDAY APRIL 11' },\n  date3: { date: 'SUNDAY APRIL 12' },\n  showPresentedBy: true,\n  presentedBy: DEFAULT_PRESENTED_BY,\n  headliners: [[], [], []],\n};\n\nconst posterSlice = createSlice({\n  name: 'poster',\n  initialState,\n  reducers: {\n    mergePoster(state, action: PayloadAction<Partial<PosterState>>) {\n      return { ...state, ...action.payload };\n    },\n    changeThemeType(state, action: PayloadAction<string>) {\n      state.themeType = action.payload;\n    },\n    changeFestivalName(state, action: PayloadAction<string>) {\n      state.festivalName = action.payload;\n    },\n    changeLayoutType(state, action: PayloadAction<string>) {\n      state.layoutType = action.payload;\n    },\n    updateArtistList(state, action: PayloadAction<PosterState['artists']>) {\n      state.artists = action.payload;\n      state.headliners = [[], [], []];\n    },\n    artistRemoved(state, action: PayloadAction<AppArtistObject>) {\n      const { name } = action.payload;\n      const removedArtist = (ao: PosterState['artists'][0]) =>\n        ao.data.name !== name;\n      const removedName = (headliner: string) => headliner === name;\n\n      state.artists = state.artists.filter(removedArtist);\n      state.headliners.forEach((headlinerList, line) => {\n        const pos = headlinerList.findIndex(removedName);\n        if (pos > -1) state.headliners[line].splice(pos, 1);\n      });\n    },\n    mergeArtistList(state, action: PayloadAction<PosterState['artists']>) {\n      const newState = {\n        ...state,\n        artists: unionBy(state.artists, action.payload, a => a.data.name),\n      };\n      return newState;\n    },\n    moveArtist(state, action: PayloadAction<{ from: number; to: number }>) {\n      const { from, to } = action.payload;\n      if (from === to) return;\n      const fromArtist = state.artists[from];\n      if (from < to) {\n        state.artists.splice(to + 1, 0, fromArtist);\n        state.artists.splice(from, 1);\n      } else {\n        state.artists.splice(from, 1);\n        state.artists.splice(to, 0, fromArtist);\n      }\n    },\n    updateMeData(state, action: PayloadAction<SpotifyUserObject>) {},\n    topArtistsTimeRangeUpdated(state, action: PayloadAction<string>) {\n      state.topArtistsTimeRange = action.payload;\n    },\n    headlinerChanged(\n      state,\n      action: PayloadAction<{\n        line: number;\n        pos: number;\n        newHeadliner: string;\n      }>,\n    ) {\n      const { line, pos, newHeadliner } = action.payload;\n      state.headliners[line][pos] = newHeadliner;\n    },\n    headlinerRemoved(\n      state,\n      action: PayloadAction<{\n        line: number;\n        pos: number;\n      }>,\n    ) {\n      const { line, pos } = action.payload;\n      state.headliners[line].splice(pos, 1);\n    },\n  },\n});\n\nexport const {\n  changeThemeType,\n  updateArtistList,\n  topArtistsTimeRangeUpdated,\n  changeLayoutType,\n  updateMeData,\n  mergeArtistList,\n  changeFestivalName,\n  mergePoster,\n  artistRemoved,\n  moveArtist,\n  headlinerChanged,\n  headlinerRemoved,\n} = posterSlice.actions;\n\nexport default posterSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport produce from 'immer';\n\ninterface SideNavState {\n  isOpen: boolean;\n  selectedOption: number;\n}\n\nconst initialState: SideNavState = {\n  isOpen: false,\n  selectedOption: 0,\n};\n\nconst sideNavSlice = createSlice({\n  name: 'sidenav',\n  initialState,\n  reducers: {\n    sideNavSelectionChange(\n      state,\n      action: PayloadAction<SideNavState['selectedOption']>,\n    ) {\n      return produce(state, draft => {\n        draft.selectedOption = action.payload;\n      });\n    },\n    setSideNavOpen(state, action: PayloadAction<SideNavState['isOpen']>) {\n      return produce(state, draft => {\n        draft.isOpen = action.payload;\n      });\n    },\n    toggleSideNav(state) {\n      return produce(state, draft => {\n        draft.isOpen = !draft.isOpen;\n      });\n    },\n  },\n});\n\nexport const {\n  sideNavSelectionChange,\n  setSideNavOpen,\n  toggleSideNav,\n} = sideNavSlice.actions;\nexport default sideNavSlice.reducer;\n","import { combineReducers } from 'redux';\nimport systemSliceReducer from './system/systemSlice';\nimport posterSliceReducer from './Poster/posterSlice';\nimport sidenavReducer from './SideNav/sideNavSlice';\nimport { useSelector } from 'react-redux';\n\nexport const rootReducer = combineReducers({\n  poster: posterSliceReducer,\n  system: systemSliceReducer,\n  sidenav: sidenavReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst useTypedSelector = <T>(selector: (state: RootState) => T): T => {\n  const value = useSelector(selector);\n  return value;\n};\n\nexport default useTypedSelector;\n","// based off of the following comment from stackoverflow\n// https://stackoverflow.com/a/15666143/1215360\n\nexport const pixelRatio = (ctx: CanvasRenderingContext2D) => {\n  const dpr = window.devicePixelRatio || 1;\n  const bsr =\n    (ctx as any).webkitBackingStorePixelRatio ||\n    (ctx as any).mozBackingStorePixelRatio ||\n    (ctx as any).msBackingStorePixelRatio ||\n    (ctx as any).oBackingStorePixelRatio ||\n    (ctx as any).backingStorePixelRatio ||\n    1;\n  return Math.ceil(dpr / bsr);\n};\n\nexport const createHiDPICanvas = function(\n  can: HTMLCanvasElement,\n  w: number,\n  h: number,\n) {\n  const ctx = can.getContext('2d');\n  if (!ctx)\n    throw new Error('Could not get canvas context to create HiDPI canvas');\n  const ratio = pixelRatio(ctx);\n  can.width = w * ratio;\n  can.height = h * ratio;\n  can.style.width = w + 'px';\n  can.style.height = h + 'px';\n  ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\n  return can;\n};\n","export interface PosterTextStrokeInfo {\n  strokeStyle: string;\n  widthRatio: number;\n  offsetX: number;\n  offsetY: number;\n}\n\ntype StrokeInfo = PosterTextStrokeInfo | PosterTextStrokeInfo[];\nexport default class FontPkg {\n  protected strokeInfo: StrokeInfo;\n\n  constructor(\n    public fontType: string,\n    public fontColor: string,\n    public fontSizeRatio: number, // 0 to 1\n    strokeInfo?: StrokeInfo,\n  ) {\n    this.strokeInfo = strokeInfo\n      ? strokeInfo\n      : {\n          strokeStyle: 'black',\n          widthRatio: 0.2,\n          offsetX: 0,\n          offsetY: 0,\n        };\n  }\n\n  protected setStrokeCtx(\n    ctx: CanvasRenderingContext2D,\n    sinfo: PosterTextStrokeInfo,\n    totalHeight: number,\n    scale: number,\n  ) {\n    ctx.strokeStyle = sinfo.strokeStyle;\n    ctx.lineWidth = this.fontLineWidth(sinfo.widthRatio, totalHeight) * scale;\n  }\n\n  protected setTextCtx(ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = this.fontColor;\n  }\n\n  public draw(\n    str: string,\n    x: number,\n    y: number,\n    maxWidth: number,\n    ctx: CanvasRenderingContext2D,\n    totalHeight: number,\n    scale: number = 1,\n  ) {\n    const strokeList = Array.isArray(this.strokeInfo)\n      ? this.strokeInfo\n      : [this.strokeInfo];\n\n    ctx.save();\n    strokeList.forEach(sinfo => {\n      this.setStrokeCtx(ctx, sinfo, totalHeight, scale);\n      ctx.strokeText(str, x + sinfo.offsetX, y + sinfo.offsetY, maxWidth);\n    });\n    ctx.restore();\n\n    ctx.save();\n    this.setTextCtx(ctx);\n    ctx.fillText(str, x, y, maxWidth);\n    ctx.restore();\n  }\n\n  public fontHeight(totalHeight: number) {\n    return Math.floor(this.fontSizeRatio * totalHeight);\n  }\n\n  public fontString(totalHeight: number, scale = 1) {\n    const fheight = this.fontHeight(totalHeight);\n    return `${fheight * scale}px ${this.fontType}`;\n  }\n\n  public fontLineWidth(widthRatio: number, totalHeight: number): number {\n    const lineWidth = widthRatio * this.fontHeight(totalHeight);\n    return lineWidth;\n  }\n\n  private get maxStrokeRatio() {\n    if (!this.strokeInfo) return 0;\n    const siList = Array.isArray(this.strokeInfo)\n      ? this.strokeInfo\n      : [this.strokeInfo];\n    let maxStrokeRatio = 0;\n    siList.forEach(si => {\n      maxStrokeRatio = Math.max(\n        maxStrokeRatio,\n        si.widthRatio + Math.abs(si.offsetY),\n      );\n    });\n    return maxStrokeRatio;\n  }\n\n  public maxStrokeSize(totalHeight: number) {\n    return this.maxStrokeRatio * this.fontHeight(totalHeight);\n  }\n\n  public lineHeight(totalHeight: number): number {\n    const fontHeight = this.fontHeight(totalHeight);\n    return fontHeight + this.maxStrokeSize(totalHeight);\n  }\n}\n\nexport class BasicFontPkg extends FontPkg {}\n","import * as images from '../../images';\nimport useTypedSelector from '../../store/rootReducer';\nimport { AppError } from '../../error';\nimport { useMemo } from 'react';\nimport FontPkg, { BasicFontPkg } from './PosterFontPackage';\n\nexport abstract class PosterTheme {\n  public backgroundImage: string = '';\n  public sideMarginRatio: number = 0;\n  public festivalNameTopRatio = 0.05;\n  public artistTopRatio = 0.4;\n  public skewText: boolean = false;\n  public abstract nameFontPkg: FontPkg;\n  public abstract artistFontPkg: FontPkg;\n  public abstract dateFontPkg: FontPkg;\n}\n\nexport class DesertTheme extends PosterTheme {\n  backgroundImage = images.desert;\n  sideMarginRatio = 0.03;\n  artistTopRatio = 0.3;\n\n  nameFontPkg = new BasicFontPkg('TexasTango', 'orange', 0.08);\n  artistFontPkg = new BasicFontPkg('WesternBangBang', 'orange', 0.032);\n  dateFontPkg = new BasicFontPkg('WesternBangBang', 'orange', 0.032);\n}\n\nexport class PunkTheme extends PosterTheme {\n  backgroundImage = images.punk;\n  nameFontPkg = new BasicFontPkg('WesternBangBang', '#37C3E1', 0.1);\n  artistFontPkg = new BasicFontPkg('WesternBangBang', '#37C3E1', 0.033);\n  dateFontPkg = new BasicFontPkg('WesternBangBang', '#37C3E1', 0.033);\n}\n\nexport class RockTheme extends PosterTheme {\n  backgroundImage = images.metal;\n  sideMarginRatio = 0.035;\n\n  nameFontPkg = new BasicFontPkg('MadridGrunge', '#7C7170', 0.1);\n  artistFontPkg = new BasicFontPkg('PunkrockerStamp', '#7C7170', 0.032);\n  dateFontPkg = new BasicFontPkg('PunkrockerStamp', '#7C7170', 0.032);\n}\n\nexport class GalaxyTheme extends PosterTheme {\n  backgroundImage = images.galaxy;\n  festivalNameTopRatio = 0.05;\n\n  artistFont = 'Monteral';\n  artistColor = 'white';\n\n  nameFontPkg = new BasicFontPkg('Cocogoose', 'white', 0.1, {\n    widthRatio: 0.1,\n    offsetX: 0,\n    offsetY: 0,\n    strokeStyle: 'black',\n  });\n  artistFontPkg = new BasicFontPkg('Monteral', 'white', 0.02);\n  dateFontPkg = new BasicFontPkg('Monteral', 'white', 0.02);\n\n  sideMarginRatio = 0.055;\n}\n\nexport class TestTheme extends PosterTheme {\n  backgroundImage = images.galaxy;\n\n  festivalNameTopRatio = 0.05;\n  sideMarginRatio = 0.055;\n\n  nameFontPkg = new BasicFontPkg('Cocogoose', 'white', 0.1);\n  artistFontPkg = new BasicFontPkg('Monteral', 'lime', 0.02, [\n    {\n      strokeStyle: 'yellow',\n      widthRatio: 0.4,\n      offsetX: 0,\n      offsetY: 0,\n    },\n    {\n      strokeStyle: 'blue',\n      widthRatio: 0.2,\n      offsetX: 0,\n      offsetY: 0,\n    },\n  ]);\n\n  dateFontPkg = this.artistFontPkg;\n  skewText = true;\n}\n\nexport const usePosterTheme = (): PosterTheme => {\n  const themeType = useTypedSelector(s => s.poster.themeType);\n  const themeMemo = useMemo(() => {\n    switch (themeType) {\n      case 'punk':\n        return new PunkTheme();\n      case 'rock':\n        return new RockTheme();\n      case 'desert':\n        return new DesertTheme();\n      case 'galaxy':\n        return new GalaxyTheme();\n      case 'test':\n        return new TestTheme();\n      default:\n        throw new AppError(`Invalid theme ${themeType}`);\n    }\n  }, [themeType]);\n  return themeMemo;\n};\n","import FontPkg from './PosterFontPackage';\nimport { Poster } from './Poster';\n\nexport class TextBox {\n  public x!: number;\n  public y!: number;\n  public scale: number = 1;\n  constructor(\n    public ctx: CanvasRenderingContext2D,\n    public poster: Poster,\n    public text: string,\n    public fontPkg: FontPkg,\n  ) {}\n\n  public draw(\n    x: number,\n    y: number,\n    textAlign: 'left' | 'center' | 'right' = 'left',\n  ) {\n    const { ctx, fontPkg, poster, text } = this;\n    const left = x < poster.maxLeft ? poster.maxLeft : x;\n    ctx.save();\n    this.setup();\n    ctx.textAlign = textAlign;\n    fontPkg.draw(text, left, y, 10000, ctx, poster.h, this.scale);\n    ctx.restore();\n  }\n\n  public drawLeft(y: number) {\n    const { poster } = this;\n    this.draw(poster.maxLeft, y, 'left');\n  }\n\n  public drawRight(y: number) {\n    const { poster } = this;\n    this.draw(poster.maxRight, y, 'right');\n  }\n\n  protected setup() {\n    this.ctx.font = this.fontPkg.fontString(this.poster.h, this.scale);\n  }\n\n  public get lineHeight() {\n    return this.fontPkg.fontHeight(this.poster.h) * this.scale;\n  }\n\n  public get metrics() {\n    this.ctx.save();\n    this.setup();\n    const _metrics = this.ctx.measureText(this.text);\n    this.ctx.restore();\n    return {\n      width: _metrics.width,\n      height: this.lineHeight,\n    };\n  }\n}\n","import { Poster } from './Poster';\nimport useTypedSelector from '../../store/rootReducer';\nimport { AppError } from '../../error';\nimport { useMemo } from 'react';\nimport FontPkg from './PosterFontPackage';\nimport { TextBox } from './TextBox';\n\ninterface ArtistBlockMetrics {\n  top: number;\n  bottom: number;\n  height: number;\n}\n\nexport abstract class PosterTextLayout {\n  public abstract dateCount: number;\n  public abstract headlinerLineCount: number;\n  constructor(private _poster?: Poster) {}\n\n  public set poster(poster: Poster) {\n    this._poster = poster;\n  }\n\n  public get poster() {\n    if (!this._poster)\n      throw new Error('Expected poster to be set before drawing');\n    return this._poster;\n  }\n\n  public get ctx() {\n    return this.poster.canvasCtx;\n  }\n\n  public get theme() {\n    return this.poster.theme;\n  }\n\n  public fontPkg(type: 'artist' | 'name' | 'date') {\n    switch (type) {\n      case 'artist':\n        return this.theme.artistFontPkg;\n      case 'name':\n        return this.theme.nameFontPkg;\n      case 'date':\n        return this.theme.dateFontPkg;\n    }\n  }\n\n  protected cutTrailingChar(s: string) {\n    return s.slice(0, s.length - 1);\n  }\n\n  protected get midX() {\n    return Math.floor(this.posterWidth / 2);\n  }\n\n  protected get midY() {\n    return Math.floor(this.posterHeight / 2);\n  }\n\n  protected get posterWidth() {\n    return this.poster.w;\n  }\n\n  protected get maxPosterWidth() {\n    return this.posterWidth - this.sideMargin * 2;\n  }\n\n  protected get posterHeight() {\n    return this.poster.h;\n  }\n\n  public get maxPosterHeight() {\n    return this.posterHeight;\n  }\n\n  protected get sideMargin() {\n    return Math.ceil(this.theme.sideMarginRatio * this.posterWidth);\n  }\n\n  protected get festivalNameTop() {\n    return Math.floor(this.theme.festivalNameTopRatio * this.posterHeight);\n  }\n\n  protected get headlinersLine1() {\n    const list = this.poster.getHeadlinersList(0);\n    if (list.length === 0) return '';\n    return list[0];\n  }\n\n  protected get headlinersLine2() {\n    const list = this.poster.getHeadlinersList(1);\n    if (list.length === 0) return '';\n    return list[0];\n  }\n\n  protected get headlinersLine3() {\n    const list = this.poster.getHeadlinersList(2);\n    if (list.length === 0) return '';\n    return list[0];\n  }\n\n  public get artistTop() {\n    return this.posterHeight * this.theme.artistTopRatio;\n  }\n\n  protected calculateTextWidth(fp: FontPkg, ...text: string[]) {\n    const fullText = text.reduce((prev, cur) => prev + cur, '');\n    const metrics = this.ctx.measureText(fullText);\n    return Math.ceil(metrics.width + fp.maxStrokeSize(this.posterHeight) * 2);\n  }\n\n  protected setArtistFont() {\n    this.ctx.font = this.fontPkg('artist').fontString(this.posterHeight);\n  }\n\n  protected artistLines() {\n    const lines: string[] = [];\n    const poster = this.poster;\n    const afp = this.fontPkg('artist');\n\n    this.setArtistFont();\n    let currentLine = '';\n    for (let artist of this.poster.artistNames) {\n      const lineWidth = this.calculateTextWidth(afp, currentLine, artist);\n      if (lineWidth > this.maxPosterWidth) {\n        lines.push(this.cutTrailingChar(currentLine));\n        currentLine = artist + poster.artistSeperator;\n        continue;\n      }\n      currentLine = currentLine + artist + poster.artistSeperator;\n    }\n    if (currentLine !== '') lines.push(this.cutTrailingChar(currentLine));\n    return lines;\n  }\n\n  public drawArtistBlock(artistTopOverride?: number): ArtistBlockMetrics {\n    const ctx = this.poster.canvasCtx;\n    const baseTop = artistTopOverride || this.artistTop;\n    const lines = this.artistLines();\n\n    ctx.textBaseline = 'top';\n    ctx.textAlign = 'center';\n\n    const lineHeight = this.fontPkg('artist').lineHeight(this.posterHeight);\n    let movingTop: number = 0;\n    lines.forEach((line, i) => {\n      movingTop = baseTop + (i + 1) * lineHeight;\n      this.printCenter(line, movingTop, this.fontPkg('artist'));\n    });\n\n    const bottom = movingTop + lineHeight;\n\n    return {\n      top: baseTop,\n      bottom,\n      height: bottom - baseTop,\n    };\n  }\n\n  public clearTransform() {\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n\n  public setSkew() {\n    if (this.theme.skewText) this.ctx.transform(1, 0.06, 0.06, 1, -20, 0);\n  }\n\n  public printCenter(str: string, top: number, fp: FontPkg) {\n    const ctx = this.ctx;\n    ctx.save();\n    ctx.textAlign = 'center';\n    fp.draw(str, this.midX, top, this.maxPosterWidth, ctx, this.posterHeight);\n    ctx.restore();\n  }\n\n  public printLeft(str: string, top: number, fp: FontPkg) {\n    const ctx = this.ctx;\n    ctx.save();\n    ctx.textAlign = 'left';\n    fp.draw(\n      str,\n      this.poster.maxLeft,\n      top,\n      this.maxPosterWidth,\n      ctx,\n      this.posterHeight,\n    );\n    ctx.restore();\n  }\n\n  public printRight(str: string, top: number, fp: FontPkg) {\n    this.ctx.save();\n    this.ctx.textAlign = 'right';\n    fp.draw(\n      str,\n      this.poster.maxRight,\n      top,\n      this.maxPosterWidth,\n      this.ctx,\n      this.posterHeight,\n    );\n    this.ctx.restore();\n  }\n\n  public drawFestivalName() {\n    const ctx = this.poster.canvasCtx;\n    const { nameFontPkg: nameFontPackage } = this.theme;\n    ctx.save();\n\n    if (this.poster.drawPresentedBy) {\n      ctx.textBaseline = 'bottom';\n      this.drawPresentedBy(0, this.festivalNameTop);\n    }\n\n    ctx.font = nameFontPackage.fontString(this.posterHeight);\n    ctx.textBaseline = 'top';\n    ctx.textAlign = 'center';\n    ctx.strokeStyle = 'black';\n    this.printCenter(\n      this.poster.festivalName,\n      this.festivalNameTop,\n      nameFontPackage,\n    );\n    ctx.restore();\n  }\n\n  protected initDates() {\n    return this.poster.dates.map(date => {\n      return new TextBox(\n        this.ctx,\n        this.poster,\n        date.date,\n        this.fontPkg('date'),\n      );\n    });\n  }\n\n  public drawDates() {\n    if (!this.poster.drawDates) return;\n    const [date1box] = this.initDates();\n    const y =\n      this.theme.nameFontPkg.fontHeight(this.posterHeight) +\n      this.festivalNameTop +\n      date1box.metrics.height;\n    date1box.draw(this.midX, y, 'center');\n  }\n\n  public drawPresentedBy(x: number, y: number) {\n    const pbTextBox = new TextBox(\n      this.ctx,\n      this.poster,\n      this.poster.presentedByText,\n      this.theme.nameFontPkg,\n    );\n\n    pbTextBox.scale = 0.2;\n    pbTextBox.draw(x, y);\n  }\n}\n\nexport class BasicLayout extends PosterTextLayout {\n  dateCount = 1;\n  headlinerLineCount = 0;\n}\n\nexport class CoachellaLayout extends PosterTextLayout {\n  dateCount = 1;\n  headlinerLineCount = 1;\n  private textScaleDelta: number = 0.9;\n  private currentArtistFontSize = 0;\n\n  setArtistFont() {\n    const { artistFontPkg: afp } = this.theme;\n    this.currentArtistFontSize = afp.fontHeight(this.posterHeight);\n    this.ctx.font = this.theme.artistFontPkg.fontString(this.posterHeight);\n  }\n\n  scaleDownArtistFont() {\n    const { artistFontPkg: afp } = this.theme;\n    this.currentArtistFontSize =\n      this.currentArtistFontSize * this.textScaleDelta;\n    this.ctx.font = `${this.currentArtistFontSize}px ${afp.fontType}`;\n  }\n\n  setHeadlinerFont() {\n    this.ctx.font = this.theme.artistFontPkg.fontString(this.posterHeight, 2);\n  }\n\n  private get artistNames() {\n    return this.poster.artistNames;\n  }\n\n  protected artistLines() {\n    const lines: string[] = [];\n    const poster = this.poster;\n    const afp = this.fontPkg('artist');\n\n    this.setArtistFont();\n    let currentLine = '';\n    for (let artist of this.artistNames) {\n      const lineWidth = this.calculateTextWidth(afp, currentLine, artist);\n      if (lineWidth > this.maxPosterWidth) {\n        lines.push(this.cutTrailingChar(currentLine));\n        currentLine = artist + poster.artistSeperator;\n        this.scaleDownArtistFont();\n        continue;\n      }\n      currentLine = currentLine + artist + poster.artistSeperator;\n    }\n    if (currentLine !== '') lines.push(this.cutTrailingChar(currentLine));\n    return lines;\n  }\n\n  drawArtistBlock(artistTopOverride?: number): ArtistBlockMetrics {\n    const { ctx } = this;\n    ctx.save();\n    ctx.textBaseline = 'bottom';\n\n    const { artistFontPkg: afp } = this.theme;\n    const lineHeight = afp.lineHeight(this.posterHeight);\n    const startTop = artistTopOverride || this.artistTop;\n    const artistLines = this.artistLines();\n    let movingTop = startTop;\n\n    const hlLine1 = this.headlinersLine1;\n    this.setHeadlinerFont();\n    this.printLeft(hlLine1, movingTop, afp);\n    this.setArtistFont();\n    this.printRight('FRIDAY', movingTop, this.theme.artistFontPkg);\n\n    artistLines.forEach((l, i) => {\n      movingTop = movingTop + lineHeight;\n      this.printLeft(l, movingTop, afp);\n      this.scaleDownArtistFont();\n    });\n\n    ctx.restore();\n    return { bottom: 0, top: startTop, height: 0 };\n  }\n}\n\nexport class WeekendLayout extends PosterTextLayout {\n  dateCount = 3;\n  headlinerLineCount = 0;\n\n  artistFont() {\n    this.ctx.font = this.theme.artistFontPkg.fontString(this.posterHeight);\n  }\n\n  drawArtistBlock(artistTopOverride?: number): ArtistBlockMetrics {\n    const dateBoxes = this.initDates();\n    const lines = this.artistLines();\n    const oneThird = Math.ceil(lines.length / 3);\n    const day1Lines = lines.slice(0, oneThird);\n    const day2Lines = lines.slice(oneThird, oneThird * 2);\n    const day3Lines = lines.slice(oneThird * 2);\n    const { ctx } = this;\n    const { artistFontPkg: afp } = this.theme;\n    ctx.save();\n    this.artistFont();\n    ctx.textBaseline = 'top';\n\n    const lineHeight = afp.lineHeight(this.posterHeight);\n    const startTop = artistTopOverride || this.artistTop;\n    let movingTop = startTop;\n\n    dateBoxes.forEach(db => (db.scale = 2));\n    const dateLH = dateBoxes[0].lineHeight;\n\n    const drawDate = (i: number, right = false) => {\n      if (this.poster.showDates) {\n        right\n          ? dateBoxes[i].drawRight(movingTop)\n          : dateBoxes[i].drawLeft(movingTop);\n        movingTop += dateLH;\n      } else {\n        movingTop += dateLH;\n      }\n    };\n\n    drawDate(0);\n\n    day1Lines.forEach((line, i) => {\n      this.printLeft(line, movingTop, afp);\n      movingTop += lineHeight;\n    });\n\n    drawDate(1, true);\n\n    day2Lines.forEach((line, i) => {\n      this.printRight(line, movingTop, afp);\n      movingTop += lineHeight;\n    });\n\n    drawDate(2);\n\n    day3Lines.forEach(line => {\n      this.printLeft(line, movingTop, afp);\n      movingTop += lineHeight;\n    });\n\n    ctx.restore();\n    return {\n      top: startTop,\n      bottom: movingTop + lineHeight,\n      height: movingTop + lineHeight - startTop,\n    };\n  }\n\n  public drawDates() {} // Dates are drawn in the artist block for this layout\n}\n\nexport const usePosterLayout = (): PosterTextLayout => {\n  const layoutType = useTypedSelector(s => s.poster.layoutType);\n  const layoutMeme = useMemo(() => {\n    switch (layoutType) {\n      case 'basic':\n        return new BasicLayout();\n      case 'weekend':\n        return new WeekendLayout();\n      case 'coachella':\n        return new CoachellaLayout();\n      default:\n        throw new AppError(`Invalid theme ${layoutType}`);\n    }\n  }, [layoutType]);\n  return layoutMeme;\n};\n","import { PosterState } from '../../store/Poster/posterSlice';\nimport { AppError } from '../../error';\nimport useTypedSelector from '../../store/rootReducer';\nimport { createHiDPICanvas } from './CanvasUtils';\nimport { PosterTheme, usePosterTheme } from './PosterTheme';\nimport { PosterTextLayout } from './PosterTextLayout';\nimport { usePosterLayout } from './PosterTextLayout';\nimport FontFaceObserver from 'fontfaceobserver';\nimport { useMemo } from 'react';\n// import { useMe } from '../../spotify/SpotifyAPIHooks';\n\ntype Case = 'none' | 'upper';\nexport abstract class Poster {\n  public canvas!: HTMLCanvasElement;\n  public canvasCtx!: CanvasRenderingContext2D;\n  protected _w: number = 0;\n  protected _h: number = 0;\n  public img!: HTMLImageElement;\n  protected _drawBackground: boolean = true;\n\n  protected festivalNameCase: Case = 'upper';\n\n  protected artistCase: Case = 'upper';\n\n  constructor(\n    protected ps: PosterState,\n    public theme: PosterTheme,\n    protected layout: PosterTextLayout,\n  ) {}\n\n  protected get artistFontPkg() {\n    return this.theme.artistFontPkg;\n  }\n\n  protected get festivalNameFontPkg() {\n    return this.theme.nameFontPkg;\n  }\n\n  protected static getContext(can: HTMLCanvasElement) {\n    const ctx = can.getContext('2d');\n    if (!ctx) throw new AppError('Expected canvas context');\n    return ctx;\n  }\n\n  public setPosterSize(w: number, h: number) {\n    this._w = Math.floor(w);\n    this._h = Math.floor(h);\n  }\n\n  public get drawDates() {\n    return this.ps.showDates;\n  }\n\n  public get dates() {\n    return [this.ps.date1, this.ps.date2, this.ps.date3];\n  }\n\n  public get w() {\n    return this._w;\n  }\n\n  public get h() {\n    return this._h;\n  }\n\n  public get presentedByText(): string {\n    return this.ps.presentedBy;\n  }\n\n  public get drawPresentedBy(): boolean {\n    return this.ps.showPresentedBy;\n  }\n\n  public get artistSeperator() {\n    return String.fromCharCode(8226);\n  }\n\n  public get festivalName(): string {\n    return this.festivalNameCase === 'upper'\n      ? this.ps.festivalName.toUpperCase()\n      : this.ps.festivalName;\n  }\n\n  public get artistNames() {\n    let artists = this.ps.artists.filter(a => {\n      return a.isSelected && !this.allHeadliners.includes(a.data.name);\n    });\n    const artistNames = artists.map(a => {\n      let { name } = a.data;\n      if (this.artistCase === 'upper') name = name.toUpperCase();\n      return name;\n    });\n    return artistNames;\n  }\n\n  public getHeadlinersList(line: number) {\n    return this.ps.headliners[line];\n  }\n\n  protected get allHeadliners() {\n    return this.ps.headliners.flat();\n  }\n\n  protected async load(can: HTMLCanvasElement, loadBackground: boolean) {\n    const artistFont = new FontFaceObserver(this.artistFontPkg.fontType);\n    const nameFont = new FontFaceObserver(this.festivalNameFontPkg.fontType);\n\n    const toAwait = [artistFont.load(), nameFont.load()];\n    if (loadBackground) toAwait.push(this.loadImage());\n    await this.loadImage();\n\n    try {\n      await Promise.all(toAwait);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  public async draw(can: HTMLCanvasElement, drawBackground = true) {\n    createHiDPICanvas(can, this.w, this.h);\n    await this.load(can, drawBackground);\n\n    this._drawBackground = drawBackground;\n    this.canvas = can;\n    this.canvasCtx = Poster.getContext(this.canvas);\n    this.layout.poster = this;\n    await this._draw();\n  }\n\n  public get maxLeft() {\n    return this.theme.sideMarginRatio * this.h;\n  }\n\n  public get maxRight() {\n    return this.w - this.theme.sideMarginRatio * this.h;\n  }\n\n  public get showDates() {\n    return this.ps.showDates;\n  }\n\n  protected async _draw({\n    drawBackground = true,\n    drawArtistBlock = true,\n    drawFestivalName = true,\n  } = {}) {\n    this.clear();\n    if (drawBackground && this._drawBackground)\n      await this.drawBackground(this.canvas);\n    if (drawFestivalName) this.layout.drawFestivalName();\n    if (drawArtistBlock) await this.drawArtistBlock();\n    if (this.showDates) this.layout.drawDates();\n  }\n\n  protected async drawArtistBlock() {\n    const { bottom } = this.layout.drawArtistBlock();\n    const { maxPosterHeight } = this.layout;\n    if (bottom <= maxPosterHeight) return;\n    const newTop = this.layout.artistTop - (bottom - maxPosterHeight);\n    await this._draw({ drawArtistBlock: false });\n    this.layout.drawArtistBlock(newTop);\n  }\n\n  public clear() {\n    this.canvasCtx.clearRect(0, 0, this.w, this.h);\n  }\n\n  public async drawMultiCanvas(\n    can: HTMLCanvasElement,\n    backgroundCanvas?: HTMLCanvasElement,\n  ) {\n    createHiDPICanvas(can, this.w, this.h);\n    if (backgroundCanvas) await this.drawBackground(backgroundCanvas);\n    await this.draw(can, false);\n    return;\n  }\n\n  public async loadImage(imgWidth?: number, imgHeight?: number): Promise<void> {\n    this.img = new Image(imgWidth, imgHeight);\n    return new Promise(resolve => {\n      this.img.onload = () => {\n        resolve();\n      };\n      this.img.src = this.theme.backgroundImage;\n    });\n  }\n\n  public async drawBackground(can: HTMLCanvasElement): Promise<void> {\n    createHiDPICanvas(can, this.w, this.h);\n    await this.loadImage();\n    const imgWidth = this.img.naturalWidth;\n    const imgHeight = this.img.naturalHeight;\n    const ctx = Poster.getContext(can);\n    ctx.drawImage(this.img, 0, 0, imgWidth, imgHeight, 0, 0, this.w, this.h);\n  }\n}\n\nclass BasicPoster extends Poster {}\n\nexport const usePoster = (): Poster => {\n  // const me = useMe();\n  const theme = usePosterTheme();\n  const layout = usePosterLayout();\n  const ps = useTypedSelector(s => s.poster);\n\n  const posterMemo = useMemo(() => {\n    const poster = new BasicPoster(ps, theme, layout);\n    // poster.festivalName = ps.festivalName; // me?.display_name;\n    return poster;\n  }, [layout, ps, theme]);\n  return posterMemo;\n};\n","import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport '../../style/Poster.css';\nimport { usePoster } from './Poster';\nimport { Spinner } from 'reactstrap';\n\nexport const POSTER_CANVAS_ID = 'poster-canvas';\n\nconst aspectRatio = [4, 5]; // 4:5\nconst getH = (w: number) => w * (aspectRatio[1] / aspectRatio[0]);\nconst maxHeight = (top: number) => document.documentElement.clientHeight - top;\nconst calculatePosterDims = (r?: DOMRect) => {\n  if (!r) return { w: 0, h: 0 };\n  let w = r.width;\n  let h = getH(w);\n  while (h >= maxHeight(r.top)) {\n    w = w - 5;\n    h = getH(w);\n  }\n  w = Math.floor(w);\n  h = Math.floor(h);\n  return { w, h };\n};\n\ninterface Props {\n  parentDomRect?: DOMRect;\n}\nconst PosterCanvas: React.FC<Props> = ({ parentDomRect }) => {\n  const poster = usePoster();\n  const [curBackgroundImage, setCurBackgroundImage] = useState('');\n  const [curW, setCurW] = useState(0);\n  const [curH, setCurH] = useState(0);\n  const [isLoading, setisLoading] = useState(false);\n  const ref = useRef<HTMLCanvasElement>(null);\n  const bgRef = useRef<HTMLCanvasElement>(null);\n\n  const { w: calculatedW, h: calculatedH } = calculatePosterDims(parentDomRect);\n  const { backgroundImage } = poster.theme;\n  poster.setPosterSize(calculatedW, calculatedH);\n\n  const needBackgroundImageUpdate = useCallback(() => {\n    return (\n      backgroundImage !== curBackgroundImage ||\n      curW !== calculatedW ||\n      curH !== calculatedH\n    );\n  }, [\n    backgroundImage,\n    calculatedH,\n    calculatedW,\n    curBackgroundImage,\n    curH,\n    curW,\n  ]);\n\n  const needPosterUpdate = useCallback(() => {\n    if (calculatedW === 0 || calculatedH === 0) return false;\n    return true;\n  }, [calculatedH, calculatedW]);\n\n  useEffect(() => {\n    const drawPoster = async () => {\n      const can = ref.current;\n      if (!can) throw new Error('Unable to retreive poster canvas element');\n\n      const bgcan = bgRef.current;\n      if (!bgcan)\n        throw new Error('Unable to retreive poster background canvas element');\n\n      const redrawBG = needBackgroundImageUpdate();\n      if (redrawBG) setisLoading(true);\n      await poster.drawMultiCanvas(can, redrawBG ? bgcan : undefined);\n      setisLoading(false);\n      setCurBackgroundImage(poster.theme.backgroundImage);\n      setCurW(poster.w);\n      setCurH(poster.h);\n    };\n    if (needPosterUpdate()) {\n      drawPoster();\n    }\n  }, [needPosterUpdate, needBackgroundImageUpdate, poster]);\n\n  const canvasStyle = (): React.CSSProperties => {\n    return {\n      position: 'absolute',\n    };\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <Spinner style={{ width: '3rem', height: '3rem', zIndex: 99 }} />\n      )}\n      <canvas id='poster-bg' ref={bgRef} style={canvasStyle()}>\n        Poster BackGround\n      </canvas>\n      <canvas ref={ref} id={POSTER_CANVAS_ID} style={canvasStyle()}>\n        Festival Poster Viewer\n      </canvas>\n    </>\n  );\n};\n\nexport default PosterCanvas;\n","import React, { useState } from 'react';\nimport { Input, FormGroup, Label } from 'reactstrap';\n\ntype UseAppSelect = [string, Props];\nexport const useAppSelect = (\n  options: SelectOption[],\n  initialValue: string,\n  changeCB?: (value: string) => void,\n): UseAppSelect => {\n  const [selectedValue, setSelectedValue] = useState(initialValue);\n  const handleChange = (value: string) => {\n    setSelectedValue(value);\n    if (changeCB) changeCB(value);\n  };\n\n  return [\n    selectedValue,\n    {\n      options,\n      selected: selectedValue,\n      handleChange,\n    },\n  ];\n};\n\nexport interface SelectOption {\n  value: string;\n  text: string;\n}\ninterface Props {\n  labelText?: string;\n  selected: string;\n  options: SelectOption[];\n  handleChange?: (value: string) => void;\n}\nconst AppSelect: React.FC<Props> = ({\n  options,\n  handleChange,\n  selected,\n  labelText,\n}) => {\n  const optionEls = options.map(opt => {\n    return (\n      <option key={opt.value} value={opt.value}>\n        {opt.text}\n      </option>\n    );\n  });\n\n  return (\n    <FormGroup>\n      {labelText && <Label>{labelText}</Label>}\n      <Input\n        type='select'\n        value={selected}\n        onChange={e => {\n          if (handleChange) handleChange(e.target.value);\n        }}\n      >\n        {optionEls}\n      </Input>\n    </FormGroup>\n  );\n};\n\nexport default AppSelect;\n","import React from 'react';\nimport { Button as RSButton, ButtonProps } from 'reactstrap';\n\ninterface Props extends ButtonProps {}\n\nconst AppButton: React.FC<Props> = ({ children, ...props }) => {\n  const color = props.color ? props.color : 'primary';\n  const size = props.size ? props.size : 'sm';\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    props.onClick?.(e);\n  };\n\n  return (\n    <RSButton color={color} size={size} onClick={handleClick} {...props}>\n      {children}\n    </RSButton>\n  );\n};\n\nexport default AppButton;\n","import React, { useCallback } from 'react';\nimport { Form, Row, Col } from 'reactstrap';\nimport AppSelect, { useAppSelect, SelectOption } from './AppSelect/AppSelect';\nimport AppButton from './AppButton';\nimport { usePoster } from './Poster/Poster';\nimport { changeThemeType, changeLayoutType } from '../store/Poster/posterSlice';\nimport { useDispatch } from 'react-redux';\nimport useAppSelector from '../store/rootReducer';\n\nconst useCreateImage = () => {\n  const poster = usePoster();\n  const createImage = useCallback(async () => {\n    const can = document.createElement('canvas');\n    poster.setPosterSize(1600, 2000);\n    await poster.draw(can);\n    const dataURL = can.toDataURL('png', 1.0);\n    const w = window.open('_blank');\n    w?.document.write(`<img src=${dataURL}></img>`);\n  }, [poster]);\n  return createImage;\n};\n\nconst themeOptions: SelectOption[] = [\n  {\n    text: 'Desert',\n    value: 'desert',\n  },\n  {\n    text: 'Punk',\n    value: 'punk',\n  },\n  {\n    text: 'Rock',\n    value: 'rock',\n  },\n  {\n    text: 'Galaxy',\n    value: 'galaxy',\n  },\n  {\n    text: 'TEST',\n    value: 'test',\n  },\n];\n\nconst layoutOptions: SelectOption[] = [\n  {\n    text: 'Basic',\n    value: 'basic',\n  },\n  {\n    text: 'Weekend',\n    value: 'weekend',\n  },\n  {\n    text: 'Coachella',\n    value: 'coachella',\n  },\n];\n\ninterface Props {}\n\nconst Options: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const themeType = useAppSelector(s => s.poster.themeType);\n  const layoutType = useAppSelector(s => s.poster.layoutType);\n\n  const [, themeSelectHook] = useAppSelect(themeOptions, themeType, value => {\n    dispatch(changeThemeType(value));\n  });\n  const [, layoutSelectHook] = useAppSelect(\n    layoutOptions,\n    layoutType,\n    value => {\n      dispatch(changeLayoutType(value));\n    },\n  );\n  const createImage = useCreateImage();\n  return (\n    <div className='options mb-2'>\n      <Form>\n        <Row form>\n          <Col md={6} xs={6}>\n            <AppSelect labelText={'Theme'} {...themeSelectHook} />\n          </Col>\n          <Col md={6} xs={6}>\n            <AppSelect labelText={'Text Layout'} {...layoutSelectHook} />\n          </Col>\n          <Col md={6} xs={6}></Col>\n        </Row>\n      </Form>\n      <AppButton color={'warning'} onClick={() => createImage()}>\n        Create Image\n      </AppButton>\n    </div>\n  );\n};\n\nexport default Options;\n","import React from 'react';\nimport { constructSpotifyAuthURL } from '../spotify/SpotifyAuth';\n\n// const centerContent = 'justify-content-md-center';\n// const uriFormText = `Enter a Spotify User URI`;\n// const userIdFormat = 'spotify:user:yourid';\n// const invalidURIMsg = `Invalid Spotify URI. Format should be '${userIdFormat}'`;\n// const testURI = 'spotify:user:1238922402'\n\n// function parseUserIdFromURI(uri: string) {\n//   const uriParts = uri.split(':')\n//   if (uriParts.length !== 3) return;\n//   if (uriParts[0] !== 'spotify' || uriParts[1] !== 'user') return;\n//   const userId = uriParts[2];\n//   if (userId === '') return;\n//   return userId;\n// }\n\ninterface Props {}\nconst SpotifyInfoCapturePanel: React.FC<Props> = () => {\n  return (\n    <div className='h-100 d-flex justify-content-center align-items-center'>\n      <a\n        className='btn btn-success'\n        role='button'\n        href={constructSpotifyAuthURL()}\n      >\n        Authorize Spotify\n      </a>\n    </div>\n  );\n};\n\nexport default SpotifyInfoCapturePanel;\n","import { useState, useRef, useEffect } from 'react';\nimport { useWindowSize } from './useWindowSize';\n\nexport type UseBoundingRectangle<T> = [DOMRect | undefined, React.RefObject<T>];\nexport function useBoundingRectangle<\n  T extends HTMLElement\n>(): UseBoundingRectangle<T> {\n  const [w, h] = useWindowSize();\n  const [rect, setrect] = useState<DOMRect | undefined>(undefined);\n  const ref = useRef<T>(null);\n  const { current } = ref;\n\n  useEffect(() => {\n    const rect = current?.getBoundingClientRect();\n    setrect(rect);\n  }, [current, w, h]);\n  return [rect, ref];\n}\n","import { useState, useLayoutEffect } from 'react';\n\n// based off of this stackoverflow comment: https://stackoverflow.com/a/19014495/1215360\nexport function useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n","export * from './useBoundingRectangle';\nexport * from './useWindowSize';\n\nexport const nowSeconds = () => {\n  return Math.floor(Date.now() / 1000);\n};\n","import useTypedSelector from '../rootReducer';\nimport { nowSeconds } from '../../utils';\n\ntype UseSpotifyAccessToken =\n  | { status: 'NONE' }\n  | { status: 'EXPIRED' }\n  | { status: 'VALID'; accessToken: string };\nconst useSpotifyAccessToken = (): UseSpotifyAccessToken => {\n  const accessToken = useTypedSelector(s => s.system.spotifyAccessToken);\n  const expire = useTypedSelector(s => s.system.spotifyAccessTokenExpire);\n  if (accessToken === '' && expire === '') return { status: 'NONE' };\n  if (accessToken === '' || expire === '')\n    throw new Error('Spotify access token/expire in invalid state');\n\n  const expireTime = parseInt(expire, 10);\n  if (expireTime < nowSeconds()) return { status: 'EXPIRED' };\n  return {\n    status: 'VALID',\n    accessToken,\n  };\n};\n\nexport default useSpotifyAccessToken;\n","import React from 'react';\nimport './Group.css';\n\nexport interface GroupPageProps<T> {\n  groupStatePkg: GroupStatePkg<T>;\n}\n\nexport type GroupStatePkg<T> = Readonly<{\n  state: T;\n  mergeState: (newState: Partial<T>) => void;\n}>;\n\nexport interface GroupSubmitOption<T> {\n  text: string;\n  submitFN: (state: T) => void;\n  color?: 'success' | 'primary' | 'secondary';\n}\nexport type GroupSubmitOptions<T> =\n  | GroupSubmitOption<T>\n  | GroupSubmitOption<T>[];\nexport interface GroupProps<T = any> {\n  pageHeaders: string[];\n  onNextPage: () => void;\n  onPrevPage: () => void;\n  submitOptions: GroupSubmitOptions<T>;\n  currentPage: number;\n  groupStatePkg: GroupStatePkg<T>;\n}\nexport const Group: React.FC<GroupProps> = ({ children, currentPage }) => {\n  return (\n    <>\n      {React.Children.map(children, (child, i) => {\n        return (\n          <div className={`${i !== currentPage && 'hidden'}`}>{child}</div>\n        );\n      })}\n    </>\n  );\n};\n\n// export interface PageProps {}\n// export const Page: React.FC<PageProps> = () => {};\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Group, GroupProps } from './Group';\n\nexport interface ModalGroupProps extends GroupProps {\n  active: boolean;\n  toggle: () => void;\n}\n\nexport const ModalGroup: React.FC<ModalGroupProps> = ({\n  children,\n  active,\n  toggle,\n  ...groupProps\n}) => {\n  const { groupStatePkg, currentPage, submitOptions, pageHeaders } = groupProps;\n  const lastPage = React.Children.count(children) - 1;\n  const pageHeader = pageHeaders[currentPage];\n\n  const renderSubmit = () => {\n    const submits = Array.isArray(submitOptions)\n      ? submitOptions\n      : [submitOptions];\n    return submits.map(s => (\n      <Button\n        color={s.color || 'success'}\n        onClick={() => {\n          s.submitFN(groupStatePkg.state);\n          toggle();\n        }}\n      >\n        {s.text}\n      </Button>\n    ));\n  };\n\n  return (\n    <div>\n      <Modal scrollable size='lg' isOpen={active}>\n        <ModalHeader toggle={toggle}>{pageHeader}</ModalHeader>\n        <ModalBody>\n          <Group {...groupProps}>{children}</Group>\n        </ModalBody>\n        <ModalFooter>\n          {currentPage > 0 && (\n            <Button color='secondary' onClick={groupProps.onPrevPage}>\n              Previous\n            </Button>\n          )}\n          {currentPage < lastPage && (\n            <Button color='primary' onClick={groupProps.onNextPage}>\n              Next\n            </Button>\n          )}\n          {currentPage === lastPage && renderSubmit()}\n          {\n            <Button color='danger' onClick={() => toggle()}>\n              Cancel\n            </Button>\n          }\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n","import { GroupProps, GroupSubmitOptions } from './Group';\nimport { ModalGroupProps } from '.';\nimport { useState, useMemo, useCallback } from 'react';\nimport produce from 'immer';\nimport { GroupStatePkg } from '.';\n\nexport type UseGroup<T> = [GroupStatePkg<T>, GroupProps<T>];\nexport const useGroup = <T>(\n  pageHeaders: string[],\n  submitOptions: GroupSubmitOptions<T>,\n  initialState: T,\n): UseGroup<T> => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [state, setState] = useState<T>(initialState);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const _pageHeaders = useMemo(() => pageHeaders, []);\n\n  const mergeState = useCallback((newState: Partial<T>) => {\n    setState(\n      produce(draft => {\n        // draft = { ...draft, ...newState };\n        Object.assign(draft, newState);\n      }),\n    );\n  }, []);\n\n  const _onNextPage = useCallback(() => {\n    setCurrentPage(currentPage + 1);\n  }, [currentPage]);\n\n  const _onPrevPage = useCallback(() => {\n    if (currentPage === 0) return;\n    setCurrentPage(currentPage - 1);\n  }, [currentPage]);\n\n  // const groupStatePkg = useMemo(\n  //   () => ({\n  //     state,\n  //     mergeState,\n  //   }),\n  //   [mergeState, state],\n  // );\n\n  const groupStatePkg = {\n    state,\n    mergeState,\n  };\n\n  return [\n    groupStatePkg,\n    {\n      groupStatePkg,\n      pageHeaders: _pageHeaders,\n      currentPage,\n      onNextPage: _onNextPage,\n      onPrevPage: _onPrevPage,\n      submitOptions,\n    },\n  ];\n};\n\nexport type UseModalGroup<T> = [GroupStatePkg<T>, ModalGroupProps, () => void];\nexport const useModalGroup = <T>(\n  pageHeaders: string[],\n  submitOptions: GroupSubmitOptions<T>,\n  initialState: T,\n): UseModalGroup<T> => {\n  const [gsp, groupProps] = useGroup(pageHeaders, submitOptions, initialState);\n  const [active, setActive] = useState(false);\n\n  const toggle = useCallback(() => {\n    setActive(oldActive => !oldActive);\n  }, []);\n\n  return [\n    gsp,\n    {\n      ...groupProps,\n      toggle,\n      active,\n    },\n    toggle,\n  ];\n};\n","import { AppError } from '../error';\n\nexport const SPOTIFY_API_HOST = 'https://api.spotify.com';\nexport const SPOTIFY_VERSION = 'v1';\n\nexport interface SpotifyUserObject {\n  country: string;\n  display_name: string;\n  email: string;\n  href: string;\n  id: string;\n  product: string;\n  type: string;\n  uri: string;\n}\n\nexport interface SpotifyPlaylistObject {\n  description: string;\n  href: string;\n  id: string;\n  name: string;\n  tracks: string;\n  type: string;\n  uri: string;\n}\nexport interface SpotifyPagingObject<T> {\n  href: string;\n  items: T[];\n  limit: number;\n  next: string;\n  offset: string;\n  previous: string;\n  total: number;\n}\n\nexport interface SpotifyAlbumObjectSimple {\n  album_type: 'album' | 'single' | 'compilation';\n  artists: SpotifyArtistObjectSimple[];\n  href: string; // A link to the Web API endpoint providing full details of the album.\n  name: string;\n  release_date: string;\n  type: 'album';\n  uri: string;\n}\n\nexport interface SpotifyArtistObjectSimple {\n  href: string; // A link to the Web API endpoint providing full details of the artist.\n  id: string;\n  name: string;\n  type: 'artist';\n  uri: string;\n}\n\nexport interface SpotifyArtistObject {\n  album: SpotifyAlbumObjectSimple;\n  artists: SpotifyArtistObjectSimple[];\n  duration_ms: number;\n  href: string; // A link to the Web API endpoint providing full details of the track.\n  id: string;\n  name: string;\n  popularity: number;\n  track_number: number;\n  type: 'artist';\n  uri: string;\n  images: SpotifyImage[];\n}\n\nexport interface SpotifyImage {\n  height: number;\n  width: number;\n  url: string;\n}\n\ntype TimeRange = 'long_term' | 'medium_term' | 'short_term';\n\nexport abstract class SpotifyAPI {\n  constructor(public apiKey: string) {}\n\n  public abstract async getPlaylists(): Promise<\n    SpotifyPlaylistObject[] | AppError\n  >;\n  public abstract async getPlaylistTracks(\n    playlistId: string,\n  ): Promise<SpotifyArtistObject[] | AppError>;\n  public abstract async me(): Promise<SpotifyUserObject | AppError>;\n  public async topArtists?(\n    query?: any,\n  ): Promise<SpotifyArtistObject[] | AppError>;\n\n  public async getPlaylistArtists(\n    playlistId: string,\n  ): Promise<string[] | AppError> {\n    const trackData = await this.getPlaylistTracks(playlistId);\n    if (trackData instanceof AppError) return trackData;\n    return extractArtistsFromTracks(trackData);\n  }\n\n  public async noAuthAPICall(url: string): Promise<any | AppError> {\n    try {\n      const res = await fetch(url);\n      const json = await unpackResponse(res, url);\n      return json;\n    } catch (e) {\n      return e;\n    }\n  }\n}\n\nexport class SpotifyAuthTokenAPI extends SpotifyAPI {\n  public getPlaylists() {\n    return spotifyPlaylistsFromToken(this.apiKey);\n  }\n\n  public getPlaylistTracks(playlistId: string) {\n    return spotifyTracksFromPlaylist(this.apiKey, playlistId);\n  }\n\n  public async me() {\n    return spotifyMe(this.apiKey);\n  }\n\n  // public async topArtists(limit: string = '30', offset: string = '0', time_range: TimeRange = 'long_term') {\n  public async topArtists({\n    limit = '50',\n    offset = '0',\n    time_range = 'medium_term',\n  } = {}) {\n    const data = await spotifyGETHelper<SpotifyArtistObject[]>(\n      this.apiKey,\n      ['me', 'top', 'artists'],\n      { limit, offset, time_range },\n    );\n    return data;\n  }\n}\n\nexport class SpotifyUserIdAPI extends SpotifyAPI {\n  public async getPlaylists() {\n    const url = apiurl('users', this.apiKey, 'playlists');\n    return await this.noAuthAPICall(url);\n  }\n\n  public async getPlaylistTracks(playlistId: string) {\n    const url = apiurl('playlists', this.apiKey, 'tracks');\n    return await this.noAuthAPICall(url);\n  }\n\n  public async me() {\n    const url = apiurl('users', this.apiKey);\n    return await this.noAuthAPICall(url);\n  }\n}\n\ninterface SpotifyAuth {\n  authToken: string;\n  userId: string;\n}\nexport function spotifyAPIFactory(\n  spotifyAuthObj: Partial<SpotifyAuth>,\n): SpotifyAPI | null {\n  const { authToken, userId } = spotifyAuthObj;\n  if (authToken && authToken !== '') {\n    return new SpotifyAuthTokenAPI(authToken);\n  } else if (userId && userId !== '') {\n    return new SpotifyUserIdAPI(userId);\n  } else {\n    return null;\n  }\n}\n\nexport function apiurl(...endpoints: string[]): string {\n  let epList = [SPOTIFY_VERSION, ...endpoints];\n  let endpointString = epList.join('/');\n  return new URL(endpointString, SPOTIFY_API_HOST).href;\n}\n\nexport async function unpackResponse(res: Response, url: string) {\n  if (!res.ok) {\n    if (res.status === 401)\n      return new AppError(\n        `Fetch for URL ${url} returned not ok status.  Status: ${res.status}`,\n        'NoSpotifyAccess',\n      );\n    return new AppError(\n      `Fetch for URL ${url} returned not ok status.  Status: ${res.status}`,\n      'NoSpotifyAccess',\n    );\n  }\n  if (res.status !== 200) {\n    return new AppError(\n      `Fetch for URL ${url} returned a status of ${res.status}`,\n      'NoSpotifyAccess',\n    );\n  }\n  try {\n    let json = await res.json();\n    return json;\n  } catch (e) {\n    return e;\n  }\n}\n\nexport async function spotifyFetch(\n  access_token: string,\n  url: string,\n): Promise<AppError | any> {\n  const headers = {\n    Authorization: `Bearer ${access_token}`,\n  };\n  let res;\n  try {\n    res = await fetch(url, { headers });\n    return unpackResponse(res, url);\n  } catch (e) {\n    return e;\n  }\n}\n\ntype QueryParamsObject = { [k: string]: string };\nfunction objectToQueryParams(queryObject?: QueryParamsObject): string {\n  if (!queryObject) return '';\n  const USP = new URLSearchParams();\n  for (const k in queryObject) {\n    USP.append(k, queryObject[k]);\n  }\n  return USP.toString();\n}\n\nasync function spotifyGETHelper<T>(\n  accessToken: string,\n  urlParams: string[],\n  queryParams?: QueryParamsObject,\n): Promise<T | AppError> {\n  const queryStr = objectToQueryParams(queryParams);\n  const url = apiurl(...urlParams, `?${queryStr}`);\n  const data = await spotifyFetch(accessToken, url);\n  if (data instanceof AppError) return data;\n  if (!data.hasOwnProperty('items')) {\n    throw new AppError(\n      `Returned paging object does not contain items field.  Url: ${url}`,\n    );\n  }\n  return data.items;\n}\n\nexport async function spotifyMe(\n  accessToken: string,\n): Promise<SpotifyUserObject> {\n  const url = apiurl('me');\n  const data = await spotifyFetch(accessToken, url);\n  return data;\n}\n\nexport async function spotifyPlaylistsFromToken(\n  accessToken: string,\n): Promise<SpotifyPlaylistObject[] | AppError> {\n  return spotifyGETHelper(accessToken, ['me', 'playlists']);\n}\n\nexport interface SpotifyPlaylistTrackObject {\n  track: SpotifyArtistObject;\n}\nexport async function spotifyTracksFromPlaylist(\n  accessToken: string,\n  playlist_id: string,\n): Promise<SpotifyArtistObject[] | AppError> {\n  const res = await spotifyGETHelper<SpotifyPlaylistTrackObject[]>(\n    accessToken,\n    ['playlists', playlist_id, 'tracks'],\n  );\n  // Strip off the PlaylistTrackObject information\n  if (res instanceof AppError) return res;\n  return res.map(playlistTrackObject => playlistTrackObject.track);\n}\n\nexport function extractArtistsFromTracks(\n  tracks: SpotifyArtistObject[],\n): string[] {\n  let artistsSet = new Set<string>();\n  tracks.forEach(track => {\n    artistsSet.add(track.artists[0].name);\n  });\n  return [...artistsSet];\n}\n","import React, { useState } from 'react';\nimport { ListItem, createNewListItem, ListHandler, ListProps } from './List';\nimport {\n  InputGroupAddon,\n  Input,\n  InputGroup,\n  ListGroupItem,\n  ButtonGroup,\n} from 'reactstrap';\nimport AppButton from '../AppButton';\nimport '../../style.css';\n\nexport function handleActionClick<T>(\n  e: any,\n  item: ListItem<T>,\n  handler: ListHandler<T>,\n) {\n  e.preventDefault();\n  handler(item);\n}\n\ninterface Props<T> extends ListProps<T> {\n  item: ListItem<T>;\n  isEditing: boolean;\n  setIsEditing: React.Dispatch<any>;\n  disableActions: boolean;\n  rowNumber?: number;\n}\ntype FCRow<T = any> = React.FC<Props<T>>;\nconst ListRow: FCRow = ({\n  rowNumber,\n  disableActions,\n  item,\n  isEditing,\n  setIsEditing,\n  renderData,\n  ...listProps\n}) => {\n  const [editText, setEditText] = useState(item.data);\n  const {\n    handleRemove,\n    handleEdit,\n    handleSelectionChange: handleSelect,\n  } = listProps;\n  const canEdit = listProps.canEditGlobal && item.canEdit && handleEdit;\n  const canRemove = !!(listProps.canRemove && handleRemove);\n  const canSelect = !!(listProps.canSelect && handleSelect !== undefined);\n  const isSelected = !!item.isSelected;\n\n  function renderIsEditing() {\n    return (\n      <ListGroupItem>\n        <InputGroup>\n          <Input\n            value={editText}\n            style={{\n              display: 'inline',\n            }}\n            onChange={e => {\n              setEditText(e.target.value);\n            }}\n          />\n\n          <InputGroupAddon addonType='append'>\n            <AppButton\n              onClick={e => {\n                if (!handleEdit)\n                  throw Error('Expected handleEdit to exist by this point');\n                handleActionClick(\n                  e,\n                  createNewListItem(item, { data: editText }),\n                  handleEdit,\n                );\n                setEditText('');\n                setIsEditing(false);\n              }}\n            >\n              Save\n            </AppButton>\n          </InputGroupAddon>\n          <InputGroupAddon addonType='append'>\n            <AppButton\n              color='danger'\n              onClick={e => {\n                setEditText('');\n                setIsEditing(false);\n              }}\n            >\n              X\n            </AppButton>\n          </InputGroupAddon>\n        </InputGroup>\n      </ListGroupItem>\n    );\n  }\n\n  const renderActionButtons = () => {\n    return (\n      <ButtonGroup>\n        {canEdit && handleEdit && (\n          <AppButton\n            disabled={disableActions}\n            onClick={e => setIsEditing(true)}\n          >\n            Edit\n          </AppButton>\n        )}\n        {canRemove && handleRemove && (\n          <AppButton\n            disabled={disableActions}\n            onClick={e => {\n              handleActionClick(e, item, handleRemove);\n            }}\n          >\n            Remove\n          </AppButton>\n        )}\n      </ButtonGroup>\n    );\n  };\n\n  const renderRow = () => {\n    const active = canSelect && isSelected;\n    return (\n      <ListGroupItem\n        key={item.id}\n        action={canSelect}\n        active={active}\n        className='noselect d-flex justify-content-between align-items-center py-1'\n        onClick={e => listProps.handleSelectionChange?.(item)}\n      >\n        {typeof rowNumber === 'number' && `${rowNumber + 1}. `}\n        {renderData(item.data)}\n        {renderActionButtons()}\n        {active ? '✅' : canSelect ? '❌' : ''}\n      </ListGroupItem>\n    );\n  };\n\n  if (isEditing) {\n    return renderIsEditing();\n  } else {\n    return renderRow();\n  }\n};\n\nexport default ListRow;\n","import React, { useState, useCallback } from 'react';\nimport ListRow from './ListRow';\nimport AppButton from '../AppButton';\nimport {\n  ButtonGroup,\n  InputGroup,\n  Input,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport produce from 'immer';\n\nconst SELECTALL = 'Select All';\nconst CLEAR = 'Unselect All';\n\nexport interface ListItem<T> {\n  id: number;\n  data: T;\n  canEdit?: boolean;\n  isSelected: boolean;\n  userAdded?: boolean;\n}\nexport type ListItems<T> = ListItem<T>[];\n// Quick and dirty way to generate probably unique ids,\n// Should serve the purpose for this list implementation\nlet _ID = -1;\nconst generateId = () => {\n  _ID++;\n  return _ID;\n};\n\nexport function mapToListItems<T>(items: T[]): ListItems<T> {\n  return items.map(i => {\n    return createNewListItem<T>({\n      data: i,\n      isSelected: true,\n      canEdit: false,\n      userAdded: false,\n    });\n  });\n}\n\nexport function createNewListItem<T>(\n  oldItem: Omit<ListItem<T>, 'id'>,\n  newItem?: Omit<Partial<ListItem<T>>, 'id'>,\n): ListItem<T> {\n  return {\n    id: generateId(),\n    ...oldItem,\n    ...newItem,\n  };\n}\n\ntype UseList<T> = [\n  ListItems<T>,\n  (items: T[]) => void,\n  Required<ListHandlers<T>>,\n];\nexport function useList<T>(\n  handlerCallbacks?: ListHandlers<T>,\n  handlerMiddleware?: ListHandlerMiddleware<T>,\n): UseList<T> {\n  const [list, setList] = useState<ListItems<T>>([]);\n\n  const setListWrapper = useCallback((dataList: T[]) => {\n    const items = dataList.map(data => {\n      return createNewListItem({\n        data: data,\n        isSelected: true,\n        canEdit: false,\n        userAdded: false,\n      });\n    });\n    setList(items);\n  }, []);\n\n  const listItemHook = attachHandlers(\n    setList,\n    handlerCallbacks,\n    handlerMiddleware,\n  );\n  return [list, setListWrapper, listItemHook];\n}\n\ntype UseReduxList<T> = {\n  items: ListItems<T>;\n  setItems: (items: ListItems<T>) => void;\n  listProps: Omit<ListProps<T>, 'items'>;\n};\nexport function useReduxList<T>(\n  selectorFN: (state: any) => ListItems<T>,\n  actionFN: (newList: ListItems<T>) => void,\n  renderData: (data: T) => JSX.Element | string,\n): UseReduxList<T> {\n  const items = useSelector(selectorFN);\n  const dispatch = useDispatch();\n  const listFNSetter: ListSetter<T> = (\n    fn: (oldList: ListItems<T>) => ListItems<T>,\n  ) => {\n    const newList = fn(items);\n    dispatch(actionFN(newList));\n  };\n  const setItems = useCallback(\n    (items: ListItems<T>) => {\n      dispatch(actionFN(items));\n    },\n    [dispatch, actionFN],\n  );\n\n  const listProps = { ...attachHandlers(listFNSetter), renderData };\n  return {\n    items: items,\n    setItems,\n    listProps,\n  };\n}\n\n// TODO use immer produce for all of this\ntype ListSetter<T> = (fn: (oldList: ListItems<T>) => ListItems<T>) => void;\nexport function attachHandlers<T>(\n  setter: ListSetter<T>,\n  handlerCallbacks?: ListHandlers<T>,\n  handlerMiddleware?: ListHandlerMiddleware<T>,\n): Required<ListHandlers<T>> {\n  return {\n    handleRemove: toRemove => {\n      setter(oldItems => {\n        return oldItems.filter(i => i.id !== toRemove.id);\n      });\n      handlerCallbacks?.handleRemove?.(toRemove);\n    },\n    handleAddRow: addedItem => {\n      const newItem = handlerMiddleware?.addRow?.(addedItem) || addedItem;\n      setter(oldItems => {\n        return [...oldItems, newItem];\n      });\n      handlerCallbacks?.handleAddRow?.(newItem);\n    },\n    handleEdit: editedItem => {\n      setter(oldItems => {\n        const newItems = [...oldItems];\n        let itemToEdit = newItems.find(i => i.id === editedItem.id);\n        if (!itemToEdit)\n          throw new Error(\n            `Could not find edited item: ${JSON.stringify(editedItem)}`,\n          );\n        itemToEdit.data = editedItem.data;\n        return newItems;\n      });\n      handlerCallbacks?.handleEdit?.(editedItem);\n    },\n    handleSelectionChange: selectedItem => {\n      setter(oldItems => {\n        return produce(oldItems, draft => {\n          const i = draft.findIndex(i => i.id === selectedItem.id);\n          draft[i].isSelected = !selectedItem.isSelected;\n          handlerCallbacks?.handleSelectionChange?.(draft[i] as ListItem<T>);\n        });\n      });\n    },\n    handleSelectAll: () => {\n      setter(oldItems => {\n        let newItems = oldItems.map(i => {\n          return { ...i, isSelected: true };\n        });\n        const selectAllMW = handlerMiddleware?.selectAll;\n        if (selectAllMW) {\n          newItems = selectAllMW(newItems);\n        }\n        return newItems;\n      });\n    },\n    handleClear: () => {\n      setter(oldItems => {\n        let newItems = oldItems.map(i => {\n          return { ...i, isSelected: false };\n        });\n        const clearMW = handlerMiddleware?.clear;\n        if (clearMW) {\n          newItems = clearMW(newItems);\n        }\n        return newItems;\n      });\n    },\n  };\n}\n\nexport interface ListHandlerMiddleware<T> {\n  addRow?: (item: ListItem<T>) => ListItem<T>;\n  selectAll?: (items: ListItems<T>) => ListItems<T>;\n  clear?: (items: ListItems<T>) => ListItems<T>;\n}\n\nexport type ListHandler<T> = (item: ListItem<T>) => void;\nexport type ListActionHandler = (actionValue: any) => void;\nexport interface ListHandlers<T> {\n  handleRemove?: ListHandler<T>;\n  handleAddRow?: ListHandler<T>;\n  handleEdit?: ListHandler<T>;\n  handleSelectionChange?: ListHandler<T>;\n  handleSelectAll?: (newItems?: ListItem<T>[]) => void;\n  handleClear?: (newItems?: ListItems<T>) => void;\n}\nexport interface ListProps<T> extends ListHandlers<T> {\n  items: ListItems<T>;\n  renderData: (data: T) => JSX.Element | string;\n  name?: string;\n  canRemove?: boolean;\n  canAddRow?: boolean;\n  canEditGlobal?: boolean;\n  canSelect?: boolean;\n  rowNumbers?: boolean;\n  canSelectAll?: boolean;\n}\n\ntype FCList<T = any> = React.FC<ListProps<T>>;\nconst List: FCList = props => {\n  const [isAddingRow, setisAddingRow] = useState(false);\n  const [addRowText, setAddRowText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const { items } = props;\n  const canSelectAll =\n    props.canSelect && props.canSelectAll && props.handleSelectAll;\n  const canClear = props.canSelect && props.canSelectAll && props.handleClear;\n\n  const renderAddRow = () => {\n    const { handleAddRow, canAddRow } = props;\n    if (!(handleAddRow && canAddRow)) return null;\n    if (isAddingRow)\n      return (\n        <div>\n          <ListGroupItem>\n            <InputGroup>\n              <Input\n                value={addRowText}\n                onChange={e => setAddRowText(e.target.value)}\n              />\n              <ButtonGroup>\n                <AppButton\n                  onClick={() => {\n                    const newItem = createNewListItem(\n                      {\n                        data: addRowText,\n                        userAdded: true,\n                        isSelected: false,\n                      },\n                      {},\n                    );\n                    setisAddingRow(false);\n                    handleAddRow(newItem);\n                    setAddRowText('');\n                  }}\n                >\n                  Save\n                </AppButton>\n                <AppButton\n                  color='danger'\n                  onClick={() => {\n                    setisAddingRow(false);\n                    setAddRowText('');\n                  }}\n                >\n                  X\n                </AppButton>\n              </ButtonGroup>\n            </InputGroup>\n          </ListGroupItem>\n        </div>\n      );\n\n    return (\n      <ListGroupItem>\n        <AppButton\n          block\n          disabled={isEditing}\n          onClick={() => setisAddingRow(true)}\n        >\n          Add Row\n        </AppButton>\n      </ListGroupItem>\n    );\n  };\n\n  const renderListActions = () => {\n    let selectAll = null;\n    let clear = null;\n    if (canSelectAll) {\n      selectAll = (\n        <AppButton\n          color='success'\n          onClick={e => {\n            props.handleSelectAll?.();\n          }}\n        >\n          {SELECTALL}\n        </AppButton>\n      );\n    }\n    if (canClear) {\n      clear = (\n        <AppButton\n          color='warning'\n          onClick={e => {\n            props.handleClear?.();\n          }}\n        >\n          {CLEAR}\n        </AppButton>\n      );\n    }\n    return (\n      <div className='list__actions'>\n        <ButtonGroup>\n          {selectAll}\n          {clear}\n        </ButtonGroup>\n      </div>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <div\n        className='list__header'\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        {props.name ? <h3>{props.name}</h3> : null}\n        {renderListActions()}\n      </div>\n    );\n  };\n\n  function renderList() {\n    const rows = items.map((item, i) => {\n      const rowNumber = props.rowNumbers ? i : undefined;\n      return (\n        <ListRow\n          key={item.id}\n          item={item}\n          setIsEditing={setIsEditing}\n          isEditing={isEditing}\n          disableActions={isAddingRow}\n          rowNumber={rowNumber}\n          {...props}\n        />\n      );\n    });\n    return (\n      <div className='list'>\n        {renderHeader()}\n        <ListGroup>\n          {rows}\n          {renderAddRow()}\n        </ListGroup>\n      </div>\n    );\n  }\n  return <div className='list'>{renderList()}</div>;\n};\n\nexport default List;\n","// import useTypedSelector from \"./store/rootReducer\";\nimport { useDispatch } from 'react-redux';\nimport { caughtGlobalError } from './store/system/systemSlice';\nimport { useCallback } from 'react';\nimport { AppErrorType } from './error';\n\n// TODO implement smarter error logging.  This will so far\n//      only catch one error at a time.\nexport const useErrorLog = () => {\n  // const error = useTypedSelector(s => s.system.error)\n  const dispatch = useDispatch();\n\n  const log = useCallback(\n    (e: Error, type?: AppErrorType) => {\n      // if (error.isError) return;\n      if (type) (e as any).type = type;\n      dispatch(caughtGlobalError(e));\n    },\n    [dispatch],\n  );\n  return log;\n};\n\nexport const useAppLog = () => {\n  const log = useCallback((data: any) => {\n    console.log(data);\n  }, []);\n  return log;\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport {\n  spotifyAPIFactory,\n  SpotifyAPI,\n  SpotifyArtistObject,\n} from './SpotifyAPI';\nimport { useDispatch } from 'react-redux';\nimport useSpotifyAccessToken from '../store/system/useSpotifyAccessToken';\nimport useTypedSelector from '../store/rootReducer';\nimport {\n  updateArtistList,\n  topArtistsTimeRangeUpdated,\n  updateMeData,\n} from '../store/Poster/posterSlice';\nimport { createNewListItem, ListItems } from '../components/List/List';\nimport { useErrorLog, useAppLog } from '../AppLog';\nimport { AppError } from '../error';\n\nexport const useSpotifyAPI = (): SpotifyAPI | null => {\n  const tokenData = useSpotifyAccessToken();\n  const elog = useErrorLog();\n  let accessToken = '';\n  if (tokenData.status === 'NONE' || tokenData.status === 'EXPIRED') {\n    const e = new AppError(\n      `Spotify Access token status not valid.  status: ${tokenData.status}`,\n    );\n    elog(e, 'NoSpotifyAccess');\n  } else {\n    accessToken = tokenData.accessToken;\n  }\n  const memoedAPI = useMemo(() => {\n    if (accessToken === '') return null;\n    return spotifyAPIFactory({ authToken: accessToken });\n  }, [accessToken]);\n\n  return memoedAPI;\n};\n\nconst artistObjectsToListItems = (artistObjects: SpotifyArtistObject[]) => {\n  return artistObjects.map(ao => {\n    return createNewListItem({\n      isSelected: true,\n      data: ao,\n      canEdit: false,\n      userAdded: false,\n    });\n  });\n};\n\nlet count = 0; // TODO remove\nconst countCheck = () => {\n  count++;\n  if (count > 5) throw new Error('Hit Count Limit');\n};\ntype UseSpotifyTopArtists<T> = [ListItems<T>, (newTimeRange: string) => void];\nexport const useTopArtistsCached = () => {\n  const timeRange = useTypedSelector(s => s.poster.topArtistsTimeRange);\n  const topArtists = useTypedSelector(s => s.poster.artists);\n\n  const api = useSpotifyAPI();\n  const dispatch = useDispatch();\n  const log = useAppLog();\n  const elog = useErrorLog();\n\n  const setTopArtistsTimeRange = (newTimeRange: string) => {\n    dispatch(topArtistsTimeRangeUpdated(newTimeRange));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!api?.topArtists)\n        throw new Error(\n          'Expected topArtists method to exist on spotify api object',\n        );\n      count++;\n      if (count > 5) throw new Error('Max Count Reached');\n      log('Using api to retreive top Artists for range ' + timeRange);\n      let topArtistsData;\n      try {\n        topArtistsData = await api.topArtists({ time_range: timeRange });\n      } catch (e) {\n        elog(e, 'NoSpotifyAccess');\n      } finally {\n        // TODO this logic probably shouldn't be in a finally block, look into removing\n        if (!topArtistsData) throw new AppError('Expected top artists data');\n        if (topArtistsData instanceof Error) {\n          elog(topArtistsData);\n          return;\n        }\n        const topArtistsList = artistObjectsToListItems(topArtistsData);\n        dispatch(updateArtistList(topArtistsList));\n      }\n    };\n    if (!api) return;\n    fetchData();\n  }, [dispatch, log, elog, api, timeRange]);\n\n  return { topArtists, setTopArtistsTimeRange };\n};\n\nexport const useSpotifyTopArtists = (timeRange: string) => {\n  const api = useSpotifyAPI();\n  const elog = useErrorLog();\n  const [artists, setartists] = useState<SpotifyArtistObject[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!api?.topArtists) return;\n      try {\n        const data = await api.topArtists({ time_range: timeRange });\n        if (data instanceof Error) {\n          elog(data);\n          return;\n        }\n        setartists(data);\n      } catch (e) {\n        elog(e);\n      }\n    };\n    fetchData();\n  }, [api, elog, timeRange]);\n  return artists;\n};\n\nexport const useMe = () => {\n  const me = useTypedSelector(s => s.poster.me);\n  const api = useSpotifyAPI();\n  const dispatch = useDispatch();\n  const log = useAppLog();\n  const elog = useErrorLog();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!api) throw new Error('Expected api');\n      log('Using spotify api to fetch me data');\n      let meData;\n      countCheck(); // TODO Remove once done testing\n      try {\n        meData = await api.me();\n      } catch (e) {\n        elog(e);\n        return;\n      }\n      if (!meData) throw new Error('Expected me data');\n      if (meData instanceof Error) return;\n      dispatch(updateMeData(meData));\n    };\n    if (!api) return;\n    fetchData();\n  }, [api, dispatch, elog, log]);\n\n  return me;\n};\n","import React, { useEffect, useState } from 'react';\nimport SpotifyInfoCapturePanel from '../SpotifyInfoCapturePanel';\nimport useSpotifyAccessToken from '../../store/system/useSpotifyAccessToken';\nimport { ModalGroup, useModalGroup, GroupPageProps } from '../Group';\nimport { Button } from 'reactstrap';\nimport { useSpotifyTopArtists } from '../../spotify/SpotifyAPIHooks';\nimport List, { useList, ListItem } from '../List/List';\nimport { SpotifyArtistObject } from '../../spotify/SpotifyAPI';\nimport { useDispatch } from 'react-redux';\nimport {\n  updateArtistList,\n  mergeArtistList,\n} from '../../store/Poster/posterSlice';\n\ninterface TopArtistsGS {\n  artists: ListItem<SpotifyArtistObject>[];\n}\n\ninterface PlaylistGS {\n  selectedPlaylist: string;\n  artists: ListItem<SpotifyArtistObject>[];\n  playlists: string[];\n}\n\ninterface Props {}\nconst ImportArtists: React.FC<Props> = () => {\n  const data = useSpotifyAccessToken();\n  const showAuth = data.status !== 'VALID';\n  const dispatch = useDispatch();\n  const [timeRange, setTimeRange] = useState('');\n\n  const [topArtistsPkg, topArtistProps, topArtistToggle] = useModalGroup<\n    TopArtistsGS\n  >(\n    ['Select Artists'],\n    [\n      {\n        text: 'Replace Existing Artists',\n        submitFN: state => {\n          const selected = state.artists.filter(a => a.isSelected);\n          dispatch(updateArtistList(selected));\n        },\n      },\n      {\n        text: 'Merge with Existing Artists',\n        submitFN: state => {\n          const selected = state.artists.filter(a => a.isSelected);\n          dispatch(mergeArtistList(selected));\n        },\n      },\n    ],\n    { artists: [] },\n  );\n\n  const [playlistPkg, playlistProps, playlistToggle] = useModalGroup<\n    PlaylistGS\n  >(\n    ['Select a Playlist', 'Select Artists'],\n    [\n      {\n        text: 'Replace Existing Artists',\n        submitFN: state => {\n          const selected = state.artists.filter(a => a.isSelected);\n          dispatch(updateArtistList(selected));\n        },\n      },\n      {\n        text: 'Merge with Existing Artists',\n        submitFN: state => {\n          const selected = state.artists.filter(a => a.isSelected);\n          dispatch(mergeArtistList(selected));\n        },\n      },\n    ],\n    { artists: [], selectedPlaylist: '', playlists: [] },\n  );\n\n  const renderPlaylistModal = () => {\n    return (\n      <ModalGroup {...playlistProps}>\n        <SpotifyPlaylistList groupStatePkg={playlistPkg} />\n        {/* <PlaylistArtists /> */}\n      </ModalGroup>\n    );\n  };\n\n  const renderTopArtistModal = () => {\n    return (\n      <ModalGroup {...topArtistProps}>\n        <SpotifyArtists groupStatePkg={topArtistsPkg} timeRange={timeRange} />\n      </ModalGroup>\n    );\n  };\n\n  const renderButtons = () => {\n    return (\n      <div className='d-flex flex-column'>\n        <Button\n          className={'btn-success mx-1 my-1'}\n          onClick={() => {\n            topArtistToggle();\n            setTimeRange('long_term');\n          }}\n        >\n          Import Your Top Artists (All Time)\n        </Button>\n        <Button\n          className={'btn-success mx-1 my-1'}\n          onClick={() => {\n            topArtistToggle();\n            setTimeRange('medium_term');\n          }}\n        >\n          Import Your Top Artists (6 Months)\n        </Button>\n        <Button\n          className={'btn-success mx-1 my-1'}\n          onClick={() => {\n            topArtistToggle();\n            setTimeRange('short_term');\n          }}\n        >\n          Import Your Top Artists (1 Month)\n        </Button>\n        <Button\n          className={'btn-success mx-1 my-1'}\n          onClick={() => {\n            playlistToggle();\n          }}\n        >\n          Import From a Playlist\n        </Button>\n        {renderTopArtistModal()}\n        {renderPlaylistModal()}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {showAuth && <SpotifyInfoCapturePanel />}\n      {!showAuth && renderButtons()}\n    </div>\n  );\n};\n\nconst renderSpotifyArtist = (data: any) => {\n  const url = data.images[data.images.length - 1].url;\n  return (\n    <span>\n      <img\n        className=''\n        alt={data.name + ' photo'}\n        src={url}\n        style={{\n          height: '50px', // TODO don't hardcode these values\n          width: '50px',\n          marginRight: '5px',\n        }}\n      />\n      {data.name}\n    </span>\n  );\n};\n\ninterface SpotifyArtistsProps extends GroupPageProps<TopArtistsGS> {\n  timeRange: string;\n}\nconst SpotifyArtists: React.FC<SpotifyArtistsProps> = ({\n  timeRange,\n  children,\n  groupStatePkg,\n}) => {\n  const artists = useSpotifyTopArtists(timeRange);\n  const [items, setItems, listItemHook] = useList<SpotifyArtistObject>();\n\n  useEffect(() => {\n    if (artists.length === 0) return;\n    setItems(artists);\n  }, [artists, setItems]);\n\n  useEffect(() => {\n    groupStatePkg.mergeState({ artists: items });\n  }, [groupStatePkg, items]);\n\n  return (\n    <div>\n      <List\n        canSelect\n        canSelectAll\n        items={items}\n        {...listItemHook}\n        renderData={renderSpotifyArtist}\n      />\n    </div>\n  );\n};\n\ninterface SpotifyPlaylistListProps extends GroupPageProps<PlaylistGS> {}\n\nconst playlists = ['playlist 1', 'playlist 2', 'playlist 3'];\nconst SpotifyPlaylistList: React.FC<SpotifyPlaylistListProps> = ({\n  groupStatePkg,\n}) => {\n  const [items, setItems, listItemHook] = useList<string>();\n\n  useEffect(() => {\n    setItems(playlists);\n  }, [setItems]);\n\n  return (\n    <div>\n      <List items={items} {...listItemHook} renderData={i => i} />\n    </div>\n  );\n};\n\n{\n  /* <PlaylistArtists /> */\n}\n\nexport default ImportArtists;\n","import React, { useState, useCallback } from 'react';\nimport {\n  InputGroupAddon,\n  InputGroup,\n  Input,\n  InputProps,\n  FormGroup,\n  FormFeedback,\n} from 'reactstrap';\nimport { debounce, isUndefined } from 'lodash';\nimport AppButton from '../AppButton';\n\nexport interface ValidationObject {\n  isValid: boolean;\n  errorMsg?: string;\n}\n\nexport type InputValidator = (input: string) => ValidationObject;\nexport type InputHook = (text: string) => void;\nexport type SubmitHook = (text: string) => ValidationObject;\nexport interface AppInputProps extends InputProps {\n  submittable?: boolean;\n  submitText?: string;\n  validations?: InputValidator[];\n  changeHook?: InputHook;\n  onResult?: InputHook;\n  submitHook?: SubmitHook;\n  initialValue?: string;\n  debounceRate?: number;\n}\n\nconst AppInput: React.FC<AppInputProps> = ({\n  validations,\n  changeHook,\n  onResult,\n  submittable,\n  submitHook,\n  submitText = 'Submit',\n  initialValue = '',\n  debounceRate = 300,\n  ...inputProps\n}) => {\n  const [inputValue, setInputValue] = useState(initialValue);\n  const [inError, setinError] = useState(false);\n  const [errorText, seterrorText] = useState('');\n\n  const getValidatedResultHook = () => {\n    return debounce((newText: string) => {\n      if (newText === '') {\n        // reset to non error state\n        setinError(false);\n        seterrorText('');\n        onResult?.('');\n        return;\n      }\n      if (isUndefined(validations)) {\n        onResult?.(newText);\n        return;\n      }\n      if (validations.length === 0) {\n        onResult?.(newText);\n        return;\n      }\n      let errorVobj;\n      validations.forEach(v => {\n        const vobj = v(newText);\n        if (vobj.isValid === false) {\n          setinError(true);\n          seterrorText(vobj.errorMsg || '');\n          errorVobj = vobj;\n          return vobj;\n        }\n      });\n      if (errorVobj) return;\n      setinError(false);\n      seterrorText('');\n      onResult?.(newText);\n    }, debounceRate);\n  };\n  const vFNs = validations ? validations : [];\n  const dvHook = useCallback(getValidatedResultHook(), [...vFNs, onResult]);\n\n  const handleChange = (newText: string) => {\n    setInputValue(newText);\n    changeHook?.(newText);\n    dvHook?.(newText);\n  };\n\n  const handleSubmit = () => {\n    if (inError) return;\n    if (!submitHook) return;\n    const vobj = submitHook(inputValue);\n    if (!vobj.isValid) {\n      setinError(true);\n      seterrorText(vobj.errorMsg || '');\n      return;\n    }\n    setInputValue('');\n  };\n\n  const handleEnter = (e: any) => {\n    if (e.key !== 'Enter') return;\n    if (inputValue === '') return; // Todo add optional validation for required\n    handleSubmit();\n  };\n\n  const renderSubmit = () => {\n    return (\n      <InputGroupAddon addonType='append'>\n        <AppButton\n          disabled={inError || inputValue === ''}\n          onClick={handleSubmit}\n        >\n          {submitText}\n        </AppButton>\n      </InputGroupAddon>\n    );\n  };\n\n  const renderInput = () => {\n    return (\n      <FormGroup>\n        <InputGroup>\n          <Input\n            className='app-input'\n            value={inputValue}\n            {...inputProps}\n            invalid={inError}\n            onChange={e => handleChange(e.target.value)}\n            onKeyPress={handleEnter}\n          />\n          {submittable && renderSubmit()}\n          {inError && <FormFeedback>{errorText}</FormFeedback>}\n        </InputGroup>\n      </FormGroup>\n    );\n  };\n  return renderInput();\n};\n\nexport default AppInput;\n","import React, { useRef } from 'react';\nimport { createNewListItem } from '../List/List';\nimport useTypedSelector from '../../store/rootReducer';\nimport {\n  artistRemoved,\n  AppArtistObject,\n  updateArtistList,\n  moveArtist,\n} from '../../store/Poster/posterSlice';\nimport { useDispatch } from 'react-redux';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport './ArtistList.css';\nimport AppInput from '../AppInput/AppInput';\nimport { portraitPlaceholder } from '../../images';\nimport {\n  useDrag,\n  DndProvider,\n  useDrop,\n  DropTargetMonitor,\n  XYCoord,\n} from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\n\n// Taken from this thread: https://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript/4819886#4819886\nvar isTouch = 'ontouchstart' in window || navigator.msMaxTouchPoints > 0;\n\nconst ARTIST_LIST_ITEM = 'ArtistListItem';\n\ninterface Props {}\nconst ArtistsList: React.FC<Props> = () => {\n  const artists = useTypedSelector(s => s.poster.artists);\n  const dispatch = useDispatch();\n  const moveItem = (from: number, to: number) =>\n    dispatch(moveArtist({ from, to }));\n\n  const renderListGroup = () => {\n    return (\n      <ListGroup>\n        {artists.map((artistObj, i) => (\n          <Row\n            artistObj={artistObj.data}\n            key={artistObj.data.uri}\n            rowIndex={i}\n            moveItem={moveItem}\n          />\n        ))}\n      </ListGroup>\n    );\n  };\n\n  return (\n    <div>\n      {isTouch && 'Touch Device'}\n      <AppInput\n        submittable\n        submitText={'Add'}\n        submitHook={text => {\n          const newArtist: AppArtistObject = {\n            name: text,\n            uri: text,\n            images: [{ url: portraitPlaceholder }],\n          };\n          const listItem = createNewListItem({\n            data: newArtist,\n            isSelected: true,\n            userAdded: true,\n            canEdit: true,\n          });\n          dispatch(updateArtistList([listItem, ...artists]));\n          return { isValid: true };\n        }}\n        placeholder={'Add Custom Artist'}\n      />\n      <DndProvider backend={isTouch ? TouchBackend : HTML5Backend}>\n        {renderListGroup()}\n      </DndProvider>\n    </div>\n  );\n};\n\ninterface DragItem {\n  type: string;\n  rowIndex: number;\n}\n\ninterface RowProps {\n  artistObj: AppArtistObject;\n  rowIndex: number;\n  moveItem: (from: number, to: number) => void;\n}\nconst Row: React.FC<RowProps> = ({ artistObj, rowIndex, moveItem }) => {\n  const src = artistObj.images[artistObj.images.length - 1].url;\n  const dispatch = useDispatch();\n  const ref = useRef<HTMLDivElement>(null);\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ARTIST_LIST_ITEM, rowIndex },\n    collect: mon => ({\n      isDragging: mon.isDragging(),\n    }),\n    end: (item, mon) => {\n      const to = mon.getDropResult();\n      if (!to) return;\n      const toIndex = to.rowIndex;\n      if (rowIndex === toIndex) return;\n    },\n  });\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ARTIST_LIST_ITEM,\n    hover(item: DragItem, monitor: DropTargetMonitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.rowIndex;\n      const hoverIndex = rowIndex;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = ref.current!.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveItem(dragIndex, hoverIndex);\n      item.rowIndex = hoverIndex;\n    },\n\n    drop: (item, mon) => {\n      return { rowIndex };\n    },\n    collect: mon => ({\n      isOver: !!mon.isOver(),\n    }),\n  });\n\n  isOver && console.log('over');\n\n  const style = (): React.CSSProperties => {\n    if (isDragging && !isTouch)\n      return {\n        opacity: 0,\n      };\n    if (isDragging && isTouch)\n      return {\n        boxShadow: 'box-shadow: 0px 0px 35px 0px rgba(0,0,0,0.75)',\n      };\n    if (isOver) {\n      return { cursor: 'move' };\n    }\n    return {};\n  };\n\n  drag(drop(ref));\n  const listRef = isTouch ? null : ref;\n  const iconRef = isTouch ? ref : null;\n  return (\n    <div ref={listRef} style={style()}>\n      <ListGroupItem className='px-0 py-0 bx-0 by-0 d-flex justify-content-between movable'>\n        <span>\n          <img\n            className=''\n            alt={artistObj.name + ' photo'}\n            src={src}\n            style={{\n              height: '3rem',\n              width: '3rem',\n              marginRight: '5px',\n            }}\n          />\n          {artistObj.name}\n        </span>\n        {!isTouch && (\n          <Button\n            color='danger'\n            type='button'\n            class='close'\n            aria-label='Close'\n            onClick={() => dispatch(artistRemoved(artistObj))}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </Button>\n        )}\n        {isTouch && (\n          <div\n            ref={iconRef}\n            style={{ fontSize: '2rem', paddingRight: '.5rem' }}\n          >\n            ☰\n          </div>\n        )}\n      </ListGroupItem>\n    </div>\n  );\n};\n\nexport default ArtistsList;\n","import React from 'react';\nimport { Input, Form, Label, FormGroup } from 'reactstrap';\nimport AppInput from '../AppInput/AppInput';\nimport { useDispatch } from 'react-redux';\nimport {\n  changeFestivalName,\n  mergePoster,\n  headlinerChanged,\n} from '../../store/Poster/posterSlice';\nimport useTypedSelector from '../../store/rootReducer';\nimport { usePosterLayout } from '../Poster/PosterTextLayout';\n\nconst optionDebouncRate = 0;\n\ninterface PosterOptionsProps {}\nconst PosterOptions: React.FC<PosterOptionsProps> = () => {\n  const dispatch = useDispatch();\n  const { festivalName } = useTypedSelector(s => s.poster);\n  const { headlinerLineCount } = usePosterLayout();\n\n  return (\n    <div>\n      <PresentedBy />\n      Festival Name\n      <AppInput\n        initialValue={festivalName}\n        onResult={r => dispatch(changeFestivalName(r))}\n        placeholder='Festival Name'\n        debounceRate={optionDebouncRate}\n      />\n      {headlinerLineCount > 0 && <Headliners />}\n      <Dates />\n    </div>\n  );\n};\n\ninterface HeadlinerProps {}\nconst PresentedBy: React.FC<HeadlinerProps> = () => {\n  const dispatch = useDispatch();\n  const presentedBy = useTypedSelector(s => s.poster.presentedBy);\n  const showPresentedBy = useTypedSelector(s => s.poster.showPresentedBy);\n  const togglePresentedBy = () =>\n    dispatch(mergePoster({ showPresentedBy: !showPresentedBy }));\n\n  return (\n    <div>\n      <FormGroup check>\n        <Label check>\n          <Input\n            type='checkbox'\n            checked={showPresentedBy}\n            onChange={() => togglePresentedBy()}\n          />\n          Show Presented By\n        </Label>\n      </FormGroup>\n      {showPresentedBy && (\n        <AppInput\n          initialValue={presentedBy}\n          debounceRate={optionDebouncRate}\n          onResult={r => dispatch(mergePoster({ presentedBy: r }))}\n        />\n      )}\n    </div>\n  );\n};\n\nconst Dates: React.FC<any> = () => {\n  const { dateCount } = usePosterLayout();\n  const { showDates, date1, date2, date3 } = useTypedSelector(s => s.poster);\n  const dispatch = useDispatch();\n  const toggleShowDates = () =>\n    dispatch(mergePoster({ showDates: !showDates }));\n  const dispatchDate = (key: string, date: string) =>\n    dispatch(mergePoster({ [key]: { date } }));\n  return (\n    <Form>\n      <FormGroup check>\n        <Label check>\n          <Input\n            type='checkbox'\n            checked={showDates}\n            onChange={() => toggleShowDates()}\n          />\n          Show Festival Dates\n        </Label>\n      </FormGroup>\n      {showDates && (\n        <Label>\n          Date One\n          <AppInput\n            initialValue={date1.date}\n            onResult={r => dispatchDate('date1', r)}\n            debounceRate={optionDebouncRate}\n          />\n        </Label>\n      )}\n      {showDates && dateCount > 1 && (\n        <Label>\n          Date Two\n          <AppInput\n            initialValue={date2.date}\n            onResult={r => dispatchDate('date2', r)}\n            debounceRate={optionDebouncRate}\n          />\n        </Label>\n      )}\n      {showDates && dateCount > 2 && (\n        <Label>\n          Date Three\n          <AppInput\n            initialValue={date3.date}\n            onResult={r => dispatchDate('date3', r)}\n            debounceRate={optionDebouncRate}\n          />\n        </Label>\n      )}\n    </Form>\n  );\n};\n\ninterface HeadlinerProps {}\nconst Headliners: React.FC<HeadlinerProps> = () => {\n  return (\n    <>\n      <Label>\n        Headliner (Line 1)\n        <HeadlinerSelect line={0} pos={0} />\n      </Label>\n    </>\n  );\n};\n\ninterface HeadlinerSelectProps {\n  line: number;\n  pos: number;\n}\nconst HeadlinerSelect: React.FC<HeadlinerSelectProps> = ({ line, pos }) => {\n  const headliner = useTypedSelector(s => s.poster.headliners[line][pos]);\n  const artists = useTypedSelector(s => s.poster.artists);\n  const dispatch = useDispatch();\n  const noArtists = artists.length === 0;\n\n  return (\n    <Input\n      type='select'\n      disabled={!headliner && noArtists}\n      value={headliner}\n      onChange={e =>\n        dispatch(headlinerChanged({ line, pos, newHeadliner: e.target.value }))\n      }\n    >\n      {!headliner && noArtists && (\n        <option disabled selected>\n          {'No Artists...'}\n        </option>\n      )}\n      {!headliner && !noArtists && (\n        <option disabled selected>\n          {'Select a Headliner'}\n        </option>\n      )}\n      {artists.map(a => (\n        <option value={a.data.name}>{a.data.name}</option>\n      ))}\n    </Input>\n  );\n};\n\nexport default PosterOptions;\n","import React from 'react';\nimport './SideNav.css';\nimport { Button, ButtonGroup } from 'reactstrap';\nimport ImportArtists from './ImportArtists';\nimport ArtistList from './ArtistsList';\nimport PosterOptions from './PosterOptions';\nimport useTypedSelector from '../../store/rootReducer';\nimport {\n  sideNavSelectionChange,\n  toggleSideNav,\n} from '../../store/SideNav/sideNavSlice';\nimport { useDispatch } from 'react-redux';\n\ninterface Props {}\nconst SideNav: React.FC<Props> = () => {\n  const isOpen = useTypedSelector(s => s.sidenav.isOpen);\n  const selectedOption = useTypedSelector(s => s.sidenav.selectedOption);\n  const dispatch = useDispatch();\n  const width = isOpen ? 300 : 0;\n\n  const handleSelection = (id: number) => {\n    dispatch(sideNavSelectionChange(id));\n  };\n\n  return (\n    <div className='sidenav' style={{ width }}>\n      <a\n        href='#'\n        className='closebtn'\n        onClick={() => dispatch(toggleSideNav())}\n      >\n        &times;\n      </a>\n      <Selections\n        selectedId={selectedOption}\n        onSelectChange={handleSelection}\n      />\n      {selectedOption === 0 && <ImportArtists />}\n      {selectedOption === 1 && <ArtistList />}\n      {selectedOption === 2 && <PosterOptions />}\n    </div>\n  );\n};\n\nconst buttons = ['Import Artists', 'Manage Artists', 'Advanced Options'];\ninterface SelectionsProps {\n  selectedId: number;\n  onSelectChange: (id: number) => void;\n}\nconst Selections: React.FC<SelectionsProps> = ({\n  onSelectChange,\n  selectedId,\n}) => {\n  const setClass = (id: number) =>\n    id === selectedId ? 'btn-success btn-sm mb-1' : 'btn-sm mb-1';\n  return (\n    <ButtonGroup toggle aria-label='Option Selection'>\n      {buttons.map((b, i) => {\n        return (\n          <Button\n            className={`${setClass(i)}`}\n            onClick={() => onSelectChange(i)}\n          >\n            {b}\n          </Button>\n        );\n      })}\n    </ButtonGroup>\n  );\n};\n\nexport default SideNav;\n","import React from 'react';\nimport { Container, Row, Col, Nav } from 'reactstrap';\nimport PosterCanvas from './Poster/PosterCanvas';\nimport Options from './Options';\nimport AppButton from './AppButton';\nimport SideNav from './SideNav/SideNav';\nimport { useBoundingRectangle } from '../utils';\nimport { useDispatch } from 'react-redux';\nimport { toggleSideNav } from '../store/SideNav/sideNavSlice';\n\nconst renderDevTools = () => {\n  if (process.env.NODE_ENV !== 'development') return null;\n  return (\n    <form className='form-inline'>\n      <button\n        className='btn btn-outline-danger'\n        type='button'\n        onClick={() => {\n          window.localStorage.clear();\n          window.location.reload();\n        }}\n      >\n        Clear Cache\n      </button>\n    </form>\n  );\n};\n\ninterface Props {}\nconst Home: React.FC<Props> = () => {\n  const [rect, ref] = useBoundingRectangle<HTMLDivElement>();\n  const dispatch = useDispatch();\n\n  return (\n    <div className='home h-100'>\n      <Nav\n        className='navbar navbar-expand-sm navbar-light bg-light py-0'\n        style={{ marginBottom: '10px' }}\n      >\n        <AppButton className='mr-2' onClick={() => dispatch(toggleSideNav())}>\n          Options\n        </AppButton>\n        <div className='navbar-brand'>Poster App</div>\n        {renderDevTools()}\n      </Nav>\n      <SideNav />\n      <Options />\n      <div ref={ref} className='h-100'>\n        <Container className='h-100'>\n          <Row className='h-100'>\n            <Col className='d-flex justify-content-center h-100'>\n              <PosterCanvas parentDomRect={rect} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { spotifyAuthFromWindow } from '../spotify/SpotifyAuth';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { accessTokenUpdated } from '../store/system/systemSlice';\n\nconst redirectHome = () => {\n  return <Redirect to='/' />;\n};\n\ninterface Props {}\nconst SpotifyAuthorize: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  if (authData.status !== 'AUTHORIZED') {\n    console.log(`Non Authorized status: ${authData.status}`);\n    console.log(authData.error);\n    return redirectHome();\n  }\n\n  if (!authData.data)\n    throw new Error('Received authorized status without data');\n  const { access_token, expires_in } = authData.data;\n  dispatch(\n    accessTokenUpdated({\n      spotifyAccessToken: access_token,\n      spotifyAccessTokenExpire: expires_in,\n    }),\n  );\n  return redirectHome();\n};\n\nexport default SpotifyAuthorize;\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport { Switch, Route } from 'react-router-dom';\nimport SpotifyAuthorize from './components/SpotifyAuthorize';\nimport { useDispatch } from 'react-redux';\nimport { spotifyAuthFromWindow } from './spotify/SpotifyAuth';\nimport { accessTokenUpdated } from './store/system/systemSlice';\nimport { nowSeconds } from './utils';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  // TODO update this to be safer\n  if (authData.status !== 'AUTHORIZED') {\n    // console.log(`Non Authorized status: ${authData.status}`)\n    // console.log(authData.error)\n  } else {\n    if (!authData.data)\n      throw new Error('Received authorized status without data');\n    const { access_token, expires_in } = authData.data;\n    const expiresInNum = parseInt(expires_in, 10);\n    if (isNaN(expiresInNum))\n      throw new Error(`Spotify did not return a valid number ${expires_in}`);\n    const expireTime = nowSeconds() + expiresInNum;\n    window.location.hash = '';\n    dispatch(\n      accessTokenUpdated({\n        spotifyAccessToken: access_token,\n        spotifyAccessTokenExpire: expireTime.toString(),\n      }),\n    );\n  }\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/authenticate'>\n          <SpotifyAuthorize />\n        </Route>\n        <Route exact path='/'>\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './rootReducer';\n\n// TODO this is only for development but still need to figure out a better way\n// to do this\nconst VERSION = 6;\nconst key = 'version';\nconst versionStr = window.localStorage.getItem(key);\nif (!versionStr) {\n  window.localStorage.clear();\n  window.localStorage.setItem(key, VERSION.toString());\n} else {\n  const version = parseInt(versionStr, 10);\n  if (version < VERSION) {\n    window.localStorage.clear();\n    window.localStorage.setItem(key, VERSION.toString());\n  }\n}\n\n// TODO look into other options to replicate this functionality.\n// works for now but obviously not very efficient\nexport const REDUX_LOCAL_STORAGE_KEY = '__REDUX_LOCAL_STORAGE_KEY';\nconst localStorageMiddleware = (store: any) => (next: any) => (action: any) => {\n  let res = next(action);\n  let state = store.getState();\n  let json = JSON.stringify(state);\n  window.localStorage.setItem(REDUX_LOCAL_STORAGE_KEY, json);\n  return res;\n};\n\nconst initialJSON = window.localStorage.getItem(REDUX_LOCAL_STORAGE_KEY);\nconst preloadedState = initialJSON ? JSON.parse(initialJSON) : undefined;\n\nconst middleware = [localStorageMiddleware];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n  middleware,\n});\n\nexport default store;\n","import React, { useState } from 'react';\nimport { Modal, ModalProps, ModalHeader, ModalBody } from 'reactstrap';\nimport { constructSpotifyAuthURL } from '../spotify/SpotifyAuth';\nimport useTypedSelector from '../store/rootReducer';\n\ninterface SpotifyAuthRefreshModalProps extends ModalProps {\n  toggle: () => void;\n}\n// const SpotifyAuthRefreshModal: React.FC<SpotifyAuthRefreshModalProps> = props => {\n//   const { toggle } = props;\n//   return (\n//     <Modal {...props} className='spotify-auth-refresh-modal'>\n//       <ModalHeader toggle={toggle}>\n//         Spotify Is Asking To Be Authorized\n//       </ModalHeader>\n//       <ModalBody>\n//         <a href={constructSpotifyAuthURL()}>Authorize Spotify</a>\n//       </ModalBody>\n//     </Modal>\n//   );\n// };\n\ninterface Props {}\nconst GlobalError: React.FC<Props> = ({ children }) => {\n  const errorData = useTypedSelector(s => s.system.error);\n  const [spotifyAccessRefreshModal, setSpotifyAccessRefreshModal] = useState(\n    false,\n  );\n\n  const toggleModal = () =>\n    setSpotifyAccessRefreshModal(!spotifyAccessRefreshModal);\n\n  if (!errorData.isError || !errorData.error) {\n    if (spotifyAccessRefreshModal) {\n      toggleModal();\n    }\n    return <>{children}</>;\n  }\n\n  const error = errorData.error;\n\n  let errorBanner;\n  if (error) {\n    switch (error.type) {\n      case 'NoSpotifyAccess':\n        if (!spotifyAccessRefreshModal) setSpotifyAccessRefreshModal(true);\n        errorBanner = null; // Modal will take care of error message\n        break;\n      default:\n        errorBanner = <h3>Error</h3>;\n        console.error(error);\n    }\n  }\n\n  return (\n    <>\n      {/* {spotifyAccessRefreshModal && (\n        <SpotifyAuthRefreshModal\n          isOpen={spotifyAccessRefreshModal}\n          toggle={toggleModal}\n        />\n      )}\n      {errorBanner} */}\n      {children}\n    </>\n  );\n};\n\nexport default GlobalError;\n","import './index.css';\nimport './fonts/fonts.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport GlobalError from './components/GlobalError';\nimport { MemoryRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalError>\n      <Router>\n        <App />\n      </Router>\n    </GlobalError>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}