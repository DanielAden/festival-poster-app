{"version":3,"sources":["images/city.jpg","images/fireworks.jpg","error.ts","spotify/SpotifyAPI.ts","store/system/systemSlice.ts","store/Poster/posterSlice.ts","store/rootReducer.ts","store/system/useSpotifyAccessToken.ts","components/AppButton.tsx","components/List/ListRow.tsx","components/List/List.tsx","AppLog.ts","spotify/SpotifyAPIHooks.ts","components/AppSelect/AppSelect.tsx","components/Poster/CanvasUtils.ts","components/Poster/PosterThemes.ts","spotify/SpotifyAuth.ts","components/TopArtistsList.tsx","components/Poster/Poster.tsx","components/Home.tsx","components/SpotifyAuthorize.tsx","App.tsx","serviceWorker.ts","store/index.ts","components/GlobalError.tsx","index.tsx"],"names":["module","exports","toStorable","e","type","AppError","message","name","stack","_type","this","Error","SPOTIFY_API_HOST","SPOTIFY_VERSION","SpotifyAPI","apiKey","playlistId","getPlaylistTracks","trackData","extractArtistsFromTracks","url","fetch","res","unpackResponse","json","SpotifyAuthTokenAPI","accessToken","a","async","spotifyGETHelper","playlist_id","map","playlistTrackObject","track","spotifyTracksFromPlaylist","spotifyMe","limit","offset","time_range","data","SpotifyUserIdAPI","apiurl","noAuthAPICall","endpoints","endpointString","join","URL","href","ok","status","spotifyFetch","access_token","headers","Authorization","objectToQueryParams","queryObject","USP","URLSearchParams","k","append","toString","urlParams","queryParams","queryStr","hasOwnProperty","items","tracks","artistsSet","Set","forEach","add","artists","systemSlice","createSlice","initialState","spotifyAccessToken","spotifyAccessTokenExpire","error","isError","reducers","accessTokenUpdated","state","action","produce","draftState","payload","caughtGlobalError","clearGlobalError","actions","height","window","innerHeight","themeType","topArtistsTimeRange","width","posterSlice","changeThemeType","updateArtistList","topArtistsTimeRangeUpdated","rootReducer","combineReducers","poster","posterSliceReducer","system","systemSliceReducer","useTypedSelector","selector","useSelector","useSpotifyAccessToken","s","expire","parseInt","Math","floor","Date","now","AppButton","children","props","color","size","onClick","stopPropagation","handleActionClick","item","handler","preventDefault","ListRow","rowNumber","disableActions","isEditing","setIsEditing","listProps","useState","text","editText","setEditText","handleRemove","handleEdit","handleSelect","handleSelectionChange","canEdit","canEditGlobal","canRemove","canSelect","undefined","isSelected","ListGroupItem","InputGroup","Input","value","style","display","onChange","target","InputGroupAddon","addonType","createNewListItem","active","key","className","ButtonGroup","disabled","renderRow","_ID","generateId","oldItem","newItem","id","attachHandlers","setter","handlerCallbacks","handlerMiddleware","toRemove","oldItems","filter","i","handleAddRow","addedItem","addRow","editedItem","newItems","itemToEdit","find","JSON","stringify","selectedItem","draft","findIndex","handleSelectAll","selectAllMW","selectAll","handleClear","clearMW","clear","List","isAddingRow","setisAddingRow","addRowText","setAddRowText","canSelectAll","canClear","renderAddRow","canAddRow","userAdded","block","renderHeader","justifyContent","renderListActions","rows","ListGroup","renderList","useErrorLog","dispatch","useDispatch","useCallback","useSpotifyAPI","tokenData","elog","useMemo","spotifyAuthObj","authToken","userId","spotifyAPIFactory","count","useSpotifyTopArtists","timeRange","topArtists","api","log","console","useEffect","topArtistsData","topArtistsList","ao","fetchData","setTopArtistsTimeRange","newTimeRange","useAppSelect","options","initialValue","changeCB","selectedValue","setSelectedValue","selected","handleChange","AppSelect","optionEls","opt","createHiDPICanvas","can","w","h","ctx","getContext","ratio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","setTransform","PosterTheme","ps","bgImage","festivalNameText","festivalNameColor","festivalNameFont","festivalNameFontRatio","festivalNameCase","artistSeperator","artistFont","artistColor","artistFontRatio","artistTopRatio","artistCase","img","scale","max","x","y","drawImage","fontRatio","font","fontHeight","slice","length","lines","currentLine","artist","toUpperCase","ceil","measureText","push","cutTrailingChar","midX","fillStyle","textBaseline","textAlign","strokeStyle","lineWidth","fillText","festivalName","strokeText","baseTop","artistLines","fh","line","top","Image","onload","drawBGImage","drawFestivalName","drawArtistBlock","src","PosterTheme1","fireworks","String","fromCharCode","PosterTheme2","city","MEMOED_AUTH_DATA","usePosterSize","setSize","useLayoutEffect","updateSize","innerWidth","addEventListener","removeEventListener","useWindowSize","windowH","topArtistTROptions","TopArtistsList","initialTimeRange","v","artistSelectProps","selectorFN","actionFN","setItems","fn","newList","useReduxList","maxHeight","overflowY","Poster","theme","setPosterSize","usePosterTheme","ref","useRef","current","draw","border","themeOptions","renderDevTools","Home","useAppSelector","themeSelectHook","Nav","marginBottom","Container","Row","Col","document","getElementById","dataURL","toDataURL","open","write","createImage","SPOTIFY_AUTH_URL","SPOTIFY_ACCESS_TOKEN_FIELD","SPOTIFY_TOKEN_TYPE_FIELD","SPOTIFY_EXPIRES_IN_FIELD","authParams","client_id","response_type","redirect_uri","scope","constructSpotifyAuthURL","queryParamsList","Object","entries","paramsString","spotifyAuthFromWindow","urlList","location","split","queryList","redirectHome","to","SpotifyAuthorize","authData","expires_in","App","hash","exact","path","Boolean","hostname","match","initialJSON","localStorage","getItem","preloadedState","parse","middleware","store","next","getState","setItem","configureStore","reducer","SpotifyAuthRefreshModal","toggle","Modal","ModalHeader","ModalBody","GlobalError","errorData","spotifyAccessRefreshModal","setSpotifyAccessRefreshModal","errorBanner","isOpen","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6edd57d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/city.7878fa91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fireworks.c1f1ed0c.jpg\";","\nexport const toStorable = function(e: Error): AppErrorStorable {\n  const type = (e instanceof AppError) ? e.type : null;\n  return {\n    message: e.message,\n    name: e.name,\n    stack: e.stack,\n    type: type,  \n  }\n};\n\nexport type AppErrorType = 'NoSpotifyAccess' | null;\nexport interface AppErrorStorable {\n  message: string;\n  stack: string | undefined;\n  name: string;\n  type: AppErrorType;\n}\n\nexport class AppError extends  Error {\n  private _type: AppErrorType = null;\n\n  constructor(message: string, type?: AppErrorType) {\n    super(message);\n    if (type) {\n      this._type = type;\n    }\n  }\n\n  get type(): AppErrorType {\n    return this._type;\n  }\n\n  set type(type: AppErrorType) {\n    this._type = type;\n  }\n\n  toJSON() {\n    return toStorable(this);\n  }\n}\n","import { AppError } from '../error';\n\nexport const SPOTIFY_API_HOST = 'https://api.spotify.com';\nexport const SPOTIFY_VERSION = 'v1';\n\nexport interface SpotifyUserObject {\n  country: string;\n  display_name: string;\n  email: string;\n  href: string;\n  id: string;\n  product: string;\n  type: string;\n  uri: string;\n}\n\nexport interface SpotifyPlaylistObject {\n  description: string;\n  href: string;\n  id: string;\n  name: string;\n  tracks: string;\n  type: string;\n  uri: string;\n}\nexport interface SpotifyPagingObject<T> {\n  href: string;\n  items: T[];\n  limit: number;\n  next: string;\n  offset: string;\n  previous: string;\n  total: number;\n}\n\nexport interface SpotifyAlbumObjectSimple {\n  album_type: 'album' | 'single' | 'compilation';\n  artists: SpotifyArtistObjectSimple[];\n  href: string; // A link to the Web API endpoint providing full details of the album.\n  name: string;\n  release_date: string;\n  type: 'album';\n  uri: string;\n}\n\nexport interface SpotifyArtistObjectSimple {\n  href: string; // A link to the Web API endpoint providing full details of the artist.\n  id: string;\n  name: string;\n  type: 'artist';\n  uri: string;\n}\n\nexport interface SpotifyArtistObject {\n  album: SpotifyAlbumObjectSimple; \n  artists: SpotifyArtistObjectSimple[];\n  duration_ms: number;\n  href: string; // A link to the Web API endpoint providing full details of the track.\n  id: string;  \n  name: string;  \n  popularity: number;\n  track_number: number;\n  type: 'artist';\n  uri: string;\n}\n\ntype TimeRange = 'long_term' | 'medium_term' | 'short_term';\n\nexport abstract class SpotifyAPI {\n  constructor(public apiKey: string) {}\n\n  public abstract async getPlaylists(): Promise<SpotifyPlaylistObject[] | AppError>;\n  public abstract async getPlaylistTracks(playlistId: string): Promise<SpotifyArtistObject[] | AppError>\n  public abstract async me(): Promise<SpotifyUserObject | AppError>;\n  public async topArtists?(query?: any): Promise<SpotifyArtistObject[] | AppError>;\n\n  public async getPlaylistArtists(playlistId: string): Promise<string[] | AppError> {\n    const trackData = await this.getPlaylistTracks(playlistId);\n    if (trackData instanceof AppError) return trackData;\n    return extractArtistsFromTracks(trackData)\n  }\n\n  public async noAuthAPICall(url: string): Promise<any | AppError> {\n    try {\n      const res = await fetch(url);\n      const json = await unpackResponse(res, url); \n      return json;\n    } catch(e) {\n      return e;\n    }\n  }\n}\n\nexport class SpotifyAuthTokenAPI extends SpotifyAPI {\n  public getPlaylists() {\n    return spotifyPlaylistsFromToken(this.apiKey)\n  }\n\n  public getPlaylistTracks(playlistId: string) {\n    return spotifyTracksFromPlaylist(this.apiKey, playlistId)\n  }\n\n  public async me() {\n    return spotifyMe(this.apiKey);\n  }\n\n  // public async topArtists(limit: string = '30', offset: string = '0', time_range: TimeRange = 'long_term') {\n  public async topArtists({ limit = '50', offset = '0', time_range = 'medium_term' } = {}) {\n    const data = await spotifyGETHelper<SpotifyArtistObject[]>(this.apiKey, ['me', 'top', 'artists'], {limit, offset, time_range});\n    return data;\n  }\n}\n\nexport class SpotifyUserIdAPI extends SpotifyAPI {\n\n  public async getPlaylists() {\n    const url = apiurl('users', this.apiKey, 'playlists')\n    return await this.noAuthAPICall(url);\n  }\n\n  public async getPlaylistTracks(playlistId: string) {\n    const url = apiurl('playlists', this.apiKey, 'tracks')\n    return await this.noAuthAPICall(url);\n  }\n\n  public async me() {\n    const url = apiurl('users', this.apiKey);\n    return await this.noAuthAPICall(url);\n  }\n}\n\ninterface SpotifyAuth {\n  authToken: string,\n  userId: string,\n}\nexport function spotifyAPIFactory(spotifyAuthObj: Partial<SpotifyAuth>): SpotifyAPI | null {\n  const { authToken, userId } = spotifyAuthObj; \n  if (authToken && authToken !== '') {\n      return new SpotifyAuthTokenAPI(authToken)\n  } else if (userId && userId !== '') {\n      return new SpotifyUserIdAPI(userId)\n  } else {\n    return null;\n  }  \n}\n\nexport function apiurl(...endpoints: string[]): string {\n  let epList = [SPOTIFY_VERSION, ...endpoints]\n  let endpointString = epList.join('/');\n  return new URL(endpointString, SPOTIFY_API_HOST).href\n}\n\nexport async function unpackResponse(res: Response, url: string) {\n  if (!res.ok) {\n    if (res.status === 401) return new AppError(`Fetch for URL ${url} returned not ok status.  Status: ${res.status}`, 'NoSpotifyAccess');\n    return new AppError(`Fetch for URL ${url} returned not ok status.  Status: ${res.status}`, 'NoSpotifyAccess')\n  }\n  if (res.status !== 200) {\n    return new AppError(`Fetch for URL ${url} returned a status of ${res.status}`, 'NoSpotifyAccess')\n  }\n  try {\n    let json = await res.json()\n    return json;\n  } catch(e) {\n    return e;\n  }\n}\n\nexport async function spotifyFetch(access_token: string, url: string): Promise<AppError | any> {\n  const headers = {\n    Authorization: `Bearer ${access_token}`\n  }\n  let res;\n  try {\n    res = await fetch(url, { headers });\n    return unpackResponse(res, url);\n  } catch (e) {\n    return e;\n  }\n}\n\ntype QueryParamsObject = {[k: string]: string}\nfunction objectToQueryParams(queryObject?: QueryParamsObject): string {\n  if (!queryObject) return '';\n  const USP = new URLSearchParams();\n  for (const k in queryObject) {\n    USP.append(k, queryObject[k]);\n  }\n  return USP.toString();\n}\n\nasync function spotifyGETHelper<T>(accessToken: string, urlParams: string[], queryParams?: QueryParamsObject): Promise<T | AppError> {\n  const queryStr = objectToQueryParams(queryParams);\n  const url = apiurl(...urlParams, `?${queryStr}`);\n  const data = await spotifyFetch(accessToken, url)\n  if (data instanceof AppError) return data;\n  if (!data.hasOwnProperty('items')) {\n    throw new AppError(`Returned paging object does not contain items field.  Url: ${url}`)\n  }\n  return data.items;\n}\n\nexport async function spotifyMe(accessToken: string): Promise<SpotifyUserObject> {\n  const url = apiurl('me');\n  const data = await spotifyFetch(accessToken, url);\n  return data;\n}\n\nexport async function spotifyPlaylistsFromToken(accessToken: string): Promise<SpotifyPlaylistObject[] | AppError> {\n  return spotifyGETHelper(accessToken, ['me', 'playlists']);\n}\n\nexport interface SpotifyPlaylistTrackObject {\n  track: SpotifyArtistObject;\n}\nexport async function spotifyTracksFromPlaylist(accessToken: string, playlist_id: string): Promise<SpotifyArtistObject[] | AppError> {\n  const res = await spotifyGETHelper<SpotifyPlaylistTrackObject[]>(accessToken, ['playlists', playlist_id, 'tracks']);\n  // Strip off the PlaylistTrackObject information\n  if (res instanceof AppError) return res;\n  return res.map(playlistTrackObject => playlistTrackObject.track)\n}\n\nexport function extractArtistsFromTracks(tracks: SpotifyArtistObject[]): string[] {\n  let artistsSet = new Set<string>();\n  tracks.forEach(track => {\n    artistsSet.add(track.artists[0].name)\n  });\n  return [...artistsSet];\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport produce from \"immer\"\nimport { toStorable, AppErrorStorable } from '../../error';\n\nexport interface SpotifyAccessTokenPackage {\n  spotifyAccessToken: string;\n  spotifyAccessTokenExpire: string;\n}\n\nexport type GlobalErrorNone = { isError: false };\nexport type GlobalError = { isError: true, error: AppErrorStorable}\nexport type GlobalErrorPackage = GlobalError | GlobalErrorNone; \n\nexport interface SystemState extends SpotifyAccessTokenPackage {\n  error: GlobalErrorPackage,\n}\n\nconst initialState: SystemState = {\n  spotifyAccessToken: '',\n  spotifyAccessTokenExpire: '',\n  error: { isError: false }\n}\n\nconst systemSlice = createSlice({\n  name: 'system',\n  initialState,\n  reducers: {\n    accessTokenUpdated(state, action: PayloadAction<SpotifyAccessTokenPackage>) {\n      return produce(state, draftState => {\n        draftState.spotifyAccessToken = action.payload.spotifyAccessToken;\n        draftState.spotifyAccessTokenExpire = action.payload.spotifyAccessTokenExpire;\n        if (action.payload.spotifyAccessToken !== '') {\n          if (draftState.error.isError && draftState.error.error.type === 'NoSpotifyAccess') {\n            draftState.error = { isError: false };\n          }\n        }\n      })\n    },\n    caughtGlobalError(state, action: PayloadAction<Error>) {\n      return produce(state, draftState => {\n        draftState.error = {\n          isError: true,\n          error: toStorable(action.payload),\n        }\n      })\n    },\n    clearGlobalError(state) {\n      return produce(state, draftState => {\n        draftState.error = { isError: false };\n      })\n    },\n  }\n})\n\nexport const { accessTokenUpdated, caughtGlobalError, clearGlobalError } = systemSlice.actions;\nexport default systemSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ListItem } from '../../components/List/List'\nimport produce from \"immer\"\n\nexport interface PosterState {\n  artists: ListItem[];\n  topArtistsTimeRange: string; // TODO make this type safe\n  themeType: string;\n  height: number;\n  width: number;\n}\n\nconst height = window.innerHeight * .8;\nconst width = height * .65;\n\nconst initialState: PosterState = {\n  artists: [],\n  themeType: 'theme1',\n  topArtistsTimeRange: 'medium_term',\n  width,\n  height,\n}\n\nconst posterSlice = createSlice({\n  name: 'poster',\n  initialState,\n  reducers: {\n    changeThemeType(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.themeType = action.payload;\n      })\n    },\n    updateArtistList(state, action: PayloadAction<ListItem[]>) {\n      return produce(state, draftState => {\n        draftState.artists = action.payload;\n      })\n    },\n    topArtistsTimeRangeUpdated(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.topArtistsTimeRange = action.payload;\n      })\n    },\n  }\n})\n\nexport const { changeThemeType, updateArtistList, topArtistsTimeRangeUpdated } = posterSlice.actions;\n\nexport default posterSlice.reducer;","import { combineReducers } from 'redux';\nimport systemSliceReducer from './system/systemSlice';\nimport posterSliceReducer from './Poster/posterSlice'; \nimport { useSelector } from 'react-redux';\n\nexport const rootReducer = combineReducers({\n  poster: posterSliceReducer,\n  system: systemSliceReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst useTypedSelector = <T>(selector: (state: RootState) => T): T => {\n  const value = useSelector(selector);\n  return value;\n}\n\nexport default useTypedSelector;","import useTypedSelector from \"../rootReducer\";\n\nconst nowSeconds = () => {\n  return Math.floor(Date.now() / 1000)\n}\n\ntype UseSpotifyAccessToken = { status: 'NONE' } | { status: 'EXPIRED' } | { status: 'VALID', accessToken: string}\nconst useSpotifyAccessToken = (): UseSpotifyAccessToken => {\n  const accessToken = useTypedSelector((s) => s.system.spotifyAccessToken);\n  const expire = useTypedSelector((s) => s.system.spotifyAccessToken);\n  if (accessToken === '' && expire === '') return { status: 'NONE' }\n  if (accessToken === '' || expire === '') throw new Error('Spotify access token/expire in invalid state')\n\n  const expireTime = parseInt(expire, 10);\n  if (expireTime < nowSeconds()) return { status: 'EXPIRED' }\n  return {\n    status: 'VALID',\n    accessToken,\n  }\n}\n\nexport default useSpotifyAccessToken;","import React from 'react'\nimport { Button as RSButton, ButtonProps } from 'reactstrap'\n\n\ninterface Props extends ButtonProps {\n\n}\n\n\nconst AppButton: React.FC<Props> = ({children, ...props }) => {\n  const color = (props.color) ? props.color : 'primary';\n  const size = (props.size) ? props.size : 'sm';\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation()\n    props.onClick?.(e);\n  } \n\n  return (\n    <RSButton color={color} \n              size={size}\n              onClick={handleClick}\n              {...props}>\n      {children}\n    </RSButton>\n  )\n}\n\nexport default AppButton;\n","import React, { useState } from 'react'\nimport { ListItem, createNewListItem, ListHandler, ListProps } from './List'\nimport { InputGroupAddon, Input, InputGroup, ListGroupItem, ButtonGroup, } from 'reactstrap';\nimport AppButton from '../AppButton'\nimport '../../style.css'\n\n\nexport function handleActionClick(e: any, item: ListItem, handler: ListHandler) {\n  e.preventDefault();\n  handler(item);\n}\n\n\ninterface Props extends ListProps {\n  item: ListItem;\n  isEditing: boolean;\n  setIsEditing: React.Dispatch<any>;\n  disableActions: boolean;\n  rowNumber: number;\n}\nconst ListRow: React.FC<Props> = ({ rowNumber, disableActions, item, isEditing, setIsEditing, ...listProps }) => {\n  const [editText, setEditText] = useState(item.text);\n\n  const { handleRemove, handleEdit, handleSelectionChange: handleSelect } = listProps;\n  const canEdit = listProps.canEditGlobal && item.canEdit && handleEdit; \n  const canRemove = !!(listProps.canRemove && handleRemove)\n  const canSelect = !!(listProps.canSelect && handleSelect !== undefined);\n  const isSelected = !!(item.isSelected);\n\n  function renderIsEditing() {\n    return (\n      <ListGroupItem>\n        <InputGroup>\n          <Input value={editText} style={{\n            display: 'inline',\n          }} onChange={ (e) => {\n            setEditText(e.target.value);\n          }} /> \n\n          <InputGroupAddon addonType=\"append\">\n            <AppButton onClick={(e) => {\n              handleActionClick(e, createNewListItem(item, {text: editText}), handleEdit as ListHandler);\n              setEditText('');\n              setIsEditing(false);\n            }}>Save</AppButton>\n          </InputGroupAddon>\n          <InputGroupAddon addonType=\"append\">\n            <AppButton color=\"danger\"\n              onClick={(e) => {\n                setEditText('');\n                setIsEditing(false);\n              }}>X</AppButton>\n          </InputGroupAddon>\n        </InputGroup>\n      </ListGroupItem>\n    )\n  }\n\n  const renderActionButtons = () => {\n    return (\n      <ButtonGroup>\n        {canEdit && handleEdit && \n          <AppButton disabled={disableActions} onClick={(e) => setIsEditing(true)}>Edit</AppButton>}\n        {canRemove && handleRemove &&\n          <AppButton disabled={disableActions} onClick={(e) => {handleActionClick(e, item, handleRemove)}}>Remove</AppButton>}\n      </ButtonGroup>\n    )\n  }\n\n  const renderRow = () => {\n    const active = canSelect && isSelected;\n    return (\n      <ListGroupItem key={item.text} action={canSelect} active={active} \n                     className=\"noselect d-flex justify-content-between align-items-center py-1\"\n                     onClick={ (e) => listProps.handleSelectionChange?.(item) } >\n              {`${rowNumber + 1}. `}{item.text}\n              {renderActionButtons()}\n              {(active) ? '✅' : '❌'}\n      </ListGroupItem>\n    )\n  }\n\n  if (isEditing) {\n    return renderIsEditing();\n  } else {\n    return renderRow();\n  }\n}\n\nexport default ListRow;\n\n","import React, { useState, useCallback } from 'react'\nimport ListRow from './ListRow'\nimport AppButton from '../AppButton'\nimport { ButtonGroup, InputGroup, Input, ListGroup, ListGroupItem } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport produce from 'immer';\n\n\nconst SELECTALL = 'Select All';\nconst CLEAR = 'Unselect All'\n\nexport interface ListItem {\n  id: number;\n  text: string;\n  canEdit?: boolean;\n  isSelected: boolean;\n  userAdded?: boolean;\n}\n// Quick and dirty way to generate probably unique ids, \n// Should serve the purpose for this list implementation\nlet _ID = -1;\nconst generateId = () => {\n  _ID++;\n  return _ID;\n} \nexport function createNewListItem(oldItem: Omit<ListItem, 'id'>, newItem?: Omit<Partial<ListItem>, 'id'>): ListItem {\n  return {\n    id: generateId(),\n    ...oldItem,\n    ...newItem,\n  }\n}\n\ntype UseList = [ListItem[], (items: string[]) => void, Required<ListHandlers>]\nexport const useList = (handlerCallbacks?: ListHandlers, handlerMiddleware?: ListHandlerMiddleware): UseList => {\n  const [list, setList] = useState<ListItem[]>([])\n\n  const setListWrapper = useCallback((items: string[]) => {\n    const listItemsMap = (values: string[]) => values.map(v => {\n      return createNewListItem({\n        text: v,\n        isSelected: true,\n        canEdit: false,\n        userAdded: false,\n      })\n    })\n    setList(listItemsMap(items));\n  }, [])\n\n  const listItemHook = attachHandlers(setList, handlerCallbacks, handlerMiddleware);\n  return [list, setListWrapper, listItemHook];\n}\n\ntype UseReduxList = { items: ListItem[], setItems: (items: ListItem[]) => void, listProps: Required<ListHandlers> }\nexport const useReduxList = ( \n  selectorFN: (state: any) => ListItem[],\n  actionFN: (newList: ListItem[]) => void,\n): UseReduxList => {\n  const items = useSelector(selectorFN);\n  const dispatch = useDispatch();\n  const listFNSetter: ListSetter = (fn: (oldList: ListItem[]) => ListItem[]) => {\n    const newList =  fn(items);\n    dispatch(actionFN(newList));\n  }\n  const setItems = useCallback((items: ListItem[]) => {\n    dispatch(actionFN(items));\n  }, [dispatch, actionFN])\n\n  const listProps = attachHandlers(listFNSetter);\n  return { \n    items: items, \n    setItems, \n    listProps,\n  };\n}\n\n// TODO use immer produce for all of this\ntype ListSetter = (fn: (oldList: ListItem[]) => ListItem[]) => void;\nexport function attachHandlers(\n  setter: ListSetter, \n  handlerCallbacks?: ListHandlers,\n  handlerMiddleware?: ListHandlerMiddleware, \n): Required<ListHandlers> {\n  return {\n    handleRemove: (toRemove) => {\n      setter((oldItems) => {\n        return oldItems.filter(i => i.id !== toRemove.id)\n      });\n      handlerCallbacks?.handleRemove?.(toRemove);\n    },\n    handleAddRow: (addedItem) => {\n      const newItem = handlerMiddleware?.addRow?.(addedItem) || addedItem;\n      setter((oldItems) => {\n        return [...oldItems, newItem]\n      });\n      handlerCallbacks?.handleAddRow?.(newItem);\n    },\n    handleEdit: (editedItem) => {\n      setter((oldItems) => {\n        const newItems = [...oldItems];\n        let itemToEdit = newItems.find(i => i.id === editedItem.id)\n        if (!itemToEdit) throw new Error(`Could not find edited item: ${JSON.stringify(editedItem)}`) \n        itemToEdit.text = editedItem.text;\n        return newItems; \n      });\n      handlerCallbacks?.handleEdit?.(editedItem);\n    },\n    handleSelectionChange: (selectedItem) => { \n      setter((oldItems) => {\n        return produce(oldItems, (draft) => {\n          const i = draft.findIndex(i => i.id === selectedItem.id)\n          draft[i].isSelected = !selectedItem.isSelected;\n          handlerCallbacks?.handleSelectionChange?.(draft[i]);\n        })\n      });\n    },\n    handleSelectAll: () => {\n      setter((oldItems) => {\n        let newItems = oldItems.map(i => {\n          return {...i, isSelected: true}  \n        }) \n        const selectAllMW = handlerMiddleware?.selectAll\n        if (selectAllMW) {\n          newItems = selectAllMW(newItems);\n        }\n        return newItems; \n      });\n    },\n    handleClear: () => {\n      setter((oldItems) => {\n        let newItems = oldItems.map(i => {\n          return {...i, isSelected: false}  \n        }) \n        const clearMW = handlerMiddleware?.clear\n        if (clearMW) {\n          newItems = clearMW(newItems);\n        }\n        return newItems; \n      });\n    }\n  }\n}\n\nexport interface ListHandlerMiddleware  {\n  addRow?: (item: ListItem) => ListItem; \n  selectAll?: (items: ListItem[]) => ListItem[];\n  clear?: (items: ListItem[]) => ListItem[];\n}\n\nexport type ListHandler = (item: ListItem) => void;\nexport type ListActionHandler = (actionValue: any) => void;\nexport interface ListHandlers {\n  handleRemove?: ListHandler;\n  handleAddRow?: ListHandler; \n  handleEdit?: ListHandler;\n  handleSelectionChange?: ListHandler;\n  handleSelectAll?: (newItems?: ListItem[]) => void; \n  handleClear?: (newItems?: ListItem[]) => void; \n}\nexport interface ListProps extends ListHandlers {\n  name?: string;\n  items: ListItem[];\n  canRemove?: boolean;\n  canAddRow?: boolean;\n  canEditGlobal?: boolean;\n  canSelect?: boolean;\n}\n\n\nconst List: React.FC<ListProps> = (props) => {\n  const [isAddingRow, setisAddingRow] = useState(false);\n  const [addRowText, setAddRowText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const { items } = props;\n  const canSelectAll = props.canSelect && props.handleSelectAll;\n  const canClear = props.canSelect && props.handleClear;\n\n  const renderAddRow = () => {\n    const { handleAddRow, canAddRow } = props;\n    if ( !(handleAddRow && canAddRow)) return null;\n    if (isAddingRow) return (\n      <div>\n        <ListGroupItem>\n          <InputGroup>\n            <Input value={addRowText} onChange={\n              (e) => setAddRowText(e.target.value)\n            } />\n            <ButtonGroup>\n              <AppButton onClick={() => {\n                const newItem = createNewListItem({\n                  text: addRowText,\n                  userAdded: true,\n                  isSelected: false,\n                }, {})\n                setisAddingRow(false);\n                handleAddRow(newItem);\n                setAddRowText('');\n              }}>Save</AppButton>\n              <AppButton color=\"danger\"\n                onClick={() => {\n                  setisAddingRow(false);\n                  setAddRowText('');\n                }}>X</AppButton>\n              </ButtonGroup>\n          </InputGroup>\n        </ListGroupItem>\n      </div>\n    )\n    \n    return (\n      <ListGroupItem>\n        <AppButton block disabled={isEditing} onClick={() => setisAddingRow(true)}>Add Row</AppButton>\n      </ListGroupItem>\n    )\n  }\n\n  const renderListActions = () => {\n    let selectAll = null;\n    let clear = null;\n    if (canSelectAll) {\n      selectAll = (\n        <AppButton color='success' onClick={(e) => {\n          props.handleSelectAll?.(); \n        }}>{SELECTALL}</AppButton>\n      )\n    } \n    if (canClear) {\n      clear = (\n        <AppButton color='warning' onClick={(e) => {\n          props.handleClear?.(); \n        }}>{CLEAR}</AppButton>\n      )\n    } \n    return (\n      <div className=\"list__actions\">\n        <ButtonGroup>\n          {selectAll}\n          {clear}\n        </ButtonGroup>\n      </div>\n    )\n  }\n\n  const renderHeader = () => {\n    return (\n      <div className=\"list__header\" style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n      }}>\n        { (props.name) ? <h3>{props.name}</h3> : null }\n        {renderListActions()}\n      </div>\n    )\n  }\n\n  function renderList() {\n    const rows = items.map((item, i) => {\n      return <ListRow key={item.id} \n                      item={item} \n                      setIsEditing={setIsEditing}\n                      isEditing={isEditing}\n                      disableActions={isAddingRow}\n                      rowNumber={i}\n                      {...props} />\n    })\n    return (\n      <div className=\"list\">\n        {renderHeader()}\n        <ListGroup>\n          {rows}\n          {renderAddRow()}\n        </ListGroup>\n      </div>\n    )\n  }\n  return (\n    <div className=\"list\"> \n      {renderList()}\n    </div>\n  )\n}\n\nexport default List;","// import useTypedSelector from \"./store/rootReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { caughtGlobalError } from \"./store/system/systemSlice\";\nimport { useCallback } from \"react\";\nimport { AppErrorType } from \"./error\";\n\n\n\n\n// TODO implement smarter error logging.  This will so far \n//      only catch one error at a time.\nexport const useErrorLog = () => {\n  // const error = useTypedSelector(s => s.system.error)\n  const dispatch = useDispatch();\n\n  const log = useCallback((e: Error, type?: AppErrorType) => {\n    // if (error.isError) return; \n    if (type) (e as any).type = type;\n    dispatch(caughtGlobalError(e));\n  }, [dispatch, ])\n  return log;\n}\n\nexport const useAppLog = () => {\n  const log = useCallback((data: any) => {\n    console.log(data);\n  }, [])\n  return log;\n}","import { useEffect, useMemo, } from 'react';\nimport { spotifyAPIFactory, SpotifyAPI, SpotifyArtistObject } from './SpotifyAPI';\nimport { useDispatch } from 'react-redux';\nimport useSpotifyAccessToken from '../store/system/useSpotifyAccessToken';\nimport useTypedSelector from '../store/rootReducer';\nimport { updateArtistList, topArtistsTimeRangeUpdated } from '../store/Poster/posterSlice';\nimport { createNewListItem, ListItem } from '../components/List/List';\nimport { useErrorLog, useAppLog  } from '../AppLog';\nimport { AppError } from '../error';\n\nexport const useSpotifyAPI = (): SpotifyAPI | null => {\n  const tokenData = useSpotifyAccessToken();\n  const elog = useErrorLog();\n  let accessToken = '';\n  if (tokenData.status === 'NONE' || tokenData.status === 'EXPIRED') {\n    const e = new AppError(`Spotify Access token status not valid.  status: ${tokenData.status}`);\n    elog(e, 'NoSpotifyAccess');\n  } else {\n    accessToken = tokenData.accessToken;\n  }\n  const memoedAPI = useMemo(() => {\n    if (accessToken === '') return null;\n    return spotifyAPIFactory( { authToken: accessToken} )\n  }, [accessToken])\n\n  return memoedAPI;\n}\n\nconst artistObjectsToListItems = (artistObjects: SpotifyArtistObject[]) => {\n  return artistObjects.map(ao => {\n    return createNewListItem({\n      isSelected: true,\n      text: ao.name,\n      canEdit: false,\n      userAdded: false,\n    })\n  })\n}\n\nlet count = 0; // TODO remove\ntype UseSpotifyTopArtists = [ListItem[], (newTimeRange: string) => void]\nexport const useSpotifyTopArtists = () => {\n  const timeRange = useTypedSelector(s => s.poster.topArtistsTimeRange);\n  const topArtists = useTypedSelector(s => s.poster.artists);\n\n  const api = useSpotifyAPI(); \n  const dispatch = useDispatch();\n  const log = useAppLog();\n  const elog = useErrorLog();\n\n  const setTopArtistsTimeRange = (newTimeRange: string) => {\n    dispatch(topArtistsTimeRangeUpdated(newTimeRange))\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!api?.topArtists) throw new Error('Expected topArtists method to exist on spotify api object');\n      count++;\n      if (count > 5) throw new Error('Max Count Reached')\n      log('Using api to retreive top Artists for range ' + timeRange)\n      let topArtistsData;\n      try {\n        topArtistsData = await api.topArtists({ time_range: timeRange });\n      } catch(e) {\n        elog(e, 'NoSpotifyAccess');\n      } finally {\n        if (!topArtistsData) throw new AppError('Expected top artists data');\n        if (topArtistsData instanceof Error) {\n          elog(topArtistsData);\n          return;\n        }\n        const topArtistsList = artistObjectsToListItems(topArtistsData);\n        dispatch(updateArtistList(topArtistsList));\n      }\n    }\n    if (!api) return;\n    fetchData();\n  }, [dispatch, log, elog, api, timeRange])\n\n  return { topArtists, setTopArtistsTimeRange };\n}\n","import React, { useState } from 'react'\n\n\ntype UseAppSelect = [string, Props]\nexport const useAppSelect = (options: SelectOption[], initialValue: string, changeCB?: (value: string) => void): UseAppSelect => {\n  const [selectedValue, setSelectedValue] = useState(initialValue);\n  const handleChange = (value: string) => {\n    setSelectedValue(value);\n    if (changeCB) changeCB(value);\n  }\n  \n  return [selectedValue, {\n    options,\n    selected: selectedValue,\n    handleChange,\n  }]\n}\n\ninterface SelectOption {\n value: string;\n text: string;\n}\ninterface Props {\n  selected: string;\n  options: SelectOption[];\n  handleChange?: (value: string) => void;\n}\nconst AppSelect: React.FC<Props> = ({ options, handleChange, selected}) => {\n  const optionEls = options.map(opt => {\n    return <option key={opt.value} value={opt.value}>{opt.text}</option>\n  })\n\n  return (\n    <select value={selected} onChange={\n      (e) => {\n        if (handleChange) handleChange(e.target.value);\n      }\n    }>\n      {optionEls}\n    </select>\n  )\n}\n\nexport default AppSelect;\n","// based off of the following comment from stackoverflow\n// https://stackoverflow.com/a/15666143/1215360\n\nexport const pixelRatio = (ctx: CanvasRenderingContext2D) => {\n      const dpr = window.devicePixelRatio || 1;\n      const bsr = (ctx as any).webkitBackingStorePixelRatio ||\n                  (ctx as any).mozBackingStorePixelRatio ||\n                  (ctx as any).msBackingStorePixelRatio ||\n                  (ctx as any).oBackingStorePixelRatio ||\n                  (ctx as any).backingStorePixelRatio || 1;\n  return dpr / bsr;\n}\n\nexport const createHiDPICanvas = function(can: HTMLCanvasElement, w: number, h: number,) {\n  const ctx = can.getContext('2d');\n  if (!ctx) throw new Error('Could not get canvas context to create HiDPI canvas')\n  const ratio = pixelRatio(ctx);\n  can.width = w * ratio;\n  can.height = h * ratio;\n  can.style.width = w + \"px\";\n  can.style.height = h + \"px\";\n  ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\n  return can;\n}\n\n","import city from '../../images/city.jpg' \nimport fireworks from '../../images/fireworks.jpg' \nimport { PosterState } from '../../store/Poster/posterSlice'\nimport { AppError } from '../../error'\nimport useTypedSelector from '../../store/rootReducer'\nimport { useLayoutEffect, useState } from 'react'\nimport { createHiDPICanvas } from './CanvasUtils'\n\n\ntype Case = 'none' | 'upper'\nabstract class PosterTheme {\n  protected ctx!: CanvasRenderingContext2D;\n  protected w: number = 900;\n  protected h: number = 600;\n\n  protected bgImage: string = '';\n\n  protected festivalNameText: string = 'My Festival'; \n  protected festivalNameColor: string = 'white'; \n  protected festivalNameFont: string = 'serif'; \n  protected festivalNameFontRatio: number = .1; \n  protected festivalNameCase: Case = 'upper';\n\n  protected artistSeperator: string =  '/';\n  protected artistFont = 'serif';\n  protected artistColor: string = 'white'; \n  protected artistFontRatio: number = .025; \n  protected artistTopRatio: number = .5;\n  protected artistCase: Case = 'upper';\n\n  constructor(protected ps: PosterState,) { }\n  protected getContext(can: HTMLCanvasElement,) {\n    const ctx = can.getContext('2d');\n    if (!ctx) throw new AppError('Expected canvas context');\n    return ctx;\n  }\n\n  public setPosterSize(w: number, h: number) {\n    this.w = w; \n    this.h = h;\n  }\n\n  // From this tutorial: https://riptutorial.com/html5-canvas/example/19169/scaling-image-to-fit-or-fill-\n  protected drawBGImage(img: HTMLImageElement) {\n    var scale = Math.max(this.w / img.width, this.h / img.height);\n    var x = (this.w / 2) - (img.width / 2) * scale;\n    var y = (this.h / 2) - (img.height / 2) * scale;\n    this.ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\n  }\n\n  protected font(fontRatio: number, font: string) {\n    return `${this.fontHeight(fontRatio)}px ${font}`\n  }\n\n  protected fontHeight(size: number) {\n    return Math.floor(size * this.h);\n  }\n\n  protected cutTrailingChar(s: string) {\n    return s.slice(0, s.length - 1);\n  }  \n\n  protected get midX() {\n    return Math.floor(this.w / 2);\n  }\n\n  protected get midY() {\n    return Math.floor(this.h / 2);\n  }\n\n  protected get festivalName() {\n    return (this.festivalNameCase === 'upper') ? \n      this.festivalNameText.toUpperCase() : \n      this.festivalNameText;\n  } \n\n  protected get artists() {\n    return this.ps.artists.filter(a => a.isSelected);\n  }\n\n  protected artistLines() {\n    const lines: string[] = [];\n    let currentLine = '';\n    for (let item of this.artists) {\n      let artist = item.text;\n      if (this.artistCase === 'upper') artist = artist.toUpperCase();\n      const lineWidth = Math.ceil(this.ctx.measureText(currentLine + artist).width);\n      if (lineWidth > this.w) {\n        lines.push(this.cutTrailingChar(currentLine))\n        currentLine = artist + this.artistSeperator;\n        continue;\n      }\n      currentLine = currentLine + artist + this.artistSeperator;\n    }\n    if (currentLine !== '') lines.push(this.cutTrailingChar(currentLine))\n    return lines;\n  }\n\n  protected drawFestivalName() {\n    const midX = this.w / 2;\n    this.ctx.font = this.font(this.festivalNameFontRatio, this.festivalNameFont)\n    this.ctx.fillStyle = this.festivalNameColor;\n    this.ctx.textBaseline = 'top';\n    this.ctx.textAlign = 'center';\n    this.ctx.strokeStyle = 'black';\n    this.ctx.lineWidth = 2;  \n\n    this.ctx.fillText(this.festivalName, midX, 30);\n    this.ctx.strokeText(this.festivalName, midX, 30);\n  }\n\n  protected drawArtistBlock() {\n    const baseTop = this.h * this.artistTopRatio;\n    this.ctx.font = this.font(this.artistFontRatio, this.artistFont) \n    const lines = this.artistLines();\n\n    this.ctx.textBaseline = 'top';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillStyle = this.artistColor;\n\n    const fh = this.fontHeight(this.artistFontRatio)\n    lines.forEach((line, i) => {\n      const top = baseTop + ((i + 1) * fh);\n      this.ctx.fillText(line, this.midX, top, this.w);\n    })\n  }\n\n  public draw(can: HTMLCanvasElement) {\n    this.ctx = this.getContext(can);\n    can.width = this.w;\n    can.height = this.h;\n    createHiDPICanvas(can, this.w, this.h);\n\n    const img = new Image(this.w, this.h);\n    img.onload = () => {\n      this.drawBGImage(img);\n      this.drawFestivalName();\n      this.drawArtistBlock();\n    }\n    img.src = this.bgImage; \n  }\n}\n\nclass PosterTheme1 extends PosterTheme {\n  bgImage = fireworks; \n\n  festivalNameFont = 'Impact'\n  festivalNameColor = 'tomato';\n\n  artistColor = 'lightblue';\n  artistSeperator = String.fromCharCode(8226);\n  artistTopRatio = .4;\n}\n\nclass PosterTheme2 extends PosterTheme {\n  bgImage = city; \n\n  festivalNameColor = 'lime';\n  festivalNameFont = 'Avant Garde'\n\n  artistColor = 'lime'\n  artistFontRatio = .02;\n  artistTopRatio = .7;\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\nexport const usePosterSize = () => {\n  const [, windowH] = useWindowSize();\n  const h = Math.floor(windowH * .8)\n  const w = Math.floor(h * .7)\n  return [w, h]\n}\n\nexport const usePosterTheme = (): PosterTheme => {\n  const [w, h] = usePosterSize();\n  const ps = useTypedSelector(s => s.poster)\n  let theme;\n  switch(ps.themeType) {\n    case 'theme1': \n      theme = new PosterTheme1(ps);\n      break;\n    case 'theme2': \n      theme = new PosterTheme2(ps);\n      break;\n    default: throw new AppError(`Invalid theme ${ps.themeType}`);\n  }\n  theme.setPosterSize(w, h);\n  return theme;\n}\n","const client_id = 'f775b626d4784dfba4491742d5453d55'; // Your client id\nconst redirect_uri = 'http://localhost:3000'; // Your redirect uri\nconst scope = 'user-top-read';\nconst SPOTIFY_AUTH_URL = 'https://accounts.spotify.com/authorize'\nconst SPOTIFY_ACCESS_TOKEN_FIELD = 'access_token';\nconst SPOTIFY_TOKEN_TYPE_FIELD = 'token_type';\nconst SPOTIFY_EXPIRES_IN_FIELD = 'expires_in';\n\nconst authParams = {\n  client_id,\n  response_type: 'token',\n  redirect_uri,\n  scope,\n}\n\nexport function constructSpotifyAuthURL() {\n  const queryParamsList = [];\n  for (let [k, v] of Object.entries(authParams)) {\n    queryParamsList.push(`${k}=${v}`)\n  }\n  const paramsString = queryParamsList.join('&');\n  return `${SPOTIFY_AUTH_URL}?${paramsString}`;\n}\n\ninterface SpotifyAuthData {\n  access_token: string;\n  token_type: string;\n  expires_in: string;\n  state?: string;\n} \n\nlet MEMOED_AUTH_DATA: SpotifyAuthData | undefined; \n\ntype AuthDataStatus = 'AUTHORIZED' | 'NOT_AUTHORIZED' | 'ACCESS_DENIED' | 'ERROR';\nexport function spotifyAuthFromWindow(): { status: AuthDataStatus, data?: SpotifyAuthData, error?: string}  {\n  if (MEMOED_AUTH_DATA) {\n    return {\n      status: 'AUTHORIZED',\n      data: MEMOED_AUTH_DATA,\n    }\n  }\n  const data: any = {};\n  const urlList = window.location.href.split('#')\n  if (urlList.length !== 2) return { status: 'NOT_AUTHORIZED', } // no hash fragment \n  const queryList = urlList[1].split('&');\n  for (let queryString of queryList) {\n    let [k, v] = queryString.split('=');\n    data[k] = v;\n  }\n\n  if (data.hasOwnProperty('error')) {\n    return { status: 'ACCESS_DENIED' }\n  }\n\n  let error = '';\n  if (!data.hasOwnProperty(SPOTIFY_ACCESS_TOKEN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_ACCESS_TOKEN_FIELD}`\n  }\n  if (!data.hasOwnProperty(SPOTIFY_EXPIRES_IN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_EXPIRES_IN_FIELD}`\n  }\n  if (!data.hasOwnProperty(SPOTIFY_TOKEN_TYPE_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_TOKEN_TYPE_FIELD}`\n  }\n  if (error !== '') {\n    return {\n      status: 'ERROR',\n      error\n    }\n  }\n\n  return {\n    status: 'AUTHORIZED',\n    data\n  }\n}\n","import React from 'react'\nimport { useSpotifyTopArtists } from '../spotify/SpotifyAPIHooks'\nimport List, { useReduxList, } from './List/List'\nimport AppSelect, { useAppSelect } from './AppSelect/AppSelect'\nimport useTypedSelector, { RootState } from '../store/rootReducer'\nimport { updateArtistList } from '../store/Poster/posterSlice'\nimport { usePosterSize } from './Poster/PosterThemes'\n\nconst listName = 'Top Artists'\nconst topArtistTROptions = [\n  {\n    text: 'Last 6 Months',\n    value: 'medium_term',\n  },\n  {\n    text: 'All Time',\n    value: 'long_term',\n  },\n  {\n    text: '1 Month',\n    value: 'short_term'\n  },\n]\n\ninterface Props {\n\n}\nconst TopArtistsList: React.FC<Props> = () => {\n  const [, h] = usePosterSize();\n  const { setTopArtistsTimeRange } = useSpotifyTopArtists();\n  const initialTimeRange = useTypedSelector(s => s.poster.topArtistsTimeRange)\n  const [, artistSelectProps] = useAppSelect(topArtistTROptions, initialTimeRange, (v) => setTopArtistsTimeRange(v))\n\n  const { items, listProps } = useReduxList(\n    (state: RootState) => state.poster.artists, \n    updateArtistList,\n  );\n\n\n  return (\n    <div>\n      <h3 style={{display: 'inline-block'}}>{listName}</h3>\n      <AppSelect {...artistSelectProps} />\n      <div style={{maxHeight: h, overflowY: 'scroll'}}>\n        <List  items={items} {...listProps} canSelect />\n      </div>\n    </div>\n  )\n}\n\nexport default TopArtistsList;\n","import React, { useRef, useEffect } from 'react'\nimport '../../style/Poster.css'\nimport { usePosterTheme } from './PosterThemes'\n\ninterface Props {\n  themeType?: string; \n}\nconst Poster: React.FC<Props> = ({ themeType = 'theme1' }) => {\n  const theme = usePosterTheme();\n  const ref = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const can = ref.current;\n    if (!can) throw new Error('Unable to retreive poster canvas element')\n    theme.draw(can);\n  })\n\n  const style = (): React.CSSProperties => {\n    return {\n      border: '3px solid',\n    }\n  }\n\n  return (\n    <canvas ref={ref} id=\"poster\" style={style()}>\n      Festival Poster Viewer\n    </canvas>\n  )\n}\n\n\nexport default Poster;\n  ","import React from 'react'\nimport TopArtistsList from './TopArtistsList'\nimport { Container, Row, Col, Nav, } from 'reactstrap';\nimport Poster from './Poster/Poster';\nimport AppSelect, { useAppSelect } from './AppSelect/AppSelect';\nimport { useDispatch } from 'react-redux';\nimport { changeThemeType } from '../store/Poster/posterSlice';\nimport useAppSelector from '../store/rootReducer';\nimport AppButton from './AppButton';\n\nconst createImage = async () => {\n  const can = document.getElementById('poster') as HTMLCanvasElement;\n  if (!can) throw new Error('Expected canvas node')\n  const dataURL = can.toDataURL('image/jpeg', 1.0);\n  const w = window.open('_blank') \n  w?.document.write(`<img src=\"${dataURL}\"></img>`)\n}\n\nconst themeOptions = [\n  {\n    text: 'Theme 1',\n    value: 'theme1',\n  },\n  {\n    text: 'Theme 2',\n    value: 'theme2',\n  },\n]\n\ninterface Props {\n}\nconst Home: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const theme = useAppSelector((s) => s.poster.themeType)\n  const [, themeSelectHook] = useAppSelect(themeOptions, theme, (value) => {\n    dispatch(changeThemeType(value))\n  });\n\n  return (\n    <div className='home'>\n      <Nav className='navbar navbar-expand-sm navbar-light bg-light py-0'\n        style={{marginBottom: '10px'}}>\n        <div className='navbar-brand'>Poster App</div>\n        {renderDevTools()}\n      </Nav>\n      <Container>\n        <Row>\n          <Col>\n            <AppSelect {...themeSelectHook} />\n            <AppButton color={'warning'} onClick={() => createImage()}>Create Image</AppButton>\n            <Poster themeType={theme}/>\n          </Col>\n          <Col>\n            <TopArtistsList />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nconst renderDevTools = () => {\n  if (process.env.NODE_ENV !== 'development') return null;\n  return (\n    <form className='form-inline'>\n      <button className=\"btn btn-outline-danger\" type=\"button\"\n        onClick={() => {\n          window.localStorage.clear();\n          window.location.reload();\n      }}>Clear Cache</button>\n    </form>\n  )\n}\n\nexport default Home;\n","import React from 'react'\nimport { spotifyAuthFromWindow } from '../spotify/SpotifyAuth'\nimport { Redirect } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { accessTokenUpdated } from '../store/system/systemSlice'\n\nconst redirectHome = () => {\n  return <Redirect to='/' />\n}\n\ninterface Props {\n  \n}\nconst SpotifyAuthorize: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  if (authData.status !== 'AUTHORIZED') {\n    console.log(`Non Authorized status: ${authData.status}`)\n    console.log(authData.error)\n    return redirectHome(); \n  }\n\n  if (!authData.data) throw new Error('Received authorized status without data')\n  const { access_token, expires_in }  = authData.data;\n  dispatch(accessTokenUpdated({ spotifyAccessToken: access_token, spotifyAccessTokenExpire: expires_in}))\n  return redirectHome(); \n}\n\nexport default SpotifyAuthorize;\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home'\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport SpotifyAuthorize from './components/SpotifyAuthorize';\nimport { useDispatch } from 'react-redux';\nimport { spotifyAuthFromWindow } from './spotify/SpotifyAuth';\nimport { accessTokenUpdated } from './store/system/systemSlice';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  // TODO update this to be safer\n  if (authData.status !== 'AUTHORIZED') {\n    // console.log(`Non Authorized status: ${authData.status}`)\n    // console.log(authData.error)\n  } else {\n    if (!authData.data) throw new Error('Received authorized status without data')\n    const { access_token, expires_in }  = authData.data;\n    window.location.hash = '';\n    dispatch(accessTokenUpdated({ spotifyAccessToken: access_token, spotifyAccessTokenExpire: expires_in}))\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/authenticate\">\n          <SpotifyAuthorize />\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { rootReducer } from './rootReducer'\n\n\n// TODO look into other options to replicate this functionality.\n// works for now but obviously not very efficient\nexport const REDUX_LOCAL_STORAGE_KEY = '__REDUX_LOCAL_STORAGE_KEY'  \nconst localStorageMiddleware = (store: any) => (next: any) => (action: any) => {\n  let res = next(action);\n  let state = store.getState()\n  let json = JSON.stringify(state);\n  window.localStorage.setItem(REDUX_LOCAL_STORAGE_KEY, json);\n  return res;\n}\n\nconst initialJSON = window.localStorage.getItem(REDUX_LOCAL_STORAGE_KEY);\nconst preloadedState = (initialJSON) ? JSON.parse(initialJSON) : undefined;\n\nconst middleware = [\n  localStorageMiddleware\n]\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n  middleware,\n})\n\nexport default store;","import React, { useState } from 'react'\nimport { Modal, ModalProps, ModalHeader, ModalBody } from 'reactstrap';\nimport { constructSpotifyAuthURL } from '../spotify/SpotifyAuth';\nimport useTypedSelector from '../store/rootReducer';\n\ninterface SpotifyAuthRefreshModalProps extends ModalProps {\n  toggle: () => void;\n}\nconst SpotifyAuthRefreshModal: React.FC<SpotifyAuthRefreshModalProps> = (props) => {\n  const { toggle } = props;\n  return (\n    <Modal {...props} className='spotify-auth-refresh-modal'>\n      <ModalHeader toggle={toggle}>Spotify Is Asking To Be Authorized</ModalHeader>\n      <ModalBody>\n        <a href={constructSpotifyAuthURL()}>Authorize Spotify</a>\n      </ModalBody>\n    </Modal>\n  ) \n}\n\ninterface Props {\n}\nconst GlobalError: React.FC<Props> = ( { children }) => {\n  const errorData = useTypedSelector((s) => s.system.error);\n  const [spotifyAccessRefreshModal, setSpotifyAccessRefreshModal] = useState(false);\n  const toggleModal = () => setSpotifyAccessRefreshModal(!spotifyAccessRefreshModal);\n\n  if (!errorData.isError || !errorData.error) {\n    if (spotifyAccessRefreshModal) setSpotifyAccessRefreshModal(false);\n    return (<>{children}</>);\n  }\n\n  const error = errorData.error;\n\n  let errorBanner;\n  console.log(`isError: ${errorData.isError}, error: ${!!error}, errorData.error: ${!!errorData.error}`)\n  if (error) {\n    switch (error.type) {\n      case 'NoSpotifyAccess':\n        if (!spotifyAccessRefreshModal) setSpotifyAccessRefreshModal(true);\n        errorBanner = null; // Modal will take care of error message\n        break;\n      default:\n        errorBanner = <h3>Error</h3>;\n        console.error(error);\n    }\n  }\n\n  return (\n    <>\n      <SpotifyAuthRefreshModal isOpen={spotifyAccessRefreshModal} toggle={toggleModal} />\n      {errorBanner}\n      {children}      \n    </>\n  )\n}\n\n\nexport default GlobalError;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css'\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport GlobalError from './components/GlobalError'\nimport {\n  MemoryRouter  as Router,\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n<Provider store={store}>\n  <GlobalError>\n    <Router>\n      <App />\n    </Router>\n  </GlobalError>\n</Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}