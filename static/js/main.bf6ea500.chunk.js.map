{"version":3,"sources":["images/fireworks.jpg","images/city.jpg","images/desert.png","error.ts","store/system/systemSlice.ts","store/Poster/posterSlice.ts","store/rootReducer.ts","components/Poster/CanvasUtils.ts","images/index.ts","components/Poster/PosterTheme.ts","components/Poster/PosterTextLayout.ts","components/Poster/Poster.ts","components/Poster/PosterCanvas.tsx","components/AppSelect/AppSelect.tsx","components/AppButton.tsx","components/Options.tsx","spotify/SpotifyAPI.ts","utils/useBoundingRectangle.ts","utils/useWindowSize.ts","utils/index.ts","store/system/useSpotifyAccessToken.ts","components/List/ListRow.tsx","components/List/List.tsx","spotify/SpotifyAuth.ts","AppLog.ts","spotify/SpotifyAPIHooks.ts","components/TopArtistsList.tsx","components/SpotifyInfoCapturePanel.tsx","components/Toolbar/SideNav.tsx","components/Home.tsx","components/SpotifyAuthorize.tsx","App.tsx","serviceWorker.ts","store/index.ts","components/GlobalError.tsx","index.tsx"],"names":["module","exports","toStorable","e","type","AppError","message","name","stack","_type","this","Error","systemSlice","createSlice","initialState","spotifyAccessToken","spotifyAccessTokenExpire","error","isError","reducers","accessTokenUpdated","state","action","produce","draftState","payload","caughtGlobalError","clearGlobalError","actions","height","window","innerHeight","artists","topArtistsTimeRange","layoutType","themeType","width","posterSlice","changeThemeType","changeLayoutType","updateArtistList","topArtistsTimeRangeUpdated","rootReducer","combineReducers","poster","posterSliceReducer","system","systemSliceReducer","useTypedSelector","selector","useSelector","createHiDPICanvas","can","w","h","ctx","getContext","ratio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","style","setTransform","DEFAULT_BACKGROUND_IMAGE","fireworks","PosterTheme","backgroundImage","festivalNameColor","festivalNameFont","artistFont","artistColor","textMargin","Theme1","Theme2","city","DesertTheme","desert","PosterTextLayout","_poster","artistTopRatio","artistFontRatio","festivalNameFontRatio","fontRatio","font","fontHeight","size","Math","floor","s","slice","length","text","fullText","reduce","prev","cur","metrics","measureText","marginWidth","theme","ceil","lines","fontString","currentLine","artistNames","artist","calculateTextWidth","posterWidth","push","cutTrailingChar","artistSeperator","canvasCtx","baseTop","posterHeight","artistLines","textBaseline","textAlign","fillStyle","fh","forEach","line","i","top","printCenter","str","fillText","midX","maxPosterWidth","strokeStyle","lineWidth","festivalName","BasicLayout","WeekendLayout","oneThird","day1Lines","day2Lines","day3Lines","dayFont","printLeft","printRight","BasicPoster","ps","layout","_w","_h","_postDrawCB","festivalNameText","festivalNameCase","artistCase","img","scale","max","x","y","drawImage","drawFestivalName","drawArtistBlock","drawBackground","cb","_draw","bind","Image","onload","_drawBGImage","src","String","fromCharCode","toUpperCase","filter","a","isSelected","map","data","usePoster","usePosterTheme","usePosterLayout","aspectRatio","getH","PosterCanvas","parentWidth","parentHeight","ref","useRef","bgRef","calculatePosterDims","setPosterSize","console","log","useEffect","current","draw","bgcan","id","position","useAppSelect","options","initialValue","changeCB","useState","selectedValue","setSelectedValue","selected","handleChange","value","AppSelect","labelText","optionEls","opt","key","FormGroup","Label","Input","onChange","target","AppButton","children","props","color","onClick","stopPropagation","themeOptions","layoutOptions","Options","dispatch","useDispatch","useAppSelector","themeSelectHook","layoutSelectHook","createImage","useCallback","document","getElementById","postDrawCB","dataURL","toDataURL","open","write","useCreateImage","Form","Row","form","Col","md","xs","SPOTIFY_API_HOST","SPOTIFY_VERSION","SpotifyAPI","apiKey","playlistId","getPlaylistTracks","trackData","extractArtistsFromTracks","url","fetch","res","unpackResponse","json","SpotifyAuthTokenAPI","accessToken","async","spotifyGETHelper","playlist_id","playlistTrackObject","track","spotifyTracksFromPlaylist","spotifyMe","limit","offset","time_range","SpotifyUserIdAPI","apiurl","noAuthAPICall","endpoints","endpointString","join","URL","href","ok","status","spotifyFetch","access_token","headers","Authorization","objectToQueryParams","queryObject","USP","URLSearchParams","k","append","toString","urlParams","queryParams","queryStr","hasOwnProperty","items","tracks","artistsSet","Set","add","useBoundingRectangle","setSize","useLayoutEffect","updateSize","innerWidth","addEventListener","removeEventListener","useWindowSize","rect","setrect","getBoundingClientRect","nowSeconds","Date","now","useSpotifyAccessToken","expire","parseInt","handleActionClick","item","handler","preventDefault","ListRow","rowNumber","disableActions","isEditing","setIsEditing","renderData","listProps","editText","setEditText","handleRemove","handleEdit","handleSelect","handleSelectionChange","canEdit","canEditGlobal","canRemove","canSelect","undefined","ListGroupItem","InputGroup","display","InputGroupAddon","addonType","createNewListItem","active","className","ButtonGroup","disabled","renderRow","_ID","generateId","oldItem","newItem","attachHandlers","setter","handlerCallbacks","handlerMiddleware","toRemove","oldItems","handleAddRow","addedItem","addRow","editedItem","newItems","itemToEdit","find","JSON","stringify","selectedItem","draft","findIndex","handleSelectAll","selectAllMW","selectAll","handleClear","clearMW","clear","MEMOED_AUTH_DATA","List","isAddingRow","setisAddingRow","addRowText","setAddRowText","canSelectAll","canClear","renderAddRow","canAddRow","userAdded","block","renderHeader","justifyContent","renderListActions","rows","rowNumbers","ListGroup","renderList","useErrorLog","useSpotifyAPI","tokenData","elog","useMemo","spotifyAuthObj","authToken","userId","spotifyAPIFactory","count","useSpotifyTopArtists","timeRange","topArtists","api","topArtistsData","topArtistsList","ao","fetchData","setTopArtistsTimeRange","newTimeRange","topArtistTROptions","TopArtistsList","initialTimeRange","v","artistSelectProps","selectorFN","actionFN","setItems","fn","newList","useReduxList","images","alt","marginRight","redirect_uri","location","SPOTIFY_AUTH_URL","SPOTIFY_ACCESS_TOKEN_FIELD","SPOTIFY_TOKEN_TYPE_FIELD","SPOTIFY_EXPIRES_IN_FIELD","authParams","client_id","response_type","scope","constructSpotifyAuthURL","queryParamsList","Object","entries","paramsString","spotifyAuthFromWindow","urlList","split","queryList","SpotifyInfoCapturePanel","role","SideNav","toggle","showAuth","Home","navActive","setNavActive","toggleNav","canvasParentWidth","canvasParentHeight","Nav","marginBottom","Container","redirectHome","to","SpotifyAuthorize","authData","expires_in","App","expiresInNum","isNaN","expireTime","hash","exact","path","Boolean","hostname","match","initialJSON","localStorage","getItem","preloadedState","parse","middleware","store","next","getState","setItem","configureStore","reducer","GlobalError","errorData","spotifyAccessRefreshModal","setSpotifyAccessRefreshModal","versionStr","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf6ea500.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fireworks.c1f1ed0c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/city.7878fa91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/desert.1f4ebc63.png\";","export const toStorable = function(e: Error): AppErrorStorable {\n  const type = e instanceof AppError ? e.type : null;\n  return {\n    message: e.message,\n    name: e.name,\n    stack: e.stack,\n    type: type,\n  };\n};\n\nexport type AppErrorType = 'NoSpotifyAccess' | null;\nexport interface AppErrorStorable {\n  message: string;\n  stack: string | undefined;\n  name: string;\n  type: AppErrorType;\n}\n\nexport class AppError extends Error {\n  private _type: AppErrorType = null;\n\n  constructor(message: string, type?: AppErrorType) {\n    super(message);\n    if (type) {\n      this._type = type;\n    }\n  }\n\n  get type(): AppErrorType {\n    return this._type;\n  }\n\n  set type(type: AppErrorType) {\n    this._type = type;\n  }\n\n  toJSON() {\n    return toStorable(this);\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport produce from 'immer';\nimport { toStorable, AppErrorStorable } from '../../error';\n\nexport interface SpotifyAccessTokenPackage {\n  spotifyAccessToken: string;\n  spotifyAccessTokenExpire: string;\n}\n\nexport type GlobalErrorNone = { isError: false };\nexport type GlobalError = { isError: true; error: AppErrorStorable };\nexport type GlobalErrorPackage = GlobalError | GlobalErrorNone;\n\nexport interface SystemState extends SpotifyAccessTokenPackage {\n  error: GlobalErrorPackage;\n}\n\nconst initialState: SystemState = {\n  spotifyAccessToken: '',\n  spotifyAccessTokenExpire: '',\n  error: { isError: false },\n};\n\nconst systemSlice = createSlice({\n  name: 'system',\n  initialState,\n  reducers: {\n    accessTokenUpdated(\n      state,\n      action: PayloadAction<SpotifyAccessTokenPackage>,\n    ) {\n      return produce(state, draftState => {\n        draftState.spotifyAccessToken = action.payload.spotifyAccessToken;\n        draftState.spotifyAccessTokenExpire =\n          action.payload.spotifyAccessTokenExpire;\n        if (action.payload.spotifyAccessToken !== '') {\n          if (\n            draftState.error.isError &&\n            draftState.error.error.type === 'NoSpotifyAccess'\n          ) {\n            draftState.error = { isError: false };\n          }\n        }\n      });\n    },\n    caughtGlobalError(state, action: PayloadAction<Error>) {\n      return produce(state, draftState => {\n        draftState.error = {\n          isError: true,\n          error: toStorable(action.payload),\n        };\n      });\n    },\n    clearGlobalError(state) {\n      return produce(state, draftState => {\n        draftState.error = { isError: false };\n      });\n    },\n  },\n});\n\nexport const {\n  accessTokenUpdated,\n  caughtGlobalError,\n  clearGlobalError,\n} = systemSlice.actions;\nexport default systemSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ListItems } from '../../components/List/List';\nimport produce from 'immer';\nimport { SpotifyArtistObject } from '../../spotify/SpotifyAPI';\n\nexport interface PosterState {\n  artists: ListItems<SpotifyArtistObject>;\n  topArtistsTimeRange: string; // TODO make this type safe\n  layoutType: string;\n  themeType: string;\n  height: number;\n  width: number;\n}\n\nconst height = window.innerHeight * 0.8;\nconst width = height * 0.65;\n\nconst initialState: PosterState = {\n  artists: [],\n  topArtistsTimeRange: 'medium_term',\n  layoutType: 'basic',\n  themeType: 'theme1',\n  width,\n  height,\n};\n\nconst posterSlice = createSlice({\n  name: 'poster',\n  initialState,\n  reducers: {\n    changeThemeType(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.themeType = action.payload;\n      });\n    },\n    changeLayoutType(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.layoutType = action.payload;\n      });\n    },\n    updateArtistList(state, action: PayloadAction<PosterState['artists']>) {\n      return produce(state, draftState => {\n        draftState.artists = action.payload;\n      });\n    },\n    topArtistsTimeRangeUpdated(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.topArtistsTimeRange = action.payload;\n      });\n    },\n  },\n});\n\nexport const {\n  changeThemeType,\n  updateArtistList,\n  topArtistsTimeRangeUpdated,\n  changeLayoutType,\n} = posterSlice.actions;\n\nexport default posterSlice.reducer;\n","import { combineReducers } from 'redux';\nimport systemSliceReducer from './system/systemSlice';\nimport posterSliceReducer from './Poster/posterSlice';\nimport { useSelector } from 'react-redux';\n\nexport const rootReducer = combineReducers({\n  poster: posterSliceReducer,\n  system: systemSliceReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst useTypedSelector = <T>(selector: (state: RootState) => T): T => {\n  const value = useSelector(selector);\n  return value;\n};\n\nexport default useTypedSelector;\n","// based off of the following comment from stackoverflow\n// https://stackoverflow.com/a/15666143/1215360\n\nexport const pixelRatio = (ctx: CanvasRenderingContext2D) => {\n  const dpr = window.devicePixelRatio || 1;\n  const bsr =\n    (ctx as any).webkitBackingStorePixelRatio ||\n    (ctx as any).mozBackingStorePixelRatio ||\n    (ctx as any).msBackingStorePixelRatio ||\n    (ctx as any).oBackingStorePixelRatio ||\n    (ctx as any).backingStorePixelRatio ||\n    1;\n  return dpr / bsr;\n};\n\nexport const createHiDPICanvas = function(\n  can: HTMLCanvasElement,\n  w: number,\n  h: number,\n) {\n  const ctx = can.getContext('2d');\n  if (!ctx)\n    throw new Error('Could not get canvas context to create HiDPI canvas');\n  const ratio = pixelRatio(ctx);\n  can.width = w * ratio;\n  can.height = h * ratio;\n  can.style.width = w + 'px';\n  can.style.height = h + 'px';\n  ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\n  return can;\n};\n","import city from './city.jpg';\nimport fireworks from './fireworks.jpg';\nimport desert from './desert.png';\nconst DEFAULT_BACKGROUND_IMAGE = fireworks;\n\nexport { desert, city, fireworks, DEFAULT_BACKGROUND_IMAGE };\n","import {\n  DEFAULT_BACKGROUND_IMAGE,\n  fireworks,\n  city,\n  desert,\n} from '../../images';\nimport useTypedSelector from '../../store/rootReducer';\nimport { AppError } from '../../error';\n\nexport abstract class PosterTheme {\n  public backgroundImage: string = DEFAULT_BACKGROUND_IMAGE;\n  public festivalNameColor: string = 'white';\n  public festivalNameFont: string = 'serif';\n\n  public artistFont: string = 'serif';\n  public artistColor: string = 'white';\n  public textMargin: number = 0;\n}\n\nexport class Theme1 extends PosterTheme {\n  backgroundImage = fireworks;\n  festivalNameColor = '#37C3E1';\n  festivalNameFont = 'serif';\n\n  artistFont = 'serif';\n  artistColor = '#37C3E1';\n}\n\nexport class Theme2 extends PosterTheme {\n  backgroundImage = city;\n  festivalNameColor = 'lime';\n  festivalNameFont = 'serif';\n\n  artistFont = 'serif';\n  artistColor = 'lime';\n}\n\nexport class DesertTheme extends PosterTheme {\n  backgroundImage = desert;\n  festivalNameColor = 'orange';\n  festivalNameFont = 'TexasTango';\n\n  artistFont = 'WesternBangBang';\n  artistColor = 'orange';\n\n  textMargin = 20;\n}\n\nexport const usePosterTheme = (): PosterTheme => {\n  const themeType = useTypedSelector(s => s.poster.themeType);\n  let theme;\n  switch (themeType) {\n    case 'theme1':\n      theme = new Theme1();\n      break;\n    case 'theme2':\n      theme = new Theme2();\n      break;\n    case 'desert':\n      theme = new DesertTheme();\n      break;\n    default:\n      throw new AppError(`Invalid theme ${themeType}`);\n  }\n  return theme;\n};\n","import { Poster } from './Poster';\nimport useTypedSelector from '../../store/rootReducer';\nimport { AppError } from '../../error';\n\nexport const usePosterLayout = (): PosterTextLayout => {\n  const layoutType = useTypedSelector(s => s.poster.layoutType);\n  let layout;\n  switch (layoutType) {\n    case 'basic':\n      layout = new BasicLayout();\n      break;\n    case 'weekend':\n      layout = new WeekendLayout();\n      break;\n    default:\n      throw new AppError(`Invalid theme ${layoutType}`);\n  }\n  return layout;\n};\n\nexport abstract class PosterTextLayout {\n  protected artistTopRatio = 0.5;\n  protected artistFontRatio: number = 0.025;\n\n  protected festivalNameFontRatio: number = 0.1;\n\n  constructor(private _poster?: Poster) {}\n\n  public set poster(poster: Poster) {\n    this._poster = poster;\n  }\n\n  public get poster() {\n    if (!this._poster)\n      throw new Error('Expected poster to be set before drawing');\n    return this._poster;\n  }\n\n  public get ctx() {\n    return this.poster.canvasCtx;\n  }\n\n  public get theme() {\n    return this.poster.theme;\n  }\n\n  protected fontString(fontRatio: number, font: string) {\n    return `${this.fontHeight(fontRatio)}px ${font}`;\n  }\n\n  protected fontHeight(size: number) {\n    return Math.floor(size * this.poster.h);\n  }\n\n  protected cutTrailingChar(s: string) {\n    return s.slice(0, s.length - 1);\n  }\n\n  protected get midX() {\n    return Math.floor(this.posterWidth / 2);\n  }\n\n  protected get midY() {\n    return Math.floor(this.posterHeight / 2);\n  }\n\n  protected get posterWidth() {\n    return this.poster.w;\n  }\n\n  protected get maxPosterWidth() {\n    return this.posterWidth - this.theme.textMargin * 2;\n  }\n\n  protected get posterHeight() {\n    return this.poster.h;\n  }\n\n  protected calculateTextWidth(...text: string[]) {\n    const fullText = text.reduce((prev, cur) => prev + cur, '');\n    const metrics = this.ctx.measureText(fullText);\n    const marginWidth = this.theme.textMargin * 2;\n    return Math.ceil(metrics.width) + marginWidth;\n  }\n\n  protected artistLines() {\n    const lines: string[] = [];\n    const poster = this.poster;\n    this.ctx.font = this.fontString(\n      this.artistFontRatio,\n      this.theme.artistFont,\n    );\n    let currentLine = '';\n    for (let artist of this.poster.artistNames) {\n      const lineWidth = this.calculateTextWidth(currentLine, artist);\n      if (lineWidth > this.posterWidth) {\n        lines.push(this.cutTrailingChar(currentLine));\n        currentLine = artist + poster.artistSeperator;\n        continue;\n      }\n      currentLine = currentLine + artist + poster.artistSeperator;\n    }\n    if (currentLine !== '') lines.push(this.cutTrailingChar(currentLine));\n    return lines;\n  }\n\n  public drawArtistBlock() {\n    const ctx = this.poster.canvasCtx;\n    const baseTop = this.posterHeight * this.artistTopRatio;\n    const lines = this.artistLines();\n\n    ctx.textBaseline = 'top';\n    ctx.textAlign = 'center';\n    ctx.fillStyle = this.theme.artistColor;\n\n    const fh = this.fontHeight(this.artistFontRatio);\n    lines.forEach((line, i) => {\n      const top = baseTop + (i + 1) * fh;\n      this.printCenter(line, top);\n    });\n  }\n\n  public printCenter(str: string, top: number) {\n    const ctx = this.ctx;\n    ctx.textAlign = 'center';\n    ctx.fillText(str, this.midX, top, this.maxPosterWidth);\n  }\n\n  public printLeft(str: string, top: number) {\n    const ctx = this.ctx;\n    ctx.textAlign = 'left';\n    ctx.fillText(str, this.theme.textMargin, top, this.maxPosterWidth);\n  }\n\n  public printRight(str: string, top: number) {\n    this.ctx.textAlign = 'right';\n    this.ctx.fillText(\n      str,\n      this.posterWidth - this.theme.textMargin,\n      top,\n      this.maxPosterWidth,\n    );\n  }\n\n  public drawFestivalName() {\n    const ctx = this.poster.canvasCtx;\n    ctx.font = this.fontString(\n      this.festivalNameFontRatio,\n      this.theme.festivalNameFont,\n    );\n    ctx.fillStyle = this.theme.festivalNameColor;\n    ctx.textBaseline = 'top';\n    ctx.textAlign = 'center';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 2;\n\n    this.printCenter(this.poster.festivalName, 30);\n  }\n}\n\nexport class BasicLayout extends PosterTextLayout {}\nexport class WeekendLayout extends PosterTextLayout {\n  artistTopRatio = 0.4;\n  artistFontRatio = 0.02;\n\n  dayFont() {\n    this.ctx.font = this.fontString(\n      this.artistFontRatio * 2,\n      this.theme.artistFont,\n    );\n  }\n\n  artistFont() {\n    this.ctx.font = this.fontString(\n      this.artistFontRatio,\n      this.theme.artistFont,\n    );\n  }\n\n  drawArtistBlock() {\n    const lines = this.artistLines();\n    const oneThird = Math.ceil(lines.length / 3);\n    const day1Lines = lines.slice(0, oneThird);\n    const day2Lines = lines.slice(oneThird, oneThird * 2);\n    const day3Lines = lines.slice(oneThird * 2);\n\n    this.ctx.textBaseline = 'bottom';\n    this.ctx.fillStyle = this.theme.artistColor;\n\n    let top = this.posterHeight * this.artistTopRatio;\n    const fh = this.fontHeight(this.artistFontRatio);\n\n    this.dayFont();\n    this.printLeft('FRIDAY', top);\n    this.artistFont();\n\n    day1Lines.forEach((line, i) => {\n      top += fh;\n      this.printLeft(line, top);\n    });\n\n    top = top + fh * 3;\n\n    this.dayFont();\n    this.printRight('SATURDAY', top);\n    this.artistFont();\n\n    day2Lines.forEach((line, i) => {\n      top += fh;\n      this.printRight(line, top);\n    });\n\n    top = top + fh * 3;\n    this.ctx.textAlign = 'left';\n\n    this.dayFont();\n    this.printLeft('SUNDAY', top);\n    this.artistFont();\n    day3Lines.forEach((line, i) => {\n      top += fh;\n      this.printLeft(line, top);\n    });\n  }\n}\n","import { PosterState } from '../../store/Poster/posterSlice';\nimport { AppError } from '../../error';\nimport useTypedSelector from '../../store/rootReducer';\nimport { createHiDPICanvas } from './CanvasUtils';\nimport { PosterTheme, usePosterTheme } from './PosterTheme';\nimport { PosterTextLayout } from './PosterTextLayout';\nimport { usePosterLayout } from './PosterTextLayout';\n\ntype Case = 'none' | 'upper';\nexport abstract class Poster {\n  public canvasCtx!: CanvasRenderingContext2D;\n  protected _w: number = 600;\n  protected _h: number = 900;\n  protected _postDrawCB?: any;\n\n  protected festivalNameText: string = 'My Festival';\n  protected festivalNameCase: Case = 'upper';\n\n  protected artistCase: Case = 'upper';\n\n  constructor(\n    protected ps: PosterState,\n    public theme: PosterTheme,\n    protected layout: PosterTextLayout,\n  ) {\n    this.layout.poster = this;\n  }\n\n  protected getContext(can: HTMLCanvasElement) {\n    const ctx = can.getContext('2d');\n    if (!ctx) throw new AppError('Expected canvas context');\n    return ctx;\n  }\n\n  public setPosterSize(w: number, h: number) {\n    this._w = w;\n    this._h = h;\n  }\n\n  public get h() {\n    return this._h;\n  }\n\n  public get w() {\n    return this._w;\n  }\n\n  public get artistSeperator() {\n    // return this.ps.\n    return String.fromCharCode(8226);\n  }\n\n  // From this tutorial: https://riptutorial.com/html5-canvas/example/19169/scaling-image-to-fit-or-fill-\n  protected _drawBGImage(can: HTMLCanvasElement, img: HTMLImageElement) {\n    let ctx = this.getContext(can);\n    const scale = Math.max(can.width / img.width, can.height / img.height);\n    const x = can.width / 2 - (img.width / 2) * scale;\n    const y = can.height / 2 - (img.height / 2) * scale;\n    ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\n  }\n\n  public get festivalName() {\n    return this.festivalNameCase === 'upper'\n      ? this.festivalNameText.toUpperCase()\n      : this.festivalNameText;\n  }\n\n  public get artistNames() {\n    let artists = this.ps.artists.filter(a => a.isSelected);\n    const artistNames = artists.map(a => {\n      let { name } = a.data;\n      if (this.artistCase === 'upper') name = name.toUpperCase();\n      return name;\n    });\n    return artistNames;\n  }\n\n  protected _draw() {\n    this.layout.drawFestivalName();\n    this.layout.drawArtistBlock();\n  }\n\n  public set postDrawCB(cb: any) {\n    this._postDrawCB = cb;\n  }\n\n  public draw(can: HTMLCanvasElement, drawBackground = false) {\n    this.canvasCtx = this.getContext(can);\n    can.width = this.w;\n    can.height = this.h;\n    createHiDPICanvas(can, this.w, this.h);\n\n    const cb = () => {\n      this._draw();\n      if (this._postDrawCB) this._postDrawCB();\n    };\n\n    if (!drawBackground) {\n      this._draw();\n    } else {\n      this.drawBackground(can, cb.bind(this));\n    }\n  }\n\n  public drawBackground(can: HTMLCanvasElement, cb?: any) {\n    const img = new Image(this.w, this.h);\n    can.width = this.w;\n    can.height = this.h;\n    img.onload = () => {\n      this._drawBGImage(can, img);\n      if (cb) cb();\n    };\n    img.src = this.theme.backgroundImage;\n  }\n}\n\nclass BasicPoster extends Poster {}\n\n// export const usePosterSize = () => {\n//   // const [, windowH] = useWindowSize();\n//   // const h = Math.floor(windowH * 0.8);\n//   // const w = Math.floor(h * 0.7);\n//   const w = 600;\n//   const h = 900;\n//   return [Math.min(w, MAX_POSTER_WIDTH), Math.min(h, MAX_POSTER_HEIGHT)];\n// };\n\nexport const usePoster = (): Poster => {\n  const theme = usePosterTheme();\n  const layout = usePosterLayout();\n  const ps = useTypedSelector(s => s.poster);\n  const poster = new BasicPoster(ps, theme, layout);\n  return poster;\n};\n","import React, { useRef, useEffect } from 'react';\nimport '../../style/Poster.css';\nimport { usePoster } from './Poster';\n\nexport const POSTER_CANVAS_ID = 'poster-canvas';\n\nconst aspectRatio = [2, 3]; // 2:3\nconst getH = (w: number) => w * (aspectRatio[1] / aspectRatio[0]);\nconst calculatePosterDims = (width: number, height: number) => {\n  let w = width;\n  const maxDims = { w: 600, h: 900 };\n  if (w > 600) w = maxDims.w;\n  let h = getH(w);\n  while (h >= height) {\n    w = w - 5;\n    h = getH(w);\n  }\n  return { w, h };\n};\n\ninterface Props {\n  parentWidth?: number;\n  parentHeight?: number;\n}\nconst PosterCanvas: React.FC<Props> = ({ parentWidth, parentHeight }) => {\n  const poster = usePoster();\n  // const [ww, wh] = useWindowSize();\n  const ref = useRef<HTMLCanvasElement>(null);\n  const bgRef = useRef<HTMLCanvasElement>(null);\n  const { w, h } = calculatePosterDims(parentWidth || 0, parentHeight || 0);\n  poster.setPosterSize(w, h);\n  console.log(w, h);\n\n  useEffect(() => {\n    const can = ref.current;\n    if (!can) throw new Error('Unable to retreive poster canvas element');\n    poster.draw(can, false);\n  });\n\n  useEffect(() => {\n    const bgcan = bgRef.current;\n    if (!bgcan)\n      throw new Error('Unable to retreive poster background canvas element');\n    poster.drawBackground(bgcan);\n  }, [poster]);\n\n  const canvasStyle = (): React.CSSProperties => {\n    return {\n      position: 'absolute',\n    };\n  };\n\n  return (\n    <>\n      <canvas id='poster-bg' ref={bgRef} style={{ position: 'relative' }}>\n        Poster BackGround\n      </canvas>\n      <canvas ref={ref} id={POSTER_CANVAS_ID} style={canvasStyle()}>\n        Festival Poster Viewer\n      </canvas>\n    </>\n  );\n};\n\nexport default PosterCanvas;\n","import React, { useState } from 'react';\nimport { Input, FormGroup, Label } from 'reactstrap';\n\ntype UseAppSelect = [string, Props];\nexport const useAppSelect = (\n  options: SelectOption[],\n  initialValue: string,\n  changeCB?: (value: string) => void,\n): UseAppSelect => {\n  const [selectedValue, setSelectedValue] = useState(initialValue);\n  const handleChange = (value: string) => {\n    setSelectedValue(value);\n    if (changeCB) changeCB(value);\n  };\n\n  return [\n    selectedValue,\n    {\n      options,\n      selected: selectedValue,\n      handleChange,\n    },\n  ];\n};\n\nexport interface SelectOption {\n  value: string;\n  text: string;\n}\ninterface Props {\n  labelText?: string;\n  selected: string;\n  options: SelectOption[];\n  handleChange?: (value: string) => void;\n}\nconst AppSelect: React.FC<Props> = ({\n  options,\n  handleChange,\n  selected,\n  labelText,\n}) => {\n  const optionEls = options.map(opt => {\n    return (\n      <option key={opt.value} value={opt.value}>\n        {opt.text}\n      </option>\n    );\n  });\n\n  return (\n    <FormGroup>\n      {labelText && <Label>{labelText}</Label>}\n      <Input\n        type='select'\n        value={selected}\n        onChange={e => {\n          if (handleChange) handleChange(e.target.value);\n        }}\n      >\n        {optionEls}\n      </Input>\n    </FormGroup>\n  );\n};\n\nexport default AppSelect;\n","import React from 'react';\nimport { Button as RSButton, ButtonProps } from 'reactstrap';\n\ninterface Props extends ButtonProps {}\n\nconst AppButton: React.FC<Props> = ({ children, ...props }) => {\n  const color = props.color ? props.color : 'primary';\n  const size = props.size ? props.size : 'sm';\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    props.onClick?.(e);\n  };\n\n  return (\n    <RSButton color={color} size={size} onClick={handleClick} {...props}>\n      {children}\n    </RSButton>\n  );\n};\n\nexport default AppButton;\n","import React, { useCallback } from 'react';\nimport { Form, Row, Col } from 'reactstrap';\nimport AppSelect, { useAppSelect, SelectOption } from './AppSelect/AppSelect';\nimport AppButton from './AppButton';\nimport { usePoster } from './Poster/Poster';\nimport { POSTER_CANVAS_ID } from './Poster/PosterCanvas';\nimport { changeThemeType, changeLayoutType } from '../store/Poster/posterSlice';\nimport { useDispatch } from 'react-redux';\nimport useAppSelector from '../store/rootReducer';\n\nconst useCreateImage = () => {\n  const poster = usePoster();\n  const createImage = useCallback(() => {\n    const can = document.getElementById(POSTER_CANVAS_ID) as HTMLCanvasElement;\n    if (!can) throw new Error('Expected canvas node');\n    poster.postDrawCB = () => {\n      const dataURL = can.toDataURL('image/jpeg', 1.0);\n      const w = window.open('_blank');\n      w?.document.write(`<img src=\"${dataURL}\"></img>`);\n    };\n    poster.draw(can, true);\n  }, [poster]);\n  return createImage;\n};\n\nconst themeOptions: SelectOption[] = [\n  {\n    text: 'Desert',\n    value: 'desert',\n  },\n  {\n    text: 'Theme 1',\n    value: 'theme1',\n  },\n  {\n    text: 'Theme 2',\n    value: 'theme2',\n  },\n];\n\nconst layoutOptions: SelectOption[] = [\n  {\n    text: 'Basic',\n    value: 'basic',\n  },\n  {\n    text: 'Weekend',\n    value: 'weekend',\n  },\n];\n\ninterface Props {}\n\nconst Options: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const themeType = useAppSelector(s => s.poster.themeType);\n  const layoutType = useAppSelector(s => s.poster.layoutType);\n\n  const [, themeSelectHook] = useAppSelect(themeOptions, themeType, value => {\n    dispatch(changeThemeType(value));\n  });\n  const [, layoutSelectHook] = useAppSelect(\n    layoutOptions,\n    layoutType,\n    value => {\n      dispatch(changeLayoutType(value));\n    },\n  );\n  const createImage = useCreateImage();\n  return (\n    <div>\n      <Form>\n        <Row form>\n          <Col md={6} xs={6}>\n            <AppSelect labelText={'Theme'} {...themeSelectHook} />\n          </Col>\n          <Col md={6} xs={6}>\n            <AppSelect labelText={'Text Layout'} {...layoutSelectHook} />\n          </Col>\n          <Col md={6} xs={6}></Col>\n        </Row>\n      </Form>\n      <AppButton color={'warning'} onClick={() => createImage()}>\n        Create Image\n      </AppButton>\n    </div>\n  );\n};\n\nexport default Options;\n","import { AppError } from '../error';\n\nexport const SPOTIFY_API_HOST = 'https://api.spotify.com';\nexport const SPOTIFY_VERSION = 'v1';\n\nexport interface SpotifyUserObject {\n  country: string;\n  display_name: string;\n  email: string;\n  href: string;\n  id: string;\n  product: string;\n  type: string;\n  uri: string;\n}\n\nexport interface SpotifyPlaylistObject {\n  description: string;\n  href: string;\n  id: string;\n  name: string;\n  tracks: string;\n  type: string;\n  uri: string;\n}\nexport interface SpotifyPagingObject<T> {\n  href: string;\n  items: T[];\n  limit: number;\n  next: string;\n  offset: string;\n  previous: string;\n  total: number;\n}\n\nexport interface SpotifyAlbumObjectSimple {\n  album_type: 'album' | 'single' | 'compilation';\n  artists: SpotifyArtistObjectSimple[];\n  href: string; // A link to the Web API endpoint providing full details of the album.\n  name: string;\n  release_date: string;\n  type: 'album';\n  uri: string;\n}\n\nexport interface SpotifyArtistObjectSimple {\n  href: string; // A link to the Web API endpoint providing full details of the artist.\n  id: string;\n  name: string;\n  type: 'artist';\n  uri: string;\n}\n\nexport interface SpotifyArtistObject {\n  album: SpotifyAlbumObjectSimple;\n  artists: SpotifyArtistObjectSimple[];\n  duration_ms: number;\n  href: string; // A link to the Web API endpoint providing full details of the track.\n  id: string;\n  name: string;\n  popularity: number;\n  track_number: number;\n  type: 'artist';\n  uri: string;\n  images: SpotifyImage[];\n}\n\nexport interface SpotifyImage {\n  height: number;\n  width: number;\n  url: string;\n}\n\ntype TimeRange = 'long_term' | 'medium_term' | 'short_term';\n\nexport abstract class SpotifyAPI {\n  constructor(public apiKey: string) {}\n\n  public abstract async getPlaylists(): Promise<\n    SpotifyPlaylistObject[] | AppError\n  >;\n  public abstract async getPlaylistTracks(\n    playlistId: string,\n  ): Promise<SpotifyArtistObject[] | AppError>;\n  public abstract async me(): Promise<SpotifyUserObject | AppError>;\n  public async topArtists?(\n    query?: any,\n  ): Promise<SpotifyArtistObject[] | AppError>;\n\n  public async getPlaylistArtists(\n    playlistId: string,\n  ): Promise<string[] | AppError> {\n    const trackData = await this.getPlaylistTracks(playlistId);\n    if (trackData instanceof AppError) return trackData;\n    return extractArtistsFromTracks(trackData);\n  }\n\n  public async noAuthAPICall(url: string): Promise<any | AppError> {\n    try {\n      const res = await fetch(url);\n      const json = await unpackResponse(res, url);\n      return json;\n    } catch (e) {\n      return e;\n    }\n  }\n}\n\nexport class SpotifyAuthTokenAPI extends SpotifyAPI {\n  public getPlaylists() {\n    return spotifyPlaylistsFromToken(this.apiKey);\n  }\n\n  public getPlaylistTracks(playlistId: string) {\n    return spotifyTracksFromPlaylist(this.apiKey, playlistId);\n  }\n\n  public async me() {\n    return spotifyMe(this.apiKey);\n  }\n\n  // public async topArtists(limit: string = '30', offset: string = '0', time_range: TimeRange = 'long_term') {\n  public async topArtists({\n    limit = '50',\n    offset = '0',\n    time_range = 'medium_term',\n  } = {}) {\n    const data = await spotifyGETHelper<SpotifyArtistObject[]>(\n      this.apiKey,\n      ['me', 'top', 'artists'],\n      { limit, offset, time_range },\n    );\n    return data;\n  }\n}\n\nexport class SpotifyUserIdAPI extends SpotifyAPI {\n  public async getPlaylists() {\n    const url = apiurl('users', this.apiKey, 'playlists');\n    return await this.noAuthAPICall(url);\n  }\n\n  public async getPlaylistTracks(playlistId: string) {\n    const url = apiurl('playlists', this.apiKey, 'tracks');\n    return await this.noAuthAPICall(url);\n  }\n\n  public async me() {\n    const url = apiurl('users', this.apiKey);\n    return await this.noAuthAPICall(url);\n  }\n}\n\ninterface SpotifyAuth {\n  authToken: string;\n  userId: string;\n}\nexport function spotifyAPIFactory(\n  spotifyAuthObj: Partial<SpotifyAuth>,\n): SpotifyAPI | null {\n  const { authToken, userId } = spotifyAuthObj;\n  if (authToken && authToken !== '') {\n    return new SpotifyAuthTokenAPI(authToken);\n  } else if (userId && userId !== '') {\n    return new SpotifyUserIdAPI(userId);\n  } else {\n    return null;\n  }\n}\n\nexport function apiurl(...endpoints: string[]): string {\n  let epList = [SPOTIFY_VERSION, ...endpoints];\n  let endpointString = epList.join('/');\n  return new URL(endpointString, SPOTIFY_API_HOST).href;\n}\n\nexport async function unpackResponse(res: Response, url: string) {\n  if (!res.ok) {\n    if (res.status === 401)\n      return new AppError(\n        `Fetch for URL ${url} returned not ok status.  Status: ${res.status}`,\n        'NoSpotifyAccess',\n      );\n    return new AppError(\n      `Fetch for URL ${url} returned not ok status.  Status: ${res.status}`,\n      'NoSpotifyAccess',\n    );\n  }\n  if (res.status !== 200) {\n    return new AppError(\n      `Fetch for URL ${url} returned a status of ${res.status}`,\n      'NoSpotifyAccess',\n    );\n  }\n  try {\n    let json = await res.json();\n    return json;\n  } catch (e) {\n    return e;\n  }\n}\n\nexport async function spotifyFetch(\n  access_token: string,\n  url: string,\n): Promise<AppError | any> {\n  const headers = {\n    Authorization: `Bearer ${access_token}`,\n  };\n  let res;\n  try {\n    res = await fetch(url, { headers });\n    return unpackResponse(res, url);\n  } catch (e) {\n    return e;\n  }\n}\n\ntype QueryParamsObject = { [k: string]: string };\nfunction objectToQueryParams(queryObject?: QueryParamsObject): string {\n  if (!queryObject) return '';\n  const USP = new URLSearchParams();\n  for (const k in queryObject) {\n    USP.append(k, queryObject[k]);\n  }\n  return USP.toString();\n}\n\nasync function spotifyGETHelper<T>(\n  accessToken: string,\n  urlParams: string[],\n  queryParams?: QueryParamsObject,\n): Promise<T | AppError> {\n  const queryStr = objectToQueryParams(queryParams);\n  const url = apiurl(...urlParams, `?${queryStr}`);\n  const data = await spotifyFetch(accessToken, url);\n  if (data instanceof AppError) return data;\n  if (!data.hasOwnProperty('items')) {\n    throw new AppError(\n      `Returned paging object does not contain items field.  Url: ${url}`,\n    );\n  }\n  return data.items;\n}\n\nexport async function spotifyMe(\n  accessToken: string,\n): Promise<SpotifyUserObject> {\n  const url = apiurl('me');\n  const data = await spotifyFetch(accessToken, url);\n  return data;\n}\n\nexport async function spotifyPlaylistsFromToken(\n  accessToken: string,\n): Promise<SpotifyPlaylistObject[] | AppError> {\n  return spotifyGETHelper(accessToken, ['me', 'playlists']);\n}\n\nexport interface SpotifyPlaylistTrackObject {\n  track: SpotifyArtistObject;\n}\nexport async function spotifyTracksFromPlaylist(\n  accessToken: string,\n  playlist_id: string,\n): Promise<SpotifyArtistObject[] | AppError> {\n  const res = await spotifyGETHelper<SpotifyPlaylistTrackObject[]>(\n    accessToken,\n    ['playlists', playlist_id, 'tracks'],\n  );\n  // Strip off the PlaylistTrackObject information\n  if (res instanceof AppError) return res;\n  return res.map(playlistTrackObject => playlistTrackObject.track);\n}\n\nexport function extractArtistsFromTracks(\n  tracks: SpotifyArtistObject[],\n): string[] {\n  let artistsSet = new Set<string>();\n  tracks.forEach(track => {\n    artistsSet.add(track.artists[0].name);\n  });\n  return [...artistsSet];\n}\n","import { useState, useRef, useEffect } from 'react';\nimport { useWindowSize } from './useWindowSize';\n\nexport type UseBoundingRectangle<T> = [DOMRect | null, React.RefObject<T>];\nexport function useBoundingRectangle<\n  T extends HTMLElement\n>(): UseBoundingRectangle<T> {\n  const [w, h] = useWindowSize();\n  const [rect, setrect] = useState<DOMRect | null>(null);\n  const ref = useRef<T>(null);\n  const { current } = ref;\n\n  useEffect(() => {\n    const rect = current?.getBoundingClientRect();\n    setrect(rect || null);\n  }, [current, w, h]);\n  return [rect, ref];\n}\n","import { useState, useLayoutEffect } from 'react';\n\n// based off of this stackoverflow comment: https://stackoverflow.com/a/19014495/1215360\nexport function useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n","export * from './useBoundingRectangle';\nexport * from './useWindowSize';\n\nexport const nowSeconds = () => {\n  return Math.floor(Date.now() / 1000);\n};\n","import useTypedSelector from '../rootReducer';\nimport { nowSeconds } from '../../utils';\n\ntype UseSpotifyAccessToken =\n  | { status: 'NONE' }\n  | { status: 'EXPIRED' }\n  | { status: 'VALID'; accessToken: string };\nconst useSpotifyAccessToken = (): UseSpotifyAccessToken => {\n  const accessToken = useTypedSelector(s => s.system.spotifyAccessToken);\n  const expire = useTypedSelector(s => s.system.spotifyAccessTokenExpire);\n  if (accessToken === '' && expire === '') return { status: 'NONE' };\n  if (accessToken === '' || expire === '')\n    throw new Error('Spotify access token/expire in invalid state');\n\n  const expireTime = parseInt(expire, 10);\n  if (expireTime < nowSeconds()) return { status: 'EXPIRED' };\n  return {\n    status: 'VALID',\n    accessToken,\n  };\n};\n\nexport default useSpotifyAccessToken;\n","import React, { useState } from 'react';\nimport { ListItem, createNewListItem, ListHandler, ListProps } from './List';\nimport {\n  InputGroupAddon,\n  Input,\n  InputGroup,\n  ListGroupItem,\n  ButtonGroup,\n} from 'reactstrap';\nimport AppButton from '../AppButton';\nimport '../../style.css';\n\nexport function handleActionClick<T>(\n  e: any,\n  item: ListItem<T>,\n  handler: ListHandler<T>,\n) {\n  e.preventDefault();\n  handler(item);\n}\n\ninterface Props<T> extends ListProps<T> {\n  item: ListItem<T>;\n  isEditing: boolean;\n  setIsEditing: React.Dispatch<any>;\n  disableActions: boolean;\n  rowNumber?: number;\n}\ntype FCRow<T = any> = React.FC<Props<T>>;\nconst ListRow: FCRow = ({\n  rowNumber,\n  disableActions,\n  item,\n  isEditing,\n  setIsEditing,\n  renderData,\n  ...listProps\n}) => {\n  const [editText, setEditText] = useState(item.data);\n  const {\n    handleRemove,\n    handleEdit,\n    handleSelectionChange: handleSelect,\n  } = listProps;\n  const canEdit = listProps.canEditGlobal && item.canEdit && handleEdit;\n  const canRemove = !!(listProps.canRemove && handleRemove);\n  const canSelect = !!(listProps.canSelect && handleSelect !== undefined);\n  const isSelected = !!item.isSelected;\n\n  function renderIsEditing() {\n    return (\n      <ListGroupItem>\n        <InputGroup>\n          <Input\n            value={editText}\n            style={{\n              display: 'inline',\n            }}\n            onChange={e => {\n              setEditText(e.target.value);\n            }}\n          />\n\n          <InputGroupAddon addonType='append'>\n            <AppButton\n              onClick={e => {\n                if (!handleEdit)\n                  throw Error('Expected handleEdit to exist by this point');\n                handleActionClick(\n                  e,\n                  createNewListItem(item, { data: editText }),\n                  handleEdit,\n                );\n                setEditText('');\n                setIsEditing(false);\n              }}\n            >\n              Save\n            </AppButton>\n          </InputGroupAddon>\n          <InputGroupAddon addonType='append'>\n            <AppButton\n              color='danger'\n              onClick={e => {\n                setEditText('');\n                setIsEditing(false);\n              }}\n            >\n              X\n            </AppButton>\n          </InputGroupAddon>\n        </InputGroup>\n      </ListGroupItem>\n    );\n  }\n\n  const renderActionButtons = () => {\n    return (\n      <ButtonGroup>\n        {canEdit && handleEdit && (\n          <AppButton\n            disabled={disableActions}\n            onClick={e => setIsEditing(true)}\n          >\n            Edit\n          </AppButton>\n        )}\n        {canRemove && handleRemove && (\n          <AppButton\n            disabled={disableActions}\n            onClick={e => {\n              handleActionClick(e, item, handleRemove);\n            }}\n          >\n            Remove\n          </AppButton>\n        )}\n      </ButtonGroup>\n    );\n  };\n\n  const renderRow = () => {\n    const active = canSelect && isSelected;\n    return (\n      <ListGroupItem\n        key={item.id}\n        action={canSelect}\n        active={active}\n        className='noselect d-flex justify-content-between align-items-center py-1'\n        onClick={e => listProps.handleSelectionChange?.(item)}\n      >\n        {typeof rowNumber === 'number' && `${rowNumber + 1}. `}\n        {renderData(item.data)}\n        {renderActionButtons()}\n        {active ? '✅' : '❌'}\n      </ListGroupItem>\n    );\n  };\n\n  if (isEditing) {\n    return renderIsEditing();\n  } else {\n    return renderRow();\n  }\n};\n\nexport default ListRow;\n","import React, { useState, useCallback } from 'react';\nimport ListRow from './ListRow';\nimport AppButton from '../AppButton';\nimport {\n  ButtonGroup,\n  InputGroup,\n  Input,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport produce from 'immer';\n\nconst SELECTALL = 'Select All';\nconst CLEAR = 'Unselect All';\n\nexport interface ListItem<T> {\n  id: number;\n  data: T;\n  canEdit?: boolean;\n  isSelected: boolean;\n  userAdded?: boolean;\n}\nexport type ListItems<T> = ListItem<T>[];\n// Quick and dirty way to generate probably unique ids,\n// Should serve the purpose for this list implementation\nlet _ID = -1;\nconst generateId = () => {\n  _ID++;\n  return _ID;\n};\n\nexport function createNewListItem<T>(\n  oldItem: Omit<ListItem<T>, 'id'>,\n  newItem?: Omit<Partial<ListItem<T>>, 'id'>,\n): ListItem<T> {\n  return {\n    id: generateId(),\n    ...oldItem,\n    ...newItem,\n  };\n}\n\ntype UseList<T> = [\n  ListItems<T>,\n  (items: T[]) => void,\n  Required<ListHandlers<T>>,\n];\nexport function useList<T>(\n  handlerCallbacks?: ListHandlers<T>,\n  handlerMiddleware?: ListHandlerMiddleware<T>,\n): UseList<T> {\n  const [list, setList] = useState<ListItems<T>>([]);\n\n  const setListWrapper = useCallback((dataList: T[]) => {\n    const items = dataList.map(data => {\n      return createNewListItem({\n        data: data,\n        isSelected: true,\n        canEdit: false,\n        userAdded: false,\n      });\n    });\n    setList(items);\n  }, []);\n\n  const listItemHook = attachHandlers(\n    setList,\n    handlerCallbacks,\n    handlerMiddleware,\n  );\n  return [list, setListWrapper, listItemHook];\n}\n\ntype UseReduxList<T> = {\n  items: ListItems<T>;\n  setItems: (items: ListItems<T>) => void;\n  listProps: Omit<ListProps<T>, 'items'>;\n};\nexport function useReduxList<T>(\n  selectorFN: (state: any) => ListItems<T>,\n  actionFN: (newList: ListItems<T>) => void,\n  renderData: (data: T) => JSX.Element | string,\n): UseReduxList<T> {\n  const items = useSelector(selectorFN);\n  const dispatch = useDispatch();\n  const listFNSetter: ListSetter<T> = (\n    fn: (oldList: ListItems<T>) => ListItems<T>,\n  ) => {\n    const newList = fn(items);\n    dispatch(actionFN(newList));\n  };\n  const setItems = useCallback(\n    (items: ListItems<T>) => {\n      dispatch(actionFN(items));\n    },\n    [dispatch, actionFN],\n  );\n\n  const listProps = { ...attachHandlers(listFNSetter), renderData };\n  return {\n    items: items,\n    setItems,\n    listProps,\n  };\n}\n\n// TODO use immer produce for all of this\ntype ListSetter<T> = (fn: (oldList: ListItems<T>) => ListItems<T>) => void;\nexport function attachHandlers<T>(\n  setter: ListSetter<T>,\n  handlerCallbacks?: ListHandlers<T>,\n  handlerMiddleware?: ListHandlerMiddleware<T>,\n): Required<ListHandlers<T>> {\n  return {\n    handleRemove: toRemove => {\n      setter(oldItems => {\n        return oldItems.filter(i => i.id !== toRemove.id);\n      });\n      handlerCallbacks?.handleRemove?.(toRemove);\n    },\n    handleAddRow: addedItem => {\n      const newItem = handlerMiddleware?.addRow?.(addedItem) || addedItem;\n      setter(oldItems => {\n        return [...oldItems, newItem];\n      });\n      handlerCallbacks?.handleAddRow?.(newItem);\n    },\n    handleEdit: editedItem => {\n      setter(oldItems => {\n        const newItems = [...oldItems];\n        let itemToEdit = newItems.find(i => i.id === editedItem.id);\n        if (!itemToEdit)\n          throw new Error(\n            `Could not find edited item: ${JSON.stringify(editedItem)}`,\n          );\n        itemToEdit.data = editedItem.data;\n        return newItems;\n      });\n      handlerCallbacks?.handleEdit?.(editedItem);\n    },\n    handleSelectionChange: selectedItem => {\n      setter(oldItems => {\n        return produce(oldItems, draft => {\n          const i = draft.findIndex(i => i.id === selectedItem.id);\n          draft[i].isSelected = !selectedItem.isSelected;\n          handlerCallbacks?.handleSelectionChange?.(draft[i] as ListItem<T>);\n        });\n      });\n    },\n    handleSelectAll: () => {\n      setter(oldItems => {\n        let newItems = oldItems.map(i => {\n          return { ...i, isSelected: true };\n        });\n        const selectAllMW = handlerMiddleware?.selectAll;\n        if (selectAllMW) {\n          newItems = selectAllMW(newItems);\n        }\n        return newItems;\n      });\n    },\n    handleClear: () => {\n      setter(oldItems => {\n        let newItems = oldItems.map(i => {\n          return { ...i, isSelected: false };\n        });\n        const clearMW = handlerMiddleware?.clear;\n        if (clearMW) {\n          newItems = clearMW(newItems);\n        }\n        return newItems;\n      });\n    },\n  };\n}\n\nexport interface ListHandlerMiddleware<T> {\n  addRow?: (item: ListItem<T>) => ListItem<T>;\n  selectAll?: (items: ListItems<T>) => ListItems<T>;\n  clear?: (items: ListItems<T>) => ListItems<T>;\n}\n\nexport type ListHandler<T> = (item: ListItem<T>) => void;\nexport type ListActionHandler = (actionValue: any) => void;\nexport interface ListHandlers<T> {\n  handleRemove?: ListHandler<T>;\n  handleAddRow?: ListHandler<T>;\n  handleEdit?: ListHandler<T>;\n  handleSelectionChange?: ListHandler<T>;\n  handleSelectAll?: (newItems?: ListItem<T>[]) => void;\n  handleClear?: (newItems?: ListItems<T>) => void;\n}\nexport interface ListProps<T> extends ListHandlers<T> {\n  items: ListItems<T>;\n  renderData: (data: T) => JSX.Element | string;\n  name?: string;\n  canRemove?: boolean;\n  canAddRow?: boolean;\n  canEditGlobal?: boolean;\n  canSelect?: boolean;\n  rowNumbers?: boolean;\n}\n\ntype FCList<T = any> = React.FC<ListProps<T>>;\nconst List: FCList = props => {\n  const [isAddingRow, setisAddingRow] = useState(false);\n  const [addRowText, setAddRowText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const { items } = props;\n  const canSelectAll = props.canSelect && props.handleSelectAll;\n  const canClear = props.canSelect && props.handleClear;\n\n  const renderAddRow = () => {\n    const { handleAddRow, canAddRow } = props;\n    if (!(handleAddRow && canAddRow)) return null;\n    if (isAddingRow)\n      return (\n        <div>\n          <ListGroupItem>\n            <InputGroup>\n              <Input\n                value={addRowText}\n                onChange={e => setAddRowText(e.target.value)}\n              />\n              <ButtonGroup>\n                <AppButton\n                  onClick={() => {\n                    const newItem = createNewListItem(\n                      {\n                        data: addRowText,\n                        userAdded: true,\n                        isSelected: false,\n                      },\n                      {},\n                    );\n                    setisAddingRow(false);\n                    handleAddRow(newItem);\n                    setAddRowText('');\n                  }}\n                >\n                  Save\n                </AppButton>\n                <AppButton\n                  color='danger'\n                  onClick={() => {\n                    setisAddingRow(false);\n                    setAddRowText('');\n                  }}\n                >\n                  X\n                </AppButton>\n              </ButtonGroup>\n            </InputGroup>\n          </ListGroupItem>\n        </div>\n      );\n\n    return (\n      <ListGroupItem>\n        <AppButton\n          block\n          disabled={isEditing}\n          onClick={() => setisAddingRow(true)}\n        >\n          Add Row\n        </AppButton>\n      </ListGroupItem>\n    );\n  };\n\n  const renderListActions = () => {\n    let selectAll = null;\n    let clear = null;\n    if (canSelectAll) {\n      selectAll = (\n        <AppButton\n          color='success'\n          onClick={e => {\n            props.handleSelectAll?.();\n          }}\n        >\n          {SELECTALL}\n        </AppButton>\n      );\n    }\n    if (canClear) {\n      clear = (\n        <AppButton\n          color='warning'\n          onClick={e => {\n            props.handleClear?.();\n          }}\n        >\n          {CLEAR}\n        </AppButton>\n      );\n    }\n    return (\n      <div className='list__actions'>\n        <ButtonGroup>\n          {selectAll}\n          {clear}\n        </ButtonGroup>\n      </div>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <div\n        className='list__header'\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        {props.name ? <h3>{props.name}</h3> : null}\n        {renderListActions()}\n      </div>\n    );\n  };\n\n  function renderList() {\n    const rows = items.map((item, i) => {\n      const rowNumber = props.rowNumbers ? i : undefined;\n      return (\n        <ListRow\n          key={item.id}\n          item={item}\n          setIsEditing={setIsEditing}\n          isEditing={isEditing}\n          disableActions={isAddingRow}\n          rowNumber={rowNumber}\n          {...props}\n        />\n      );\n    });\n    return (\n      <div className='list'>\n        {renderHeader()}\n        <ListGroup>\n          {rows}\n          {renderAddRow()}\n        </ListGroup>\n      </div>\n    );\n  }\n  return <div className='list'>{renderList()}</div>;\n};\n\nexport default List;\n","const client_id = 'f775b626d4784dfba4491742d5453d55'; // Your client id\nconst redirect_uri = window.location.href;\n// process.env.NODE_ENV === 'development'\n//   ? window.location.href\n//   : 'https://danieladen.github.io/festival-poster-app/'; // TODO remove hard coded redirect\nconst scope = 'user-top-read';\nconst SPOTIFY_AUTH_URL = 'https://accounts.spotify.com/authorize';\nconst SPOTIFY_ACCESS_TOKEN_FIELD = 'access_token';\nconst SPOTIFY_TOKEN_TYPE_FIELD = 'token_type';\nconst SPOTIFY_EXPIRES_IN_FIELD = 'expires_in';\n\nconst authParams = {\n  client_id,\n  response_type: 'token',\n  redirect_uri,\n  scope,\n};\n\nexport function constructSpotifyAuthURL() {\n  const queryParamsList = [];\n  for (let [k, v] of Object.entries(authParams)) {\n    queryParamsList.push(`${k}=${v}`);\n  }\n  const paramsString = queryParamsList.join('&');\n  return `${SPOTIFY_AUTH_URL}?${paramsString}`;\n}\n\ninterface SpotifyAuthData {\n  access_token: string;\n  token_type: string;\n  expires_in: string;\n  state?: string;\n}\n\nlet MEMOED_AUTH_DATA: SpotifyAuthData | undefined;\n\ntype AuthDataStatus =\n  | 'AUTHORIZED'\n  | 'NOT_AUTHORIZED'\n  | 'ACCESS_DENIED'\n  | 'ERROR';\nexport function spotifyAuthFromWindow(): {\n  status: AuthDataStatus;\n  data?: SpotifyAuthData;\n  error?: string;\n} {\n  if (MEMOED_AUTH_DATA) {\n    return {\n      status: 'AUTHORIZED',\n      data: MEMOED_AUTH_DATA,\n    };\n  }\n  const data: any = {};\n  const urlList = window.location.href.split('#');\n  if (urlList.length !== 2) return { status: 'NOT_AUTHORIZED' }; // no hash fragment\n  const queryList = urlList[1].split('&');\n  for (let queryString of queryList) {\n    let [k, v] = queryString.split('=');\n    data[k] = v;\n  }\n\n  if (data.hasOwnProperty('error')) {\n    return { status: 'ACCESS_DENIED' };\n  }\n\n  let error = '';\n  if (!data.hasOwnProperty(SPOTIFY_ACCESS_TOKEN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_ACCESS_TOKEN_FIELD}`;\n  }\n  if (!data.hasOwnProperty(SPOTIFY_EXPIRES_IN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_EXPIRES_IN_FIELD}`;\n  }\n  if (!data.hasOwnProperty(SPOTIFY_TOKEN_TYPE_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_TOKEN_TYPE_FIELD}`;\n  }\n  if (error !== '') {\n    return {\n      status: 'ERROR',\n      error,\n    };\n  }\n\n  return {\n    status: 'AUTHORIZED',\n    data,\n  };\n}\n","// import useTypedSelector from \"./store/rootReducer\";\nimport { useDispatch } from 'react-redux';\nimport { caughtGlobalError } from './store/system/systemSlice';\nimport { useCallback } from 'react';\nimport { AppErrorType } from './error';\n\n// TODO implement smarter error logging.  This will so far\n//      only catch one error at a time.\nexport const useErrorLog = () => {\n  // const error = useTypedSelector(s => s.system.error)\n  const dispatch = useDispatch();\n\n  const log = useCallback(\n    (e: Error, type?: AppErrorType) => {\n      // if (error.isError) return;\n      if (type) (e as any).type = type;\n      dispatch(caughtGlobalError(e));\n    },\n    [dispatch],\n  );\n  return log;\n};\n\nexport const useAppLog = () => {\n  const log = useCallback((data: any) => {\n    console.log(data);\n  }, []);\n  return log;\n};\n","import { useEffect, useMemo } from 'react';\nimport {\n  spotifyAPIFactory,\n  SpotifyAPI,\n  SpotifyArtistObject,\n} from './SpotifyAPI';\nimport { useDispatch } from 'react-redux';\nimport useSpotifyAccessToken from '../store/system/useSpotifyAccessToken';\nimport useTypedSelector from '../store/rootReducer';\nimport {\n  updateArtistList,\n  topArtistsTimeRangeUpdated,\n} from '../store/Poster/posterSlice';\nimport { createNewListItem, ListItems } from '../components/List/List';\nimport { useErrorLog, useAppLog } from '../AppLog';\nimport { AppError } from '../error';\n\nexport const useSpotifyAPI = (): SpotifyAPI | null => {\n  const tokenData = useSpotifyAccessToken();\n  const elog = useErrorLog();\n  let accessToken = '';\n  if (tokenData.status === 'NONE' || tokenData.status === 'EXPIRED') {\n    const e = new AppError(\n      `Spotify Access token status not valid.  status: ${tokenData.status}`,\n    );\n    elog(e, 'NoSpotifyAccess');\n  } else {\n    accessToken = tokenData.accessToken;\n  }\n  const memoedAPI = useMemo(() => {\n    if (accessToken === '') return null;\n    return spotifyAPIFactory({ authToken: accessToken });\n  }, [accessToken]);\n\n  return memoedAPI;\n};\n\nconst artistObjectsToListItems = (artistObjects: SpotifyArtistObject[]) => {\n  return artistObjects.map(ao => {\n    return createNewListItem({\n      isSelected: true,\n      data: ao,\n      canEdit: false,\n      userAdded: false,\n    });\n  });\n};\n\nlet count = 0; // TODO remove\ntype UseSpotifyTopArtists<T> = [ListItems<T>, (newTimeRange: string) => void];\nexport const useSpotifyTopArtists = () => {\n  const timeRange = useTypedSelector(s => s.poster.topArtistsTimeRange);\n  const topArtists = useTypedSelector(s => s.poster.artists);\n\n  const api = useSpotifyAPI();\n  const dispatch = useDispatch();\n  const log = useAppLog();\n  const elog = useErrorLog();\n\n  const setTopArtistsTimeRange = (newTimeRange: string) => {\n    dispatch(topArtistsTimeRangeUpdated(newTimeRange));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!api?.topArtists)\n        throw new Error(\n          'Expected topArtists method to exist on spotify api object',\n        );\n      count++;\n      if (count > 5) throw new Error('Max Count Reached');\n      log('Using api to retreive top Artists for range ' + timeRange);\n      let topArtistsData;\n      try {\n        topArtistsData = await api.topArtists({ time_range: timeRange });\n      } catch (e) {\n        elog(e, 'NoSpotifyAccess');\n      } finally {\n        if (!topArtistsData) throw new AppError('Expected top artists data');\n        if (topArtistsData instanceof Error) {\n          elog(topArtistsData);\n          return;\n        }\n        const topArtistsList = artistObjectsToListItems(topArtistsData);\n        dispatch(updateArtistList(topArtistsList));\n      }\n    };\n    if (!api) return;\n    fetchData();\n  }, [dispatch, log, elog, api, timeRange]);\n\n  return { topArtists, setTopArtistsTimeRange };\n};\n","import React from 'react';\nimport { useSpotifyTopArtists } from '../spotify/SpotifyAPIHooks';\nimport List, { useReduxList } from './List/List';\nimport AppSelect, { useAppSelect } from './AppSelect/AppSelect';\nimport useTypedSelector, { RootState } from '../store/rootReducer';\nimport { updateArtistList } from '../store/Poster/posterSlice';\n\nconst listName = 'Top Artists';\nconst topArtistTROptions = [\n  {\n    text: 'Last 6 Months',\n    value: 'medium_term',\n  },\n  {\n    text: 'All Time',\n    value: 'long_term',\n  },\n  {\n    text: '1 Month',\n    value: 'short_term',\n  },\n];\n\ninterface Props {}\nconst TopArtistsList: React.FC<Props> = () => {\n  const { setTopArtistsTimeRange } = useSpotifyTopArtists();\n  const initialTimeRange = useTypedSelector(s => s.poster.topArtistsTimeRange);\n  const [, artistSelectProps] = useAppSelect(\n    topArtistTROptions,\n    initialTimeRange,\n    v => setTopArtistsTimeRange(v),\n  );\n\n  const { items, listProps } = useReduxList(\n    (state: RootState) => state.poster.artists,\n    updateArtistList,\n    data => {\n      const url = data.images[data.images.length - 1].url;\n      return (\n        <span>\n          <img\n            className=''\n            alt={data.name + ' photo'}\n            src={url}\n            style={{\n              height: '50px',\n              width: '50px',\n              marginRight: '5px',\n            }}\n          />\n          {data.name}\n        </span>\n      );\n    },\n  );\n\n  return (\n    <div>\n      <h3 style={{ display: 'inline-block' }}>{listName}</h3>\n      <AppSelect {...artistSelectProps} />\n      <List items={items} {...listProps} canSelect />\n    </div>\n  );\n};\n\nexport default TopArtistsList;\n","import React from 'react';\nimport { constructSpotifyAuthURL } from '../spotify/SpotifyAuth';\n\n// const centerContent = 'justify-content-md-center';\n// const uriFormText = `Enter a Spotify User URI`;\n// const userIdFormat = 'spotify:user:yourid';\n// const invalidURIMsg = `Invalid Spotify URI. Format should be '${userIdFormat}'`;\n// const testURI = 'spotify:user:1238922402'\n\n// function parseUserIdFromURI(uri: string) {\n//   const uriParts = uri.split(':')\n//   if (uriParts.length !== 3) return;\n//   if (uriParts[0] !== 'spotify' || uriParts[1] !== 'user') return;\n//   const userId = uriParts[2];\n//   if (userId === '') return;\n//   return userId;\n// }\n\ninterface Props {}\nconst SpotifyInfoCapturePanel: React.FC<Props> = () => {\n  return (\n    <div className='h-100 d-flex justify-content-center align-items-center'>\n      <a\n        className='btn btn-success'\n        role='button'\n        href={constructSpotifyAuthURL()}\n      >\n        Authorize Spotify\n      </a>\n    </div>\n  );\n};\n\nexport default SpotifyInfoCapturePanel;\n","import React from 'react';\nimport './SideNav.css';\nimport TopArtistsList from '../TopArtistsList';\nimport SpotifyInfoCapturePanel from '../SpotifyInfoCapturePanel';\nimport useSpotifyAccessToken from '../../store/system/useSpotifyAccessToken';\n\ninterface Props {\n  active: boolean;\n  toggle: () => void;\n}\nconst SideNav: React.FC<Props> = ({ active, toggle }) => {\n  const width = active ? 300 : 0;\n  const data = useSpotifyAccessToken();\n  const showAuth = data.status !== 'VALID';\n\n  return (\n    <div className='sidenav ' style={{ width }}>\n      <a href='#' className='closebtn' onClick={toggle}>\n        &times;\n      </a>\n      {showAuth && <SpotifyInfoCapturePanel />}\n      {!showAuth && <TopArtistsList />}\n    </div>\n  );\n};\n\nexport default SideNav;\n","import React, { useState, useRef, useEffect, RefObject } from 'react';\nimport { Container, Row, Col, Nav } from 'reactstrap';\nimport PosterCanvas from './Poster/PosterCanvas';\nimport Options from './Options';\nimport AppButton from './AppButton';\nimport SideNav from './Toolbar/SideNav';\nimport { useBoundingRectangle } from '../utils';\n\nconst renderDevTools = () => {\n  if (process.env.NODE_ENV !== 'development') return null;\n  return (\n    <form className='form-inline'>\n      <button\n        className='btn btn-outline-danger'\n        type='button'\n        onClick={() => {\n          window.localStorage.clear();\n          window.location.reload();\n        }}\n      >\n        Clear Cache\n      </button>\n    </form>\n  );\n};\n\ninterface Props {}\nconst Home: React.FC<Props> = () => {\n  const [navActive, setNavActive] = useState(false);\n  const toggleNav = () => setNavActive(!navActive);\n  const [rect, ref] = useBoundingRectangle<HTMLDivElement>();\n  const canvasParentWidth = rect?.width;\n  const canvasParentHeight = rect?.height;\n\n  return (\n    <div className='home h-100'>\n      <Nav\n        className='navbar navbar-expand-sm navbar-light bg-light py-0'\n        style={{ marginBottom: '10px' }}\n      >\n        <AppButton className='mr-2' onClick={() => toggleNav()}>\n          Artists\n        </AppButton>\n        <div className='navbar-brand'>Poster App</div>\n        {renderDevTools()}\n      </Nav>\n      <SideNav active={navActive} toggle={toggleNav} />\n      <Options />\n      <div ref={ref} className='h-100'>\n        <Container className='h-100'>\n          <Row>\n            <Col className='d-flex justify-content-center'>\n              <PosterCanvas\n                parentWidth={canvasParentWidth}\n                parentHeight={canvasParentHeight}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { spotifyAuthFromWindow } from '../spotify/SpotifyAuth';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { accessTokenUpdated } from '../store/system/systemSlice';\n\nconst redirectHome = () => {\n  return <Redirect to='/' />;\n};\n\ninterface Props {}\nconst SpotifyAuthorize: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  if (authData.status !== 'AUTHORIZED') {\n    console.log(`Non Authorized status: ${authData.status}`);\n    console.log(authData.error);\n    return redirectHome();\n  }\n\n  if (!authData.data)\n    throw new Error('Received authorized status without data');\n  const { access_token, expires_in } = authData.data;\n  dispatch(\n    accessTokenUpdated({\n      spotifyAccessToken: access_token,\n      spotifyAccessTokenExpire: expires_in,\n    }),\n  );\n  return redirectHome();\n};\n\nexport default SpotifyAuthorize;\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport { Switch, Route } from 'react-router-dom';\nimport SpotifyAuthorize from './components/SpotifyAuthorize';\nimport { useDispatch } from 'react-redux';\nimport { spotifyAuthFromWindow } from './spotify/SpotifyAuth';\nimport { accessTokenUpdated } from './store/system/systemSlice';\nimport { nowSeconds } from './utils';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  // TODO update this to be safer\n  if (authData.status !== 'AUTHORIZED') {\n    // console.log(`Non Authorized status: ${authData.status}`)\n    // console.log(authData.error)\n  } else {\n    if (!authData.data)\n      throw new Error('Received authorized status without data');\n    const { access_token, expires_in } = authData.data;\n    const expiresInNum = parseInt(expires_in, 10);\n    if (isNaN(expiresInNum))\n      throw new Error(`Spotify did not return a valid number ${expires_in}`);\n    const expireTime = nowSeconds() + expiresInNum;\n    window.location.hash = '';\n    dispatch(\n      accessTokenUpdated({\n        spotifyAccessToken: access_token,\n        spotifyAccessTokenExpire: expireTime.toString(),\n      }),\n    );\n  }\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/authenticate'>\n          <SpotifyAuthorize />\n        </Route>\n        <Route exact path='/'>\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './rootReducer';\n\n// TODO look into other options to replicate this functionality.\n// works for now but obviously not very efficient\nexport const REDUX_LOCAL_STORAGE_KEY = '__REDUX_LOCAL_STORAGE_KEY';\nconst localStorageMiddleware = (store: any) => (next: any) => (action: any) => {\n  let res = next(action);\n  let state = store.getState();\n  let json = JSON.stringify(state);\n  window.localStorage.setItem(REDUX_LOCAL_STORAGE_KEY, json);\n  return res;\n};\n\nconst initialJSON = window.localStorage.getItem(REDUX_LOCAL_STORAGE_KEY);\nconst preloadedState = initialJSON ? JSON.parse(initialJSON) : undefined;\n\nconst middleware = [localStorageMiddleware];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n  middleware,\n});\n\nexport default store;\n","import React, { useState } from 'react';\nimport { Modal, ModalProps, ModalHeader, ModalBody } from 'reactstrap';\nimport { constructSpotifyAuthURL } from '../spotify/SpotifyAuth';\nimport useTypedSelector from '../store/rootReducer';\n\ninterface SpotifyAuthRefreshModalProps extends ModalProps {\n  toggle: () => void;\n}\nconst SpotifyAuthRefreshModal: React.FC<SpotifyAuthRefreshModalProps> = props => {\n  const { toggle } = props;\n  return (\n    <Modal {...props} className='spotify-auth-refresh-modal'>\n      <ModalHeader toggle={toggle}>\n        Spotify Is Asking To Be Authorized\n      </ModalHeader>\n      <ModalBody>\n        <a href={constructSpotifyAuthURL()}>Authorize Spotify</a>\n      </ModalBody>\n    </Modal>\n  );\n};\n\ninterface Props {}\nconst GlobalError: React.FC<Props> = ({ children }) => {\n  const errorData = useTypedSelector(s => s.system.error);\n  const [spotifyAccessRefreshModal, setSpotifyAccessRefreshModal] = useState(\n    false,\n  );\n\n  const toggleModal = () =>\n    setSpotifyAccessRefreshModal(!spotifyAccessRefreshModal);\n\n  if (!errorData.isError || !errorData.error) {\n    if (spotifyAccessRefreshModal) {\n      toggleModal();\n    }\n    return <>{children}</>;\n  }\n\n  const error = errorData.error;\n\n  let errorBanner;\n  console.log(\n    `isError: ${\n      errorData.isError\n    }, error: ${!!error}, errorData.error: ${!!errorData.error}`,\n  );\n  if (error) {\n    switch (error.type) {\n      case 'NoSpotifyAccess':\n        if (!spotifyAccessRefreshModal) setSpotifyAccessRefreshModal(true);\n        errorBanner = null; // Modal will take care of error message\n        break;\n      default:\n        errorBanner = <h3>Error</h3>;\n        console.error(error);\n    }\n  }\n\n  return (\n    <>\n      {/* {spotifyAccessRefreshModal && (\n        <SpotifyAuthRefreshModal\n          isOpen={spotifyAccessRefreshModal}\n          toggle={toggleModal}\n        />\n      )}\n      {errorBanner} */}\n      {children}\n    </>\n  );\n};\n\nexport default GlobalError;\n","import './index.css';\nimport './fonts/fonts.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport GlobalError from './components/GlobalError';\nimport { MemoryRouter as Router } from 'react-router-dom';\n\n// TODO this is only for development but still need to figure out a better way\n// to do this\nconst VERSION = 2;\nconst key = 'version';\nconst versionStr = window.localStorage.getItem(key);\nif (!versionStr) {\n  window.localStorage.clear();\n  window.localStorage.setItem(key, VERSION.toString());\n} else {\n  const version = parseInt(versionStr, 10);\n  if (version < VERSION) {\n    window.localStorage.clear();\n    window.localStorage.setItem(key, VERSION.toString());\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalError>\n      <Router>\n        <App />\n      </Router>\n    </GlobalError>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}