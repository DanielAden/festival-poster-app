{"version":3,"sources":["images/desert.png","images/punk.png","images/metal.png","images/galaxy.png","error.ts","store/system/systemSlice.ts","store/Poster/posterSlice.ts","store/rootReducer.ts","components/Poster/CanvasUtils.ts","components/Poster/PosterTheme.ts","components/Poster/PosterTextLayout.ts","spotify/SpotifyAPI.ts","utils/useBoundingRectangle.ts","utils/useWindowSize.ts","utils/index.ts","store/system/useSpotifyAccessToken.ts","components/AppButton.tsx","components/List/ListRow.tsx","components/List/List.tsx","spotify/SpotifyAuth.ts","AppLog.ts","spotify/SpotifyAPIHooks.ts","components/Poster/Poster.ts","components/Poster/PosterCanvas.tsx","components/AppSelect/AppSelect.tsx","components/Options.tsx","components/TopArtistsList.tsx","components/SpotifyInfoCapturePanel.tsx","components/Toolbar/SideNav.tsx","components/Home.tsx","components/SpotifyAuthorize.tsx","App.tsx","serviceWorker.ts","store/index.ts","components/GlobalError.tsx","index.tsx"],"names":["module","exports","toStorable","e","type","AppError","message","name","stack","_type","this","Error","systemSlice","createSlice","initialState","spotifyAccessToken","spotifyAccessTokenExpire","error","isError","reducers","accessTokenUpdated","state","action","produce","draftState","payload","caughtGlobalError","clearGlobalError","actions","height","window","innerHeight","me","artists","topArtistsTimeRange","layoutType","themeType","width","posterSlice","changeThemeType","changeLayoutType","updateArtistList","updateMeData","topArtistsTimeRangeUpdated","rootReducer","combineReducers","poster","posterSliceReducer","system","systemSliceReducer","useTypedSelector","selector","useSelector","createHiDPICanvas","can","w","h","ctx","getContext","ratio","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Math","ceil","pixelRatio","style","setTransform","PosterTheme","backgroundImage","festivalNameTopRatio","festivalNameColor","festivalNameFont","sideMarginRatio","artistFont","artistColor","artistTopRatio","artistFontRatio","festivalNameFontRatio","strokeInfo","strokeStyle","lineWidth","offsetX","offsetY","skewText","DesertTheme","images","PunkTheme","RockTheme","GalaxyTheme","TestTheme","PosterTextLayout","_poster","fontRatio","font","fontHeight","fontSizeRatio","floor","s","slice","length","text","fullText","reduce","prev","cur","metrics","measureText","marginWidth","sideMargin","fontString","theme","lines","setArtistFont","currentLine","artistNames","artist","calculateTextWidth","maxPosterWidth","push","cutTrailingChar","artistSeperator","artistTopOverride","canvasCtx","baseTop","artistTop","artistLines","textBaseline","textAlign","fillStyle","fh","movingTop","forEach","line","i","printCenter","bottom","top","str","x","y","maxWidth","Array","isArray","ss","strokeText","transform","stroke","midX","fillText","posterWidth","festivalName","festivalNameTop","posterHeight","BasicLayout","WeekendLayout","setSkew","oneThird","day1Lines","day2Lines","day3Lines","startTop","actualTop","dayFont","printLeft","printRight","clearTransform","SPOTIFY_API_HOST","SPOTIFY_VERSION","SpotifyAPI","apiKey","playlistId","getPlaylistTracks","trackData","extractArtistsFromTracks","url","fetch","res","unpackResponse","json","SpotifyAuthTokenAPI","accessToken","a","async","spotifyGETHelper","playlist_id","map","playlistTrackObject","track","spotifyTracksFromPlaylist","spotifyMe","limit","offset","time_range","data","SpotifyUserIdAPI","apiurl","noAuthAPICall","endpoints","endpointString","join","URL","href","ok","status","spotifyFetch","access_token","headers","Authorization","objectToQueryParams","queryObject","USP","URLSearchParams","k","append","toString","urlParams","queryParams","queryStr","hasOwnProperty","items","tracks","artistsSet","Set","add","useBoundingRectangle","useState","size","setSize","useLayoutEffect","updateSize","innerWidth","addEventListener","removeEventListener","useWindowSize","undefined","rect","setrect","ref","useRef","current","useEffect","getBoundingClientRect","nowSeconds","Date","now","useSpotifyAccessToken","expire","parseInt","AppButton","children","props","color","onClick","stopPropagation","handleActionClick","item","handler","preventDefault","ListRow","rowNumber","disableActions","isEditing","setIsEditing","renderData","listProps","editText","setEditText","handleRemove","handleEdit","handleSelect","handleSelectionChange","canEdit","canEditGlobal","canRemove","canSelect","isSelected","ListGroupItem","InputGroup","Input","value","display","onChange","target","InputGroupAddon","addonType","createNewListItem","active","key","id","className","ButtonGroup","disabled","renderRow","_ID","generateId","oldItem","newItem","attachHandlers","setter","handlerCallbacks","handlerMiddleware","toRemove","oldItems","filter","handleAddRow","addedItem","addRow","editedItem","newItems","itemToEdit","find","JSON","stringify","selectedItem","draft","findIndex","handleSelectAll","selectAllMW","selectAll","handleClear","clearMW","clear","MEMOED_AUTH_DATA","List","isAddingRow","setisAddingRow","addRowText","setAddRowText","canSelectAll","canClear","renderAddRow","canAddRow","userAdded","block","renderHeader","justifyContent","renderListActions","rows","rowNumbers","ListGroup","renderList","useErrorLog","dispatch","useDispatch","useCallback","useAppLog","console","log","useSpotifyAPI","tokenData","elog","useMemo","spotifyAuthObj","authToken","userId","spotifyAPIFactory","count","DEFAULT_FESTIVAL_NAME","BasicPoster","ps","layout","canvas","_w","_h","img","_drawBackground","festivalNameText","festivalNameCase","artistCase","loadBackground","FontFaceObserver","nameFont","toAwait","load","loadImage","Promise","all","drawBackground","Poster","_draw","drawArtistBlock","drawFestivalName","maxPosterHeight","newTop","clearRect","backgroundCanvas","draw","imgWidth","imgHeight","Image","resolve","onload","src","naturalWidth","naturalHeight","drawImage","String","fromCharCode","toUpperCase","displayName","usePoster","api","meData","fetchData","useMe","usePosterTheme","usePosterLayout","display_name","aspectRatio","getH","PosterCanvas","parentDomRect","curBackgroundImage","setCurBackgroundImage","curW","setCurW","curH","setCurH","isLoading","setisLoading","bgRef","r","document","documentElement","clientHeight","calculatePosterDims","calculatedW","calculatedH","setPosterSize","needBackgroundImageUpdate","needPosterUpdate","bgcan","redrawBG","drawMultiCanvas","drawPoster","Spinner","zIndex","position","useAppSelect","options","initialValue","changeCB","selectedValue","setSelectedValue","selected","handleChange","AppSelect","labelText","optionEls","opt","FormGroup","Label","themeOptions","layoutOptions","Options","useAppSelector","themeSelectHook","layoutSelectHook","createImage","createElement","dataURL","toDataURL","open","write","useCreateImage","Form","Row","form","Col","md","xs","topArtistTROptions","TopArtistsList","setTopArtistsTimeRange","timeRange","topArtists","topArtistsData","topArtistsList","ao","newTimeRange","useSpotifyTopArtists","initialTimeRange","v","artistSelectProps","selectorFN","actionFN","setItems","fn","newList","useReduxList","alt","marginRight","redirect_uri","location","SPOTIFY_AUTH_URL","SPOTIFY_ACCESS_TOKEN_FIELD","SPOTIFY_TOKEN_TYPE_FIELD","SPOTIFY_EXPIRES_IN_FIELD","authParams","client_id","response_type","scope","constructSpotifyAuthURL","queryParamsList","Object","entries","paramsString","spotifyAuthFromWindow","urlList","split","queryList","SpotifyInfoCapturePanel","role","SideNav","toggle","showAuth","Home","navActive","setNavActive","toggleNav","Nav","marginBottom","Container","redirectHome","to","SpotifyAuthorize","authData","expires_in","App","expiresInNum","isNaN","expireTime","hash","exact","path","Boolean","hostname","match","versionStr","localStorage","getItem","setItem","initialJSON","preloadedState","parse","middleware","store","next","getState","configureStore","reducer","GlobalError","errorData","spotifyAccessRefreshModal","setSpotifyAccessRefreshModal","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,gXCA9BC,EAAa,SAASC,GACjC,IAAMC,EAAOD,aAAaE,EAAWF,EAAEC,KAAO,KAC9C,MAAO,CACLE,QAASH,EAAEG,QACXC,KAAMJ,EAAEI,KACRC,MAAOL,EAAEK,MACTJ,KAAMA,IAYGC,EAAb,YAGE,WAAYC,EAAiBF,GAAsB,IAAD,8BAChD,4CAAME,KAHAG,MAAsB,KAIxBL,IACF,EAAKK,MAAQL,GAHiC,EAHpD,sEAmBI,OAAOF,EAAWQ,QAnBtB,2BAWI,OAAOA,KAAKD,OAXhB,aAcWL,GACPM,KAAKD,MAAQL,MAfjB,eAA8BO,Q,wBCKxBC,EAAcC,YAAY,CAC9BN,KAAM,SACNO,aARgC,CAChCC,mBAAoB,GACpBC,yBAA0B,GAC1BC,MAAO,CAAEC,SAAS,IAMlBC,SAAU,CACRC,mBADQ,SAENC,EACAC,GAEA,OAAOC,YAAQF,GAAO,SAAAG,GACpBA,EAAWT,mBAAqBO,EAAOG,QAAQV,mBAC/CS,EAAWR,yBACTM,EAAOG,QAAQT,yBACyB,KAAtCM,EAAOG,QAAQV,oBAEfS,EAAWP,MAAMC,SACe,oBAAhCM,EAAWP,MAAMA,MAAMb,OAEvBoB,EAAWP,MAAQ,CAAEC,SAAS,QAKtCQ,kBAnBQ,SAmBUL,EAAOC,GACvB,OAAOC,YAAQF,GAAO,SAAAG,GACpBA,EAAWP,MAAQ,CACjBC,SAAS,EACTD,MAAOf,EAAWoB,EAAOG,cAI/BE,iBA3BQ,SA2BSN,GACf,OAAOE,YAAQF,GAAO,SAAAG,GACpBA,EAAWP,MAAQ,CAAEC,SAAS,U,EAUlCN,EAAYgB,QAHdR,E,EAAAA,mBACAM,E,EAAAA,kBAGad,G,EAFbe,iBAEaf,EAAf,SChDMiB,EAA8B,GAArBC,OAAOC,YAGhBjB,EAA4B,CAChCkB,GAAI,KACJC,QAAS,GACTC,oBAAqB,cACrBC,WAAY,QACZC,UAAW,SACXC,MARqB,IAATR,EASZA,UAGIS,EAAczB,YAAY,CAC9BN,KAAM,SACNO,eACAK,SAAU,CACRoB,gBADQ,SACQlB,EAAOC,GACrB,OAAOC,YAAQF,GAAO,SAAAG,GACpBA,EAAWY,UAAYd,EAAOG,YAGlCe,iBANQ,SAMSnB,EAAOC,GACtB,OAAOC,YAAQF,GAAO,SAAAG,GACpBA,EAAWW,WAAab,EAAOG,YAGnCgB,iBAXQ,SAWSpB,EAAOC,GACtB,OAAOC,YAAQF,GAAO,SAAAG,GACpBA,EAAWS,QAAUX,EAAOG,YAGhCiB,aAhBQ,SAgBKrB,EAAOC,GAClB,OAAOC,YAAQF,GAAO,SAAAG,GACpBA,EAAWQ,GAAKV,EAAOG,YAG3BkB,2BArBQ,SAqBmBtB,EAAOC,GAChC,OAAOC,YAAQF,GAAO,SAAAG,GACpBA,EAAWU,oBAAsBZ,EAAOG,e,EAY5Ca,EAAYV,QALdW,E,EAAAA,gBACAE,E,EAAAA,iBACAE,E,EAAAA,2BACAH,E,EAAAA,iBACAE,E,EAAAA,aAGaJ,IAAf,Q,OClEaM,EAAcC,0BAAgB,CACzCC,OAAQC,EACRC,OAAQC,IAUKC,EALU,SAAIC,GAE3B,OADcC,YAAYD,ICEfE,EAAoB,SAC/BC,EACAC,EACAC,GAEA,IAAMC,EAAMH,EAAII,WAAW,MAC3B,IAAKD,EACH,MAAM,IAAI9C,MAAM,uDAClB,IAAMgD,EApBkB,SAACF,GACzB,IAAMG,EAAM9B,OAAO+B,kBAAoB,EACjCC,EACHL,EAAYM,8BACZN,EAAYO,2BACZP,EAAYQ,0BACZR,EAAYS,yBACZT,EAAYU,wBACb,EACF,OAAOC,KAAKC,KAAKT,EAAME,GAWTQ,CAAWb,GAMzB,OALAH,EAAIjB,MAAQkB,EAAII,EAChBL,EAAIzB,OAAS2B,EAAIG,EACjBL,EAAIiB,MAAMlC,MAAQkB,EAAI,KACtBD,EAAIiB,MAAM1C,OAAS2B,EAAI,KACvBC,EAAIe,aAAab,EAAO,EAAG,EAAGA,EAAO,EAAG,GACjCL,G,oECjBamB,EAAtB,sCACSC,gBAA0B,GADnC,KAGSC,qBAA+B,IAHxC,KAISC,kBAA4B,aAJrC,KAKSC,iBAA2B,QALpC,KAOSC,gBAA0B,EAPnC,KASSC,WAAqB,kBAT9B,KAUSC,YAAsB,QAV/B,KAYSC,eAAiB,GAZ1B,KAaSC,gBAA0B,IAbnC,KAeSC,sBAAgC,IAfzC,KAiBSC,WAAmE,CACxEC,YAAa,QACbC,UAAW,EACXC,QAAS,EACTC,QAAS,GArBb,KAwBSC,UAAoB,GAGhBC,EAAb,2MACEhB,gBAAkBiB,IADpB,EAEEf,kBAAoB,SAFtB,EAGEC,iBAAmB,aAHrB,EAKEE,WAAa,kBALf,EAMEC,YAAc,SANhB,EAQEF,gBAAkB,IARpB,6BAAiCL,GAWpBmB,GAAb,2MACElB,gBAAkBiB,IADpB,EAEEf,kBAAoB,UAFtB,EAGEC,iBAAmB,kBAHrB,EAKEE,WAAa,kBALf,EAMEC,YAAc,UANhB,EAOEE,gBAAkB,KAPpB,6BAA+BT,GAUlBoB,GAAb,2MACEnB,gBAAkBiB,IADpB,EAGEhB,qBAAuB,IAHzB,EAIEC,kBAAoB,UAJtB,EAKEC,iBAAmB,eALrB,EAMEC,gBAAkB,KANpB,EAQEC,WAAa,kBARf,EASEC,YAAc,UAThB,EAUEE,gBAAkB,KAVpB,6BAA+BT,GAalBqB,GAAb,2MACEpB,gBAAkBiB,IADpB,EAGEhB,qBAAuB,IAHzB,EAIEC,kBAAoB,QAJtB,EAKEC,iBAAmB,YALrB,EAOEE,WAAa,WAPf,EAQEC,YAAc,QARhB,EAUEF,gBAAkB,KAVpB,EAWEI,gBAAkB,IAXpB,6BAAiCT,GAcpBsB,GAAb,2MACErB,gBAAkBiB,IADpB,EAGEhB,qBAAuB,IAHzB,EAIEC,kBAAoB,QAJtB,EAKEC,iBAAmB,YALrB,EAOEE,WAAa,WAPf,EAQEC,YAAc,OARhB,EAUEF,gBAAkB,KAVpB,EAWEI,gBAAkB,IAXpB,EAaEE,WAAa,CACX,CACEC,YAAa,SACbC,UAAW,GACXC,QAAS,EACTC,QAAS,GAEX,CACEH,YAAa,OACbC,UAAW,EACXC,QAAS,EACTC,QAAS,IAxBf,EA4BEC,UAAW,EA5Bb,6BAA+BhB,GC5ETuB,GAAtB,WACE,WAAoBC,GAAmB,yBAAnBA,UADtB,uDAqBuBC,EAAmBC,GACtC,MAAM,GAAN,OAAUzF,KAAK0F,WAAWF,GAA1B,cAA0CC,KAtB9C,iCAyBuBE,GACnB,OAAOjC,KAAKkC,MAAMD,EAAgB3F,KAAKoC,OAAOU,KA1BlD,sCA6B4B+C,GACxB,OAAOA,EAAEC,MAAM,EAAGD,EAAEE,OAAS,KA9BjC,2CAqEmD,IAAD,uBAAhBC,EAAgB,yBAAhBA,EAAgB,gBAC9C,IAAMC,EAAWD,EAAKE,QAAO,SAACC,EAAMC,GAAP,OAAeD,EAAOC,IAAK,IAClDC,EAAUrG,KAAK+C,IAAIuD,YAAYL,GAC/BM,EAAgC,EAAlBvG,KAAKwG,WACzB,OAAO9C,KAAKC,KAAK0C,EAAQ1E,OAAS4E,IAzEtC,sCA6EIvG,KAAK+C,IAAI0C,KAAOzF,KAAKyG,WACnBzG,KAAK0G,MAAMlC,gBACXxE,KAAK0G,MAAMrC,cA/EjB,oCAoFI,IAAMsC,EAAkB,GAClBvE,EAASpC,KAAKoC,OACpBpC,KAAK4G,gBAEL,IAAIC,EAAc,GALI,uBAMtB,YAAmB7G,KAAKoC,OAAO0E,YAA/B,+CAA4C,CAAC,IAApCC,EAAmC,QACxB/G,KAAKgH,mBAAmBH,EAAaE,GACvC/G,KAAKiH,gBACnBN,EAAMO,KAAKlH,KAAKmH,gBAAgBN,IAChCA,EAAcE,EAAS3E,EAAOgF,iBAGhCP,EAAcA,EAAcE,EAAS3E,EAAOgF,iBAbxB,kFAgBtB,MADoB,KAAhBP,GAAoBF,EAAMO,KAAKlH,KAAKmH,gBAAgBN,IACjDF,IAnGX,sCAsGyBU,GAAiD,IAAD,OAC/DtE,EAAM/C,KAAKoC,OAAOkF,UAClBC,EAAUF,GAAqBrH,KAAKwH,UACpCb,EAAQ3G,KAAKyH,cAEnB1E,EAAI2E,aAAe,MACnB3E,EAAI4E,UAAY,SAChB5E,EAAI6E,UAAY5H,KAAK0G,MAAMpC,YAE3B,IAAMuD,EAAK7H,KAAK0F,WAAW1F,KAAK0G,MAAMlC,iBAClCsD,EAAoB,EACxBnB,EAAMoB,SAAQ,SAACC,EAAMC,GACnBH,EAAYP,GAAWU,EAAI,GAAKJ,EAChC,EAAKK,YAAYF,EAAMF,MAGzB,IAAMK,EAASL,EAAYD,EAE3B,MAAO,CACLO,IAAKb,EACLY,SACAhH,OAAQgH,EAASZ,KA3HvB,uCAgIIvH,KAAK+C,IAAIe,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,KAhIzC,6BAmIgBuE,EAAaC,EAAWC,EAAWC,GAAoB,IAC3D9D,EAAe1E,KAAK0G,MAApBhC,WACR,GAAKA,EAAL,CACA,IAAM3B,EAAM/C,KAAK+C,IACX6E,EAAY7E,EAAI6E,UAChBhD,EAAY7B,EAAI6B,WAEH6D,MAAMC,QAAQhE,GAAcA,EAAa,CAACA,IAElDqD,SAAQ,SAAAY,GACjB5F,EAAI4B,YAAcgE,EAAGhE,YACrB5B,EAAI6B,UAAY+D,EAAG/D,UACnB7B,EAAI6F,WAAWP,EAAKC,EAAIK,EAAG9D,QAAS0D,EAAII,EAAG7D,QAAS0D,MAGtDzF,EAAI6B,UAAYA,EAChB7B,EAAI6E,UAAYA,KAnJpB,gCAuJQ5H,KAAK0G,MAAM3B,UAAU/E,KAAK+C,IAAI8F,UAAU,EAAG,IAAM,IAAM,GAAI,GAAI,KAvJvE,kCA0JqBR,EAAaD,GAC9B,IAAMrF,EAAM/C,KAAK+C,IACjBA,EAAI4E,UAAY,SAChB3H,KAAK8I,OAAOT,EAAKrI,KAAK+I,KAAMX,EAAKpI,KAAKiH,gBACtClE,EAAIiG,SAASX,EAAKrI,KAAK+I,KAAMX,EAAKpI,KAAKiH,kBA9J3C,gCAiKmBoB,EAAaD,GAC5B,IAAMrF,EAAM/C,KAAK+C,IACjBA,EAAI4E,UAAY,OAChB3H,KAAK8I,OAAOT,EAAKrI,KAAKwG,WAAY4B,EAAKpI,KAAKiH,gBAC5ClE,EAAIiG,SAASX,EAAKrI,KAAKwG,WAAY4B,EAAKpI,KAAKiH,kBArKjD,iCAwKoBoB,EAAaD,GAC7BpI,KAAK+C,IAAI4E,UAAY,QACrB3H,KAAK8I,OACHT,EACArI,KAAKiJ,YAAcjJ,KAAKwG,WACxB4B,EACApI,KAAKiH,gBAEPjH,KAAK+C,IAAIiG,SACPX,EACArI,KAAKiJ,YAAcjJ,KAAKwG,WACxB4B,EACApI,KAAKiH,kBApLX,yCAyLI,IAAMlE,EAAM/C,KAAKoC,OAAOkF,UACxBvE,EAAI0C,KAAOzF,KAAKyG,WACdzG,KAAK0G,MAAMjC,sBACXzE,KAAK0G,MAAMvC,kBAEbpB,EAAI6E,UAAY5H,KAAK0G,MAAMxC,kBAC3BnB,EAAI2E,aAAe,MACnB3E,EAAI4E,UAAY,SAChB5E,EAAI4B,YAAc,QAClB5B,EAAI6B,UAAY,EAEhB5E,KAAKkI,YAAYlI,KAAKoC,OAAO8G,aAAclJ,KAAKmJ,mBApMpD,2BAGoB/G,GAChBpC,KAAKuF,QAAUnD,GAJnB,eAQI,IAAKpC,KAAKuF,QACR,MAAM,IAAItF,MAAM,4CAClB,OAAOD,KAAKuF,UAVhB,0BAcI,OAAOvF,KAAKoC,OAAOkF,YAdvB,4BAkBI,OAAOtH,KAAKoC,OAAOsE,QAlBvB,2BAkCI,OAAOhD,KAAKkC,MAAM5F,KAAKiJ,YAAc,KAlCzC,2BAsCI,OAAOvF,KAAKkC,MAAM5F,KAAKoJ,aAAe,KAtC1C,kCA0CI,OAAOpJ,KAAKoC,OAAOS,IA1CvB,qCA8CI,OAAO7C,KAAKiJ,YAAgC,EAAlBjJ,KAAKwG,aA9CnC,mCAkDI,OAAOxG,KAAKoC,OAAOU,IAlDvB,sCAsDI,OAAO9C,KAAKoJ,eAtDhB,iCA0DI,OAAO1F,KAAKC,KAAK3D,KAAK0G,MAAMtC,gBAAkBpE,KAAKiJ,eA1DvD,sCA8DI,OAAOvF,KAAKkC,MAAM5F,KAAK0G,MAAMzC,qBAAuBjE,KAAKoJ,gBA9D7D,gCAkEI,OAAOpJ,KAAKoJ,aAAepJ,KAAK0G,MAAMnC,mBAlE1C,KAwMa8E,GAAb,sIAAiC/D,IACpBgE,GAAb,kLAEItJ,KAAK+C,IAAI0C,KAAOzF,KAAKyG,WACU,EAA7BzG,KAAK0G,MAAMlC,gBACXxE,KAAK0G,MAAMrC,cAJjB,mCASIrE,KAAK+C,IAAI0C,KAAOzF,KAAKyG,WACnBzG,KAAK0G,MAAMlC,gBACXxE,KAAK0G,MAAMrC,cAXjB,sCAekBgD,GAAiD,IAAD,OAC9DrH,KAAKuJ,UACL,IAAM5C,EAAQ3G,KAAKyH,cACb+B,EAAW9F,KAAKC,KAAKgD,EAAMZ,OAAS,GACpC0D,EAAY9C,EAAMb,MAAM,EAAG0D,GAC3BE,EAAY/C,EAAMb,MAAM0D,EAAqB,EAAXA,GAClCG,EAAYhD,EAAMb,MAAiB,EAAX0D,GAE9BxJ,KAAK+C,IAAI2E,aAAe,SACxB1H,KAAK+C,IAAI6E,UAAY5H,KAAK0G,MAAMpC,YAEhC,IAAMuD,EAAK7H,KAAK0F,WAAW1F,KAAK0G,MAAMlC,iBAChCoF,EAAWvC,GAAqBrH,KAAKwH,UACrCqC,EAAYD,EAAW/B,EACzBC,EAAY8B,EAkChB,OAhCA5J,KAAK8J,UACL9J,KAAK+J,UAAU,SAAUjC,GACzB9H,KAAKqE,aAELoF,EAAU1B,SAAQ,SAACC,EAAMC,GACvBH,GAAaD,EACb,EAAKkC,UAAU/B,EAAMF,MAGvBA,GAA6B,EAALD,EAExB7H,KAAK8J,UACL9J,KAAKgK,WAAW,WAAYlC,GAC5B9H,KAAKqE,aAELqF,EAAU3B,SAAQ,SAACC,EAAMC,GACvBH,GAAaD,EACb,EAAKmC,WAAWhC,EAAMF,MAGxBA,GAA6B,EAALD,EACxB7H,KAAK+C,IAAI4E,UAAY,OAErB3H,KAAK8J,UACL9J,KAAK+J,UAAU,SAAUjC,GACzB9H,KAAKqE,aACLsF,EAAU5B,SAAQ,SAAAC,GAChBF,GAAaD,EACb,EAAKkC,UAAU/B,EAAMF,MAGvB9H,KAAKiK,iBACE,CACL7B,IAAKyB,EACL1B,OAAQL,EACR3G,OAAQ2G,EAAY+B,OAlE1B,GAAmCvE,I,6BClNtB4E,GAAmB,0BACnBC,GAAkB,KAwETC,GAAtB,WACE,WAAmBC,GAAiB,yBAAjBA,SADrB,+DAeIC,GAfJ,kGAiB4BtK,KAAKuK,kBAAkBD,IAjBnD,aAiBUE,EAjBV,kBAkB6B7K,GAlB7B,yCAkB8C6K,GAlB9C,gCAmBWC,GAAyBD,IAnBpC,qFAsB6BE,GAtB7B,6GAwBwBC,MAAMD,IAxB9B,cAwBYE,EAxBZ,0BAyByBC,GAAeD,EAAKF,IAzB7C,cAyBYI,EAzBZ,yBA0BaA,GA1Bb,mIAiCaC,GAAb,uLAEI,OAgJFC,EAhJmChL,KAAKqK,OA+InC,EAAAY,EAAAC,OAAA,yEAGEC,GAAiBH,EAAa,CAAC,KAAM,eAHvC,yCACLA,IAlJF,wCAK2BV,GACvB,OAoJG,SACLU,EACAI,GAFK,eAAAH,EAAAC,OAAA,kEAAAD,EAAA,MAIaE,GAChBH,EACA,CAAC,YAAaI,EAAa,YANxB,aAICR,EAJD,kBAScjL,GATd,yCAS+BiL,GAT/B,gCAUEA,EAAIS,KAAI,SAAAC,GAAmB,OAAIA,EAAoBC,UAVrD,qCApJIC,CAA0BxL,KAAKqK,OAAQC,KANlD,sHAUWmB,GAAUzL,KAAKqK,SAV1B,8NAkBM,GAlBN,IAeIqB,aAfJ,MAeY,KAfZ,MAgBIC,cAhBJ,MAgBa,IAhBb,MAiBIC,kBAjBJ,MAiBiB,cAjBjB,qBAmBuBT,GACjBnL,KAAKqK,OACL,CAAC,KAAM,MAAO,WACd,CAAEqB,QAAOC,SAAQC,gBAtBvB,cAmBUC,EAnBV,yBAwBWA,GAxBX,sDAAyCzB,IA4B5B0B,GAAb,sQAEUpB,EAAMqB,GAAO,QAAS/L,KAAKqK,OAAQ,aAF7C,mBAGiBrK,KAAKgM,cAActB,IAHpC,iIAMiCJ,GANjC,+EAOUI,EAAMqB,GAAO,YAAa/L,KAAKqK,OAAQ,UAPjD,mBAQiBrK,KAAKgM,cAActB,IARpC,mMAYUA,EAAMqB,GAAO,QAAS/L,KAAKqK,QAZrC,mBAaiBrK,KAAKgM,cAActB,IAbpC,8FAAsCN,IAkC/B,SAAS2B,KAAwC,IAAD,uBAA7BE,EAA6B,yBAA7BA,EAA6B,gBACrD,IACIC,EADM,CAAI/B,IAAJ,OAAwB8B,GACNE,KAAK,KACjC,OAAO,IAAIC,IAAIF,EAAgBhC,IAAkBmC,KAG5C,SAAexB,GAAeD,EAAeF,GAA7C,eAAAO,EAAAC,OAAA,mDACAN,EAAI0B,GADJ,mBAEgB,MAAf1B,EAAI2B,OAFL,yCAGM,IAAI5M,EAAJ,wBACY+K,EADZ,6CACoDE,EAAI2B,QAC7D,oBALD,gCAOI,IAAI5M,EAAJ,wBACY+K,EADZ,6CACoDE,EAAI2B,QAC7D,oBATC,UAYc,MAAf3B,EAAI2B,OAZH,yCAaI,IAAI5M,EAAJ,wBACY+K,EADZ,iCACwCE,EAAI2B,QACjD,oBAfC,kCAAAtB,EAAA,MAmBcL,EAAIE,QAnBlB,cAmBCA,EAnBD,yBAoBIA,GApBJ,0HA0BA,SAAe0B,GACpBC,EACA/B,GAFK,iBAAAO,EAAAC,OAAA,uDAICwB,EAAU,CACdC,cAAc,UAAD,OAAYF,IALtB,oBAAAxB,EAAA,MASSN,MAAMD,EAAK,CAAEgC,aATtB,cASH9B,EATG,yBAUIC,GAAeD,EAAKF,IAVxB,uHAiBP,SAASkC,GAAoBC,GAC3B,IAAKA,EAAa,MAAO,GACzB,IAAMC,EAAM,IAAIC,gBAChB,IAAK,IAAMC,KAAKH,EACdC,EAAIG,OAAOD,EAAGH,EAAYG,IAE5B,OAAOF,EAAII,WAGb,SAAe/B,GACbH,EACAmC,EACAC,GAHF,mBAAAnC,EAAAC,OAAA,uDAKQmC,EAAWT,GAAoBQ,GAC/B1C,EAAMqB,GAAM,WAAN,eAAUoB,GAAV,mBAAyBE,MANvC,WAAApC,EAAA,MAOqBuB,GAAaxB,EAAaN,IAP/C,aAOQmB,EAPR,kBAQsBlM,GARtB,yCAQuCkM,GARvC,UASOA,EAAKyB,eAAe,SAT3B,sBAUU,IAAI3N,EAAJ,qEAC0D+K,IAXpE,gCAcSmB,EAAK0B,OAdd,sCAiBO,SAAe9B,GACpBT,GADK,iBAAAC,EAAAC,OAAA,uDAGCR,EAAMqB,GAAO,MAHd,WAAAd,EAAA,MAIcuB,GAAaxB,EAAaN,IAJxC,cAICmB,EAJD,yBAKEA,GALF,qCA8BA,SAASpB,GACd+C,GAEA,IAAIC,EAAa,IAAIC,IAIrB,OAHAF,EAAOzF,SAAQ,SAAAwD,GACbkC,EAAWE,IAAIpC,EAAMhK,QAAQ,GAAG1B,SAE3B,aAAI4N,GCtRN,SAASG,KAEc,IAAD,ECHtB,WAA0B,IAAD,EACNC,mBAAS,CAAC,EAAG,IADP,mBACvBC,EADuB,KACjBC,EADiB,KAU9B,OARAC,2BAAgB,WACd,SAASC,IACPF,EAAQ,CAAC3M,OAAO8M,WAAY9M,OAAOC,cAIrC,OAFAD,OAAO+M,iBAAiB,SAAUF,GAClCA,IACO,kBAAM7M,OAAOgN,oBAAoB,SAAUH,MACjD,IACIH,EDNQO,GADY,mBACpBxL,EADoB,KACjBC,EADiB,OAEH+K,wBAA8BS,GAF3B,mBAEpBC,EAFoB,KAEdC,EAFc,KAGrBC,EAAMC,iBAAU,MACdC,EAAYF,EAAZE,QAMR,OAJAC,qBAAU,WACR,IAAML,EAAI,OAAGI,QAAH,IAAGA,OAAH,EAAGA,EAASE,wBACtBL,EAAQD,KACP,CAACI,EAAS9L,EAAGC,IACT,CAACyL,EAAME,GEbT,IAAMK,GAAa,WACxB,OAAOpL,KAAKkC,MAAMmJ,KAAKC,MAAQ,MCkBlBC,GAfe,WAC5B,IAAMjE,EAAcxI,GAAiB,SAAAqD,GAAC,OAAIA,EAAEvD,OAAOjC,sBAC7C6O,EAAS1M,GAAiB,SAAAqD,GAAC,OAAIA,EAAEvD,OAAOhC,4BAC9C,GAAoB,KAAhB0K,GAAiC,KAAXkE,EAAe,MAAO,CAAE3C,OAAQ,QAC1D,GAAoB,KAAhBvB,GAAiC,KAAXkE,EACxB,MAAM,IAAIjP,MAAM,gDAGlB,OADmBkP,SAASD,EAAQ,IACnBJ,KAAqB,CAAEvC,OAAQ,WACzC,CACLA,OAAQ,QACRvB,gB,wECGWoE,GAhBoB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,6BACvDC,EAAQD,EAAMC,MAAQD,EAAMC,MAAQ,UACpCzB,EAAOwB,EAAMxB,KAAOwB,EAAMxB,KAAO,KAOvC,OACE,kBAAC,KAAD,eAAUyB,MAAOA,EAAOzB,KAAMA,EAAM0B,QANlB,SAAC/P,GAA4C,IAAD,EAC9DA,EAAEgQ,kBACF,UAAAH,EAAME,eAAN,cAAAF,EAAgB7P,KAI8C6P,GAC3DD,I,MCJA,SAASK,GACdjQ,EACAkQ,EACAC,GAEAnQ,EAAEoQ,iBACFD,EAAQD,GAWV,IAqHeG,GArHQ,SAAC,GAQjB,IAPLC,EAOI,EAPJA,UACAC,EAMI,EANJA,eACAL,EAKI,EALJA,KACAM,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACGC,EACC,gGAC4BvC,mBAAS8B,EAAK9D,MAD1C,mBACGwE,EADH,KACaC,EADb,KAGFC,EAGEH,EAHFG,aACAC,EAEEJ,EAFFI,WACuBC,EACrBL,EADFM,sBAEIC,EAAUP,EAAUQ,eAAiBjB,EAAKgB,SAAWH,EACrDK,KAAeT,EAAUS,YAAaN,GACtCO,KAAeV,EAAUU,gBAA8BxC,IAAjBmC,GACtCM,IAAepB,EAAKoB,WA4F1B,OAAId,EAxFA,kBAACe,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,MAAOd,EACPxM,MAAO,CACLuN,QAAS,UAEXC,SAAU,SAAA5R,GACR6Q,EAAY7Q,EAAE6R,OAAOH,UAIzB,kBAACI,GAAA,EAAD,CAAiBC,UAAU,UACzB,kBAAC,GAAD,CACEhC,QAAS,SAAA/P,GACP,IAAK+Q,EACH,MAAMvQ,MAAM,8CACdyP,GACEjQ,EACAgS,GAAkB9B,EAAM,CAAE9D,KAAMwE,IAChCG,GAEFF,EAAY,IACZJ,GAAa,KAVjB,SAgBF,kBAACqB,GAAA,EAAD,CAAiBC,UAAU,UACzB,kBAAC,GAAD,CACEjC,MAAM,SACNC,QAAS,SAAA/P,GACP6Q,EAAY,IACZJ,GAAa,KAJjB,QAwCQ,WAChB,IAAMwB,EAASZ,GAAaC,EAC5B,OACE,kBAACC,GAAA,EAAD,CACEW,IAAKhC,EAAKiC,GACVhR,OAAQkQ,EACRY,OAAQA,EACRG,UAAU,kEACVrC,QAAS,SAAA/P,GAAC,uBAAI2Q,EAAUM,6BAAd,aAAI,OAAAN,EAAkCT,KAE1B,kBAAdI,GAAP,UAAoCA,EAAY,EAAhD,MACAI,EAAWR,EAAK9D,MAlCnB,kBAACiG,GAAA,EAAD,KACGnB,GAAWH,GACV,kBAAC,GAAD,CACEuB,SAAU/B,EACVR,QAAS,SAAA/P,GAAC,OAAIyQ,GAAa,KAF7B,QAODW,GAAaN,GACZ,kBAAC,GAAD,CACEwB,SAAU/B,EACVR,QAAS,SAAA/P,GACPiQ,GAAkBjQ,EAAGkQ,EAAMY,KAH/B,WA0BDmB,EAAS,SAAM,UAQbM,I,SCpHPC,IAAO,EACLC,GAAa,WAEjB,QADAD,IAIK,SAASR,GACdU,EACAC,GAEA,OAAO,cACLR,GAAIM,MACDC,EAFL,GAGKC,GAsEA,SAASC,GACdC,EACAC,EACAC,GAEA,MAAO,CACLjC,aAAc,SAAAkC,GAAa,IAAD,EACxBH,GAAO,SAAAI,GACL,OAAOA,EAASC,QAAO,SAAA1K,GAAC,OAAIA,EAAE2J,KAAOa,EAASb,SAEhC,OAAhBW,QAAgB,IAAhBA,GAAA,UAAAA,EAAkBhC,oBAAlB,cAAAgC,EAAiCE,IAEnCG,aAAc,SAAAC,GAAc,IAAD,IACnBT,GAA2B,OAAjBI,QAAiB,IAAjBA,OAAA,YAAAA,EAAmBM,cAAnB,oBAAAN,EAA4BK,KAAcA,EAC1DP,GAAO,SAAAI,GACL,MAAM,GAAN,oBAAWA,GAAX,CAAqBN,OAEP,OAAhBG,QAAgB,IAAhBA,GAAA,UAAAA,EAAkBK,oBAAlB,cAAAL,EAAiCH,IAEnC5B,WAAY,SAAAuC,GAAe,IAAD,EACxBT,GAAO,SAAAI,GACL,IAAMM,EAAQ,aAAON,GACjBO,EAAaD,EAASE,MAAK,SAAAjL,GAAC,OAAIA,EAAE2J,KAAOmB,EAAWnB,MACxD,IAAKqB,EACH,MAAM,IAAIhT,MAAJ,sCAC2BkT,KAAKC,UAAUL,KAGlD,OADAE,EAAWpH,KAAOkH,EAAWlH,KACtBmH,KAEO,OAAhBT,QAAgB,IAAhBA,GAAA,UAAAA,EAAkB/B,kBAAlB,cAAA+B,EAA+BQ,IAEjCrC,sBAAuB,SAAA2C,GACrBf,GAAO,SAAAI,GACL,OAAO7R,YAAQ6R,GAAU,SAAAY,GAAU,IAAD,EAC1BrL,EAAIqL,EAAMC,WAAU,SAAAtL,GAAC,OAAIA,EAAE2J,KAAOyB,EAAazB,MACrD0B,EAAMrL,GAAG8I,YAAcsC,EAAatC,WACpB,OAAhBwB,QAAgB,IAAhBA,GAAA,UAAAA,EAAkB7B,6BAAlB,cAAA6B,EAA0Ce,EAAMrL,WAItDuL,gBAAiB,WACflB,GAAO,SAAAI,GACL,IAAIM,EAAWN,EAASrH,KAAI,SAAApD,GAC1B,OAAO,gBAAKA,EAAZ,CAAe8I,YAAY,OAEvB0C,EAAW,OAAGjB,QAAH,IAAGA,OAAH,EAAGA,EAAmBkB,UAIvC,OAHID,IACFT,EAAWS,EAAYT,IAElBA,MAGXW,YAAa,WACXrB,GAAO,SAAAI,GACL,IAAIM,EAAWN,EAASrH,KAAI,SAAApD,GAC1B,OAAO,gBAAKA,EAAZ,CAAe8I,YAAY,OAEvB6C,EAAO,OAAGpB,QAAH,IAAGA,OAAH,EAAGA,EAAmBqB,MAInC,OAHID,IACFZ,EAAWY,EAAQZ,IAEdA,OAkCf,IC3KIc,GD6TWC,GAlJM,SAAAzE,GAAU,IAAD,EACUzB,oBAAS,GADnB,mBACrBmG,EADqB,KACRC,EADQ,OAEQpG,mBAAS,IAFjB,mBAErBqG,EAFqB,KAETC,EAFS,OAGMtG,oBAAS,GAHf,mBAGrBoC,EAHqB,KAGVC,EAHU,KAIpB3C,EAAU+B,EAAV/B,MACF6G,EAAe9E,EAAMwB,WAAaxB,EAAMkE,gBACxCa,EAAW/E,EAAMwB,WAAaxB,EAAMqE,YAEpCW,EAAe,WAAO,IAClB1B,EAA4BtD,EAA5BsD,aAAc2B,EAAcjF,EAAdiF,UACtB,OAAM3B,GAAgB2B,EAClBP,EAEA,6BACE,kBAAChD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,MAAO+C,EACP7C,SAAU,SAAA5R,GAAC,OAAI0U,EAAc1U,EAAE6R,OAAOH,UAExC,kBAACW,GAAA,EAAD,KACE,kBAAC,GAAD,CACEtC,QAAS,WACP,IAAM4C,EAAUX,GACd,CACE5F,KAAMqI,EACNM,WAAW,EACXzD,YAAY,GAEd,IAEFkD,GAAe,GACfrB,EAAaR,GACb+B,EAAc,MAZlB,QAiBA,kBAAC,GAAD,CACE5E,MAAM,SACNC,QAAS,WACPyE,GAAe,GACfE,EAAc,MAJlB,SAgBV,kBAACnD,GAAA,EAAD,KACE,kBAAC,GAAD,CACEyD,OAAK,EACL1C,SAAU9B,EACVT,QAAS,kBAAMyE,GAAe,KAHhC,YA7CqC,MA6FrCS,EAAe,WACnB,OACE,yBACE7C,UAAU,eACVhO,MAAO,CACLuN,QAAS,OACTuD,eAAgB,kBAGjBrF,EAAMzP,KAAO,4BAAKyP,EAAMzP,MAAa,KA9ClB,WACxB,IAAI6T,EAAY,KACZG,EAAQ,KAyBZ,OAxBIO,IACFV,EACE,kBAAC,GAAD,CACEnE,MAAM,UACNC,QAAS,SAAA/P,GAAM,IAAD,EACZ,UAAA6P,EAAMkE,uBAAN,cAAAlE,KA1QM,eAiRV+E,IACFR,EACE,kBAAC,GAAD,CACEtE,MAAM,UACNC,QAAS,SAAA/P,GAAM,IAAD,EACZ,UAAA6P,EAAMqE,mBAAN,cAAArE,KArRE,iBA6RR,yBAAKuC,UAAU,iBACb,kBAACC,GAAA,EAAD,KACG4B,EACAG,IAgBFe,KA8BP,OAAO,yBAAK/C,UAAU,QAzBtB,WACE,IAAMgD,EAAOtH,EAAMlC,KAAI,SAACsE,EAAM1H,GAC5B,IAAM8H,EAAYT,EAAMwF,WAAa7M,OAAIqG,EACzC,OACE,kBAAC,GAAD,eACEqD,IAAKhC,EAAKiC,GACVjC,KAAMA,EACNO,aAAcA,EACdD,UAAWA,EACXD,eAAgBgE,EAChBjE,UAAWA,GACPT,OAIV,OACE,yBAAKuC,UAAU,QACZ6C,IACD,kBAACK,GAAA,EAAD,KACGF,EACAP,MAKqBU,KEpVnBC,GAAc,WAEzB,IAAMC,EAAWC,cAUjB,OARYC,uBACV,SAAC3V,EAAUC,GAELA,IAAOD,EAAUC,KAAOA,GAC5BwV,EAASlU,EAAkBvB,MAE7B,CAACyV,KAKQG,GAAY,WAIvB,OAHYD,uBAAY,SAACvJ,GACvByJ,QAAQC,IAAI1J,KACX,KCRQ2J,GAAgB,WAC3B,IAAMC,EAAYxG,KACZyG,EAAOT,KACTjK,EAAc,GACO,SAArByK,EAAUlJ,QAA0C,YAArBkJ,EAAUlJ,OAI3CmJ,EAHU,IAAI/V,EAAJ,0DAC2C8V,EAAUlJ,SAEvD,mBAERvB,EAAcyK,EAAUzK,YAO1B,OALkB2K,mBAAQ,WACxB,MAAoB,KAAhB3K,EAA2B,KV8H5B,SACL4K,GACoB,IACZC,EAAsBD,EAAtBC,UAAWC,EAAWF,EAAXE,OACnB,OAAID,GAA2B,KAAdA,EACR,IAAI9K,GAAoB8K,GACtBC,GAAqB,KAAXA,EACZ,IAAIhK,GAAiBgK,GAErB,KUtIAC,CAAkB,CAAEF,UAAW7K,MACrC,CAACA,KAgBFgL,GAAQ,ECtCNC,GAAwB,cAuJxBC,G,sIAnJN,WAaE,WACYC,EACHzP,EACG0P,GACT,yBAHSD,KAGV,KAFOzP,QAEP,KADU0P,SACV,KAhBKC,YAgBL,OAfK/O,eAeL,OAdQgP,GAAa,EAcrB,KAbQC,GAAa,EAarB,KAZKC,SAYL,OAXQC,iBAA2B,EAWnC,KATQC,iBAA2BT,GASnC,KARQU,iBAAyB,QAQjC,KANQC,WAAmB,QAX/B,0DAyBuB/T,EAAWC,GAC9B9C,KAAKsW,GAAK5S,KAAKkC,MAAM/C,GACrB7C,KAAKuW,GAAK7S,KAAKkC,MAAM9C,KA3BzB,2BAkEuBF,EAAwBiU,GAlE/C,mFAmEUxS,EAAa,IAAIyS,KAAiB9W,KAAK0G,MAAMrC,YAC7C0S,EAAW,IAAID,KAAiB9W,KAAK0G,MAAMvC,kBAE3C6S,EAAU,CAAC3S,EAAW4S,OAAQF,EAASE,QACzCJ,GAAgBG,EAAQ9P,KAAKlH,KAAKkX,aAvE1C,mBAwEUlX,KAAKkX,aAxEf,0CA2EYC,QAAQC,IAAIJ,IA3ExB,yDA6EM1B,QAAQ/U,MAAR,MA7EN,sFAiFoBqC,GAjFpB,2FAiF4CyU,IAjF5C,iCAkFI1U,EAAkBC,EAAK5C,KAAK6C,EAAG7C,KAAK8C,GAlFxC,mBAmFU9C,KAAKiX,KAAKrU,EAAKyU,IAnFzB,cAqFIrX,KAAKyW,gBAAkBY,EACvBrX,KAAKqW,OAASzT,EACd5C,KAAKsH,UAAYgQ,EAAOtU,WAAWhD,KAAKqW,QACxCrW,KAAKoW,OAAOhU,OAASpC,KAxFzB,oBAyFUA,KAAKuX,SAzFf,oNAgGM,GAhGN,IA6FIF,sBA7FJ,aA8FIG,uBA9FJ,aA+FIC,wBA/FJ,SAiGIzX,KAAK6T,SACDwD,IAAkBrX,KAAKyW,gBAlG/B,0CAmGYzW,KAAKqX,eAAerX,KAAKqW,SAnGrC,UAoGQoB,GAAkBzX,KAAKoW,OAAOqB,oBAC9BD,EArGR,0CAqG+BxX,KAAKwX,mBArGpC,4KAyGuBxX,KAAKoW,OAAOoB,kBAAvBrP,EAzGZ,EAyGYA,OACAuP,EAAoB1X,KAAKoW,OAAzBsB,kBACJvP,GAAUuP,GA3GlB,wDA4GUC,EAAS3X,KAAKoW,OAAO5O,WAAaW,EAASuP,GA5GrD,mBA6GU1X,KAAKuX,MAAM,CAAEC,iBAAiB,KA7GxC,OA8GIxX,KAAKoW,OAAOoB,gBAAgBG,GA9GhC,+EAkHI3X,KAAKsH,UAAUsQ,UAAU,EAAG,EAAG5X,KAAK6C,EAAG7C,KAAK8C,KAlHhD,sCAsHIF,EACAiV,GAvHJ,qEAyHIlV,EAAkBC,EAAK5C,KAAK6C,EAAG7C,KAAK8C,IAChC+U,EA1HR,0CA0HgC7X,KAAKqX,eAAeQ,IA1HpD,iCA2HU7X,KAAK8X,KAAKlV,GAAK,IA3HzB,kHA+HyBmV,EAAmBC,GA/H5C,oFAgIIhY,KAAKwW,IAAM,IAAIyB,MAAMF,EAAUC,GAhInC,kBAiIW,IAAIb,SAAQ,SAAAe,GACjB,EAAK1B,IAAI2B,OAAS,WAChBD,KAEF,EAAK1B,IAAI4B,IAAM,EAAK1R,MAAM1C,oBArIhC,sFAyI8BpB,GAzI9B,iFA0IID,EAAkBC,EAAK5C,KAAK6C,EAAG7C,KAAK8C,GA1IxC,mBA2IU9C,KAAKkX,aA3If,OA4IUa,EAAW/X,KAAKwW,IAAI6B,aACpBL,EAAYhY,KAAKwW,IAAI8B,cACfhB,EAAOtU,WAAWJ,GAC1B2V,UAAUvY,KAAKwW,IAAK,EAAG,EAAGuB,EAAUC,EAAW,EAAG,EAAGhY,KAAK6C,EAAG7C,KAAK8C,GA/I1E,yEA+BI,OAAO9C,KAAKsW,KA/BhB,wBAmCI,OAAOtW,KAAKuW,KAnChB,sCAuCI,OAAOiC,OAAOC,aAAa,QAvC/B,mCA2CI,MAAiC,UAA1BzY,KAAK2W,iBACR3W,KAAK0W,iBAAiBgC,cACtB1Y,KAAK0W,mBA7Cb,iCAgD0BiC,GACjBA,EAIL3Y,KAAK0W,iBAxDoB,UAwDoBiC,EAxDpB,SAqDvB3Y,KAAK0W,iBAAmBT,KAlD9B,kCAwD4B,IAAD,OAOvB,OANcjW,KAAKmW,GAAG5U,QAAQoR,QAAO,SAAA1H,GAAC,OAAIA,EAAE8F,cAChB1F,KAAI,SAAAJ,GAAM,IAC9BpL,EAASoL,EAAEY,KAAXhM,KAEN,MADwB,UAApB,EAAK+W,aAAwB/W,EAAOA,EAAK6Y,eACtC7Y,QA7Db,kCAmB8B+C,GAC1B,IAAMG,EAAMH,EAAII,WAAW,MAC3B,IAAKD,EAAK,MAAM,IAAIpD,EAAS,2BAC7B,OAAOoD,MAtBX,MA8Ja6V,GAAY,WACvB,IAAMtX,ED9Ea,WACnB,IAAMA,EAAKkB,GAAiB,SAAAqD,GAAC,OAAIA,EAAEzD,OAAOd,MACpCuX,EAAMrD,KACNN,EAAWC,cACXI,EAAMF,KACNK,EAAOT,KAsBb,OApBArG,qBAAU,WAgBHiK,GAfa,mBAAA5N,EAAAC,OAAA,mDACX2N,EADW,sBACA,IAAI5Y,MAAM,gBADV,cAEhBsV,EAAI,sCAFY,oBAAAtK,EAAA,MAKC4N,EAAIvX,MALL,OAKdwX,EALc,8DAOdpD,EAAK,EAAD,IAPU,8BAUXoD,EAVW,uBAUG,IAAI7Y,MAAM,oBAVb,aAWZ6Y,aAAkB7Y,OAXN,uBAYR,IAAIA,MAAM,+BAZF,QAahBiV,EAASlT,EAAa8W,IAbN,wDAgBlBC,KACC,CAACF,EAAK3D,EAAUQ,EAAMH,IAElBjU,ECmDI0X,GACLtS,EbzDsB,WAC5B,IAAMhF,EAAYc,GAAiB,SAAAqD,GAAC,OAAIA,EAAEzD,OAAOV,aAiBjD,OAhBkBiU,mBAAQ,WACxB,OAAQjU,GACN,IAAK,OACH,OAAO,IAAIwD,GACb,IAAK,OACH,OAAO,IAAIC,GACb,IAAK,SACH,OAAO,IAAIH,EACb,IAAK,SACH,OAAO,IAAII,GACb,IAAK,OACH,OAAO,IAAIC,GACb,QACE,MAAM,IAAI1F,EAAJ,wBAA8B+B,OAEvC,CAACA,IawCUuX,GACR7C,EZ2GuB,WAC7B,IAAM3U,EAAae,GAAiB,SAAAqD,GAAC,OAAIA,EAAEzD,OAAOX,cAWlD,OAVmBkU,mBAAQ,WACzB,OAAQlU,GACN,IAAK,QACH,OAAO,IAAI4H,GACb,IAAK,UACH,OAAO,IAAIC,GACb,QACE,MAAM,IAAI3J,EAAJ,wBAA8B8B,OAEvC,CAACA,IYtHWyX,GACT/C,EAAK3T,GAAiB,SAAAqD,GAAC,OAAIA,EAAEzD,UAOnC,OALmBuT,mBAAQ,WACzB,IAAMvT,EAAS,IAAI8T,GAAYC,EAAIzP,EAAO0P,GAE1C,OADAhU,EAAO+W,aAAP,OAAsB7X,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAI6X,aACnB/W,IACN,CAACgU,EAAQ9U,EAAI6U,EAAIzP,K,SChLhB0S,GAAc,CAAC,EAAG,GAClBC,GAAO,SAACxW,GAAD,OAAeA,GAAKuW,GAAY,GAAKA,GAAY,KA+F/CE,GA7EuB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjCnX,EAASwW,KAD4C,EAEP/K,mBAAS,IAFF,mBAEpD2L,EAFoD,KAEhCC,EAFgC,OAGnC5L,mBAAS,GAH0B,mBAGpD6L,EAHoD,KAG9CC,EAH8C,OAInC9L,mBAAS,GAJ0B,mBAIpD+L,EAJoD,KAI9CC,EAJ8C,OAKzBhM,oBAAS,GALgB,mBAKpDiM,EALoD,KAKzCC,EALyC,KAMrDtL,EAAMC,iBAA0B,MAChCsL,EAAQtL,iBAA0B,MAPmB,EAhBjC,SAACuL,GAC3B,IAAKA,EAAG,MAAO,CAAEpX,EAAG,EAAGC,EAAG,GAG1B,IAFA,IAHiBsF,EAGbvF,EAAIoX,EAAEtY,MACNmB,EAAIuW,GAAKxW,GACNC,IALUsF,EAKK6R,EAAE7R,IALS8R,SAASC,gBAAgBC,aAAehS,IAOvEtF,EAAIuW,GADJxW,GAAQ,GAKV,MAAO,CAAEA,EAFTA,EAAIa,KAAKkC,MAAM/C,GAEHC,EADZA,EAAIY,KAAKkC,MAAM9C,IAgB4BuX,CAAoBd,GAApDe,EATgD,EASnDzX,EAAmB0X,EATgC,EASnCzX,EAChBkB,EAAoB5B,EAAOsE,MAA3B1C,gBACR5B,EAAOoY,cAAcF,EAAaC,GAElC,IAAME,EAA4BrF,uBAAY,WAC5C,OACEpR,IAAoBwV,GACpBE,IAASY,GACTV,IAASW,IAEV,CACDvW,EACAuW,EACAD,EACAd,EACAI,EACAF,IAGIgB,EAAmBtF,uBAAY,WACnC,OAAoB,IAAhBkF,GAAqC,IAAhBC,IAExB,CAACA,EAAaD,IAEjB1L,qBAAU,WAkBJ8L,KAjBe,uBAAAzP,EAAAC,OAAA,mDACXtI,EAAM6L,EAAIE,QADC,sBAED,IAAI1O,MAAM,4CAFT,UAIX0a,EAAQX,EAAMrL,QAJH,sBAMT,IAAI1O,MAAM,uDAND,cAQX2a,EAAWH,IACjBnF,QAAQC,IAAIqF,GACRA,GAAUb,GAAa,GAVV,YAAA9O,EAAA,MAWX7I,EAAOyY,gBAAgBjY,EAAKgY,EAAWD,OAAQrM,IAXpC,QAYjByL,GAAa,GACbN,EAAsBrX,EAAOsE,MAAM1C,iBACnC2V,EAAQvX,EAAOS,GACfgX,EAAQzX,EAAOU,GAfE,sCAkBjBgY,KAED,CAACJ,EAAkBD,EAA2BrY,IAQjD,OACE,oCACG0X,GACC,kBAACiB,GAAA,EAAD,CAASlX,MAAO,CAAElC,MAAO,OAAQR,OAAQ,OAAQ6Z,OAAQ,MAE3D,4BAAQpJ,GAAG,YAAYnD,IAAKuL,EAAOnW,MAV9B,CACLoX,SAAU,aASV,qBAGA,4BAAQxM,IAAKA,EAAKmD,GA3FQ,gBA2Fc/N,MAbnC,CACLoX,SAAU,aAYV,4B,2BC5FOC,GAAe,SAC1BC,EACAC,EACAC,GACkB,IAAD,EACyBxN,mBAASuN,GADlC,mBACVE,EADU,KACKC,EADL,KAOjB,MAAO,CACLD,EACA,CACEH,UACAK,SAAUF,EACVG,aAViB,SAACtK,GACpBoK,EAAiBpK,GACbkK,GAAUA,EAASlK,OAqDZuK,GA9BoB,SAAC,GAK7B,IAJLP,EAII,EAJJA,QACAM,EAGI,EAHJA,aACAD,EAEI,EAFJA,SACAG,EACI,EADJA,UAEMC,EAAYT,EAAQ9P,KAAI,SAAAwQ,GAC5B,OACE,4BAAQlK,IAAKkK,EAAI1K,MAAOA,MAAO0K,EAAI1K,OAChC0K,EAAI7V,SAKX,OACE,kBAAC8V,GAAA,EAAD,KACGH,GAAa,kBAACI,GAAA,EAAD,KAAQJ,GACtB,kBAACzK,GAAA,EAAD,CACExR,KAAK,SACLyR,MAAOqK,EACPnK,SAAU,SAAA5R,GACJgc,GAAcA,EAAahc,EAAE6R,OAAOH,SAGzCyK,KCrCHI,GAA+B,CACnC,CACEhW,KAAM,SACNmL,MAAO,UAET,CACEnL,KAAM,OACNmL,MAAO,QAET,CACEnL,KAAM,OACNmL,MAAO,QAET,CACEnL,KAAM,SACNmL,MAAO,UAET,CACEnL,KAAM,OACNmL,MAAO,SAIL8K,GAAgC,CACpC,CACEjW,KAAM,QACNmL,MAAO,SAET,CACEnL,KAAM,UACNmL,MAAO,YA0CI+K,GApCkB,WAC/B,IAAMhH,EAAWC,cACXzT,EAAYya,GAAe,SAAAtW,GAAC,OAAIA,EAAEzD,OAAOV,aACzCD,EAAa0a,GAAe,SAAAtW,GAAC,OAAIA,EAAEzD,OAAOX,cAHX,EAKTyZ,GAAac,GAActa,GAAW,SAAAyP,GAChE+D,EAASrT,EAAgBsP,OADlBiL,EAL4B,sBAQRlB,GAC3Be,GACAxa,GACA,SAAA0P,GACE+D,EAASpT,EAAiBqP,OAJrBkL,EAR4B,oBAe/BC,EAhEe,WACrB,IAAMla,EAASwW,KASf,OARoBxD,uBAAY,8BAAAnK,EAAAC,OAAA,uDACxBtI,EAAMsX,SAASqC,cAAc,UACnCna,EAAOoY,cAAc,KAAM,KAFG,WAAAvP,EAAA,MAGxB7I,EAAO0V,KAAKlV,IAHY,OAIxB4Z,EAAU5Z,EAAI6Z,UAAU,MAAO,GAEpC,QADK5Z,EAAIzB,OAAOsb,KAAK,iBACrB,IAAD7Z,KAAGqX,SAASyC,MAAZ,mBAA8BH,EAA9B,YAN8B,uCAO7B,CAACpa,IAuDgBwa,GACpB,OACE,yBAAK/K,UAAU,gBACb,kBAACgL,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAAC,GAAD,eAAWvB,UAAW,SAAaS,KAErC,kBAACY,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAAC,GAAD,eAAWvB,UAAW,eAAmBU,KAE3C,kBAACW,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,MAGpB,kBAAC,GAAD,CAAW3N,MAAO,UAAWC,QAAS,kBAAM8M,MAA5C,kBC/EAa,I,MAAqB,CACzB,CACEnX,KAAM,gBACNmL,MAAO,eAET,CACEnL,KAAM,WACNmL,MAAO,aAET,CACEnL,KAAM,UACNmL,MAAO,gBA8CIiM,GAzCyB,WAAO,IACrCC,EL0B0B,WAClC,IAAMC,EAAY9a,GAAiB,SAAAqD,GAAC,OAAIA,EAAEzD,OAAOZ,uBAC3C+b,EAAa/a,GAAiB,SAAAqD,GAAC,OAAIA,EAAEzD,OAAOb,WAE5CsX,EAAMrD,KACNN,EAAWC,cACXI,EAAMF,KACNK,EAAOT,KAmCb,OA7BArG,qBAAU,WAyBHiK,GAxBa,qBAAA5N,EAAAC,OAAA,0DACX2N,QADW,IACXA,OADW,EACXA,EAAK0E,WADM,sBAER,IAAItd,MACR,6DAHY,cAKhB+V,GACY,GANI,sBAMK,IAAI/V,MAAM,qBANf,cAOhBsV,EAAI,+CAAiD+H,GAPrC,oBAAArS,EAAA,MAUS4N,EAAI0E,WAAW,CAAE3R,WAAY0R,KAVtC,OAUdE,EAVc,yDAYd9H,EAAK,EAAD,GAAI,mBAZM,qBAeT8H,EAfS,uBAea,IAAI7d,EAAS,6BAf1B,aAgBV6d,aAA0Bvd,OAhBhB,wBAiBZyV,EAAK8H,GAjBO,kCAoBRC,EAA0CD,EA9CjCnS,KAAI,SAAAqS,GACvB,OAAOjM,GAAkB,CACvBV,YAAY,EACZlF,KAAM6R,EACN/M,SAAS,EACT6D,WAAW,OA0CTU,EAASnT,EAAiB0b,IArBZ,4EAyBlB1E,KACC,CAAC7D,EAAUK,EAAKG,EAAMmD,EAAKyE,IAEvB,CAAEC,aAAYF,uBAjCU,SAACM,GAC9BzI,EAASjT,EAA2B0b,MKpCHC,GAA3BP,uBACFQ,EAAmBrb,GAAiB,SAAAqD,GAAC,OAAIA,EAAEzD,OAAOZ,uBAFZ,EAGd0Z,GAC5BiC,GACAU,GACA,SAAAC,GAAC,OAAIT,EAAuBS,MAHrBC,EAHmC,sBRuDvC,SACLC,EACAC,EACA9N,GAEA,IAAM5C,EAAQ7K,YAAYsb,GACpB9I,EAAWC,cAOX+I,EAAW9I,uBACf,SAAC7H,GACC2H,EAAS+I,EAAS1Q,MAEpB,CAAC2H,EAAU+I,IAGP7N,EAAS,gBAAQiC,IAba,SAClC8L,GAEA,IAAMC,EAAUD,EAAG5Q,GACnB2H,EAAS+I,EAASG,OASL,CAAsCjO,eACrD,MAAO,CACL5C,MAAOA,EACP2Q,WACA9N,aQtE2BiO,EAC3B,SAAC1d,GAAD,OAAsBA,EAAMyB,OAAOb,UACnCQ,GACA,SAAA8J,GACE,IAAMnB,EAAMmB,EAAK5G,OAAO4G,EAAK5G,OAAOc,OAAS,GAAG2E,IAChD,OACE,8BACE,yBACEmH,UAAU,GACVyM,IAAKzS,EAAKhM,KAAO,SACjBuY,IAAK1N,EACL7G,MAAO,CACL1C,OAAQ,OACRQ,MAAO,OACP4c,YAAa,SAGhB1S,EAAKhM,SAjBN0N,EAToC,EASpCA,MAAO6C,EAT6B,EAS7BA,UAuBf,OACE,6BACE,wBAAIvM,MAAO,CAAEuN,QAAS,iBAnDX,eAoDX,kBAAC,GAAc2M,GACf,kBAAC,GAAD,eAAMxQ,MAAOA,GAAW6C,EAAxB,CAAmCU,WAAS,OP3D5C0N,GAAepd,OAAOqd,SAASpS,KAK/BqS,GAAmB,yCACnBC,GAA6B,eAC7BC,GAA2B,aAC3BC,GAA2B,aAE3BC,GAAa,CACjBC,UAZgB,mCAahBC,cAAe,QACfR,gBACAS,MAVY,iBAaP,SAASC,KAEd,IADA,IAAMC,EAAkB,GACxB,MAAmBC,OAAOC,QAAQP,IAAlC,eAA+C,CAAC,IAAD,0BAArC9R,EAAqC,KAAlC8Q,EAAkC,KAC7CqB,EAAgBjY,KAAhB,UAAwB8F,EAAxB,YAA6B8Q,IAE/B,IAAMwB,EAAeH,EAAgBhT,KAAK,KAC1C,MAAM,GAAN,OAAUuS,GAAV,YAA8BY,GAiBzB,SAASC,KAKd,GAAIzL,GACF,MAAO,CACLvH,OAAQ,aACRV,KAAMiI,IAGV,IAAMjI,EAAY,GACZ2T,EAAUpe,OAAOqd,SAASpS,KAAKoT,MAAM,KAC3C,GAAuB,IAAnBD,EAAQzZ,OAAc,MAAO,CAAEwG,OAAQ,kBAC3C,IAAMmT,EAAYF,EAAQ,GAAGC,MAAM,KAVnC,uBAWA,YAAwBC,EAAxB,+CAAmC,CAAC,IAAD,UACRD,MAAM,KADE,mBAC5BzS,EAD4B,KACzB8Q,EADyB,KAEjCjS,EAAKmB,GAAK8Q,GAbZ,kFAgBA,GAAIjS,EAAKyB,eAAe,SACtB,MAAO,CAAEf,OAAQ,iBAGnB,IAAIhM,EAAQ,GAUZ,OATKsL,EAAKyB,eAAeqR,MACvBpe,EAAK,gDAA4Coe,KAE9C9S,EAAKyB,eAAeuR,MACvBte,EAAK,gDAA4Cse,KAE9ChT,EAAKyB,eAAesR,MACvBre,EAAK,gDAA4Cqe,KAErC,KAAVre,EACK,CACLgM,OAAQ,QACRhM,SAIG,CACLgM,OAAQ,aACRV,QQjEJ,IAce8T,GAdkC,WAC/C,OACE,yBAAK9N,UAAU,0DACb,uBACEA,UAAU,kBACV+N,KAAK,SACLvT,KAAM6S,MAHR,uBCISW,GAhBkB,SAAC,GAAwB,IAAtBnO,EAAqB,EAArBA,OAAQoO,EAAa,EAAbA,OACpCne,EAAQ+P,EAAS,IAAM,EAEvBqO,EAA2B,UADpB9Q,KACS1C,OAEtB,OACE,yBAAKsF,UAAU,WAAWhO,MAAO,CAAElC,UACjC,uBAAG0K,KAAK,IAAIwF,UAAU,WAAWrC,QAASsQ,GAA1C,QAGCC,GAAY,kBAAC,GAAD,OACXA,GAAY,kBAAC,GAAD,QCsCLC,GAhCe,WAAO,IAAD,EACAnS,oBAAS,GADT,mBAC3BoS,EAD2B,KAChBC,EADgB,KAE5BC,EAAY,kBAAMD,GAAcD,IAFJ,EAGdrS,KAHc,mBAG3BW,EAH2B,KAGrBE,EAHqB,KAKlC,OACE,yBAAKoD,UAAU,cACb,kBAACuO,EAAA,EAAD,CACEvO,UAAU,qDACVhO,MAAO,CAAEwc,aAAc,SAEvB,kBAAC,GAAD,CAAWxO,UAAU,OAAOrC,QAAS,kBAAM2Q,MAA3C,WAGA,yBAAKtO,UAAU,gBAAf,cAhC6C,MAmC/C,kBAAC,GAAD,CAASH,OAAQuO,EAAWH,OAAQK,IACpC,kBAAC,GAAD,MACA,yBAAK1R,IAAKA,EAAKoD,UAAU,SACvB,kBAACyO,EAAA,EAAD,CAAWzO,UAAU,SACnB,kBAACiL,EAAA,EAAD,CAAKjL,UAAU,SACb,kBAACmL,EAAA,EAAD,CAAKnL,UAAU,uCACb,kBAAC,GAAD,CAAc0H,cAAehL,U,SC5CrCgS,GAAe,WACnB,OAAO,kBAAC,KAAD,CAAUC,GAAG,OA0BPC,GAtB2B,WACxC,IAAMvL,EAAWC,cACXuL,EAAWnB,KAEjB,GAAwB,eAApBmB,EAASnU,OAGX,OAFA+I,QAAQC,IAAR,iCAAsCmL,EAASnU,SAC/C+I,QAAQC,IAAImL,EAASngB,OACdggB,KAGT,IAAKG,EAAS7U,KACZ,MAAM,IAAI5L,MAAM,2CAX4B,MAYTygB,EAAS7U,KAAtCY,EAZsC,EAYtCA,aAAckU,EAZwB,EAYxBA,WAOtB,OANAzL,EACExU,EAAmB,CACjBL,mBAAoBoM,EACpBnM,yBAA0BqgB,KAGvBJ,MCmBMK,GAvCO,WACpB,IAAM1L,EAAWC,cACXuL,EAAWnB,KAGjB,GAAwB,eAApBmB,EAASnU,YAGN,CACL,IAAKmU,EAAS7U,KACZ,MAAM,IAAI5L,MAAM,2CAFb,MAGgCygB,EAAS7U,KAAtCY,EAHH,EAGGA,aAAckU,EAHjB,EAGiBA,WAChBE,EAAe1R,SAASwR,EAAY,IAC1C,GAAIG,MAAMD,GACR,MAAM,IAAI5gB,MAAJ,gDAAmD0gB,IAC3D,IAAMI,EAAajS,KAAe+R,EAClCzf,OAAOqd,SAASuC,KAAO,GACvB9L,EACExU,EAAmB,CACjBL,mBAAoBoM,EACpBnM,yBAA0BygB,EAAW7T,cAK3C,OACE,yBAAK2E,UAAU,OACb,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOoP,OAAK,EAACC,KAAK,iBAChB,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,UC9BUC,QACW,cAA7B/f,OAAOqd,SAAS2C,UAEe,UAA7BhgB,OAAOqd,SAAS2C,UAEhBhgB,OAAOqd,SAAS2C,SAASC,MACvB,2DCbN,IACM1P,GAAM,UACN2P,GAAalgB,OAAOmgB,aAAaC,QAAQ7P,IAC1C2P,GAIanS,SAASmS,GAAY,IAPvB,IASZlgB,OAAOmgB,aAAa1N,QACpBzS,OAAOmgB,aAAaE,QAAQ9P,GAVhB,GAU6BzE,cAN3C9L,OAAOmgB,aAAa1N,QACpBzS,OAAOmgB,aAAaE,QAAQ9P,GALd,GAK2BzE,aAWpC,IASDwU,GAActgB,OAAOmgB,aAAaC,QATD,6BAUjCG,GAAiBD,GAAcvO,KAAKyO,MAAMF,SAAepT,EAEzDuT,GAAa,CAXY,SAACC,GAAD,OAAgB,SAACC,GAAD,OAAe,SAACnhB,GAC7D,IAAIgK,EAAMmX,EAAKnhB,GACXD,EAAQmhB,EAAME,WACdlX,EAAOqI,KAAKC,UAAUzS,GAE1B,OADAS,OAAOmgB,aAAaE,QALiB,4BAKgB3W,GAC9CF,MAcMkX,GANDG,YAAe,CAC3BC,QAAShgB,EACTyf,kBACAE,gBCmCaM,GAlDsB,SAAC,GAAkB,IAAhB9S,EAAe,EAAfA,SAChC+S,EAAY5f,GAAiB,SAAAqD,GAAC,OAAIA,EAAEvD,OAAO/B,SADI,EAEasN,oBAChE,GAHmD,mBAE9CwU,EAF8C,KAEnBC,EAFmB,KASrD,IAAKF,EAAU5hB,UAAY4hB,EAAU7hB,MAInC,OAHI8hB,GAHJC,GAA8BD,GAMvB,oCAAGhT,GAGZ,IAAM9O,EAAQ6hB,EAAU7hB,MAQxB,GALA+U,QAAQC,IAAR,mBAEI6M,EAAU5hB,QAFd,sBAGgBD,EAHhB,gCAG6C6hB,EAAU7hB,QAEnDA,EACF,OAAQA,EAAMb,MACZ,IAAK,kBACE2iB,GAA2BC,GAA6B,GAC/C,KACd,MACF,QACgB,qCACdhN,QAAQ/U,MAAMA,GAIpB,OACE,oCAQG8O,ICzDPkT,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,IACf,kBAAC,GAAD,KACE,kBAAC,KAAD,KACE,kBAAC,GAAD,SAIN5H,SAASuI,eAAe,SHqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1bb775a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/desert.1f4ebc63.png\";","module.exports = __webpack_public_path__ + \"static/media/punk.ae35ea3b.png\";","module.exports = __webpack_public_path__ + \"static/media/metal.78fbcaff.png\";","module.exports = __webpack_public_path__ + \"static/media/galaxy.5fd0b3a6.png\";","export const toStorable = function(e: Error): AppErrorStorable {\n  const type = e instanceof AppError ? e.type : null;\n  return {\n    message: e.message,\n    name: e.name,\n    stack: e.stack,\n    type: type,\n  };\n};\n\nexport type AppErrorType = 'NoSpotifyAccess' | null;\nexport interface AppErrorStorable {\n  message: string;\n  stack: string | undefined;\n  name: string;\n  type: AppErrorType;\n}\n\nexport class AppError extends Error {\n  private _type: AppErrorType = null;\n\n  constructor(message: string, type?: AppErrorType) {\n    super(message);\n    if (type) {\n      this._type = type;\n    }\n  }\n\n  get type(): AppErrorType {\n    return this._type;\n  }\n\n  set type(type: AppErrorType) {\n    this._type = type;\n  }\n\n  toJSON() {\n    return toStorable(this);\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport produce from 'immer';\nimport { toStorable, AppErrorStorable } from '../../error';\n\nexport interface SpotifyAccessTokenPackage {\n  spotifyAccessToken: string;\n  spotifyAccessTokenExpire: string;\n}\n\nexport type GlobalErrorNone = { isError: false };\nexport type GlobalError = { isError: true; error: AppErrorStorable };\nexport type GlobalErrorPackage = GlobalError | GlobalErrorNone;\n\nexport interface SystemState extends SpotifyAccessTokenPackage {\n  error: GlobalErrorPackage;\n}\n\nconst initialState: SystemState = {\n  spotifyAccessToken: '',\n  spotifyAccessTokenExpire: '',\n  error: { isError: false },\n};\n\nconst systemSlice = createSlice({\n  name: 'system',\n  initialState,\n  reducers: {\n    accessTokenUpdated(\n      state,\n      action: PayloadAction<SpotifyAccessTokenPackage>,\n    ) {\n      return produce(state, draftState => {\n        draftState.spotifyAccessToken = action.payload.spotifyAccessToken;\n        draftState.spotifyAccessTokenExpire =\n          action.payload.spotifyAccessTokenExpire;\n        if (action.payload.spotifyAccessToken !== '') {\n          if (\n            draftState.error.isError &&\n            draftState.error.error.type === 'NoSpotifyAccess'\n          ) {\n            draftState.error = { isError: false };\n          }\n        }\n      });\n    },\n    caughtGlobalError(state, action: PayloadAction<Error>) {\n      return produce(state, draftState => {\n        draftState.error = {\n          isError: true,\n          error: toStorable(action.payload),\n        };\n      });\n    },\n    clearGlobalError(state) {\n      return produce(state, draftState => {\n        draftState.error = { isError: false };\n      });\n    },\n  },\n});\n\nexport const {\n  accessTokenUpdated,\n  caughtGlobalError,\n  clearGlobalError,\n} = systemSlice.actions;\nexport default systemSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ListItems } from '../../components/List/List';\nimport produce from 'immer';\nimport {\n  SpotifyArtistObject,\n  SpotifyUserObject,\n} from '../../spotify/SpotifyAPI';\n\nexport interface PosterState {\n  me: SpotifyUserObject | null;\n  artists: ListItems<SpotifyArtistObject>;\n  topArtistsTimeRange: string; // TODO make this type safe\n  layoutType: string;\n  themeType: string;\n  height: number;\n  width: number;\n}\n\nconst height = window.innerHeight * 0.8;\nconst width = height * 0.65;\n\nconst initialState: PosterState = {\n  me: null,\n  artists: [],\n  topArtistsTimeRange: 'medium_term',\n  layoutType: 'basic',\n  themeType: 'desert',\n  width,\n  height,\n};\n\nconst posterSlice = createSlice({\n  name: 'poster',\n  initialState,\n  reducers: {\n    changeThemeType(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.themeType = action.payload;\n      });\n    },\n    changeLayoutType(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.layoutType = action.payload;\n      });\n    },\n    updateArtistList(state, action: PayloadAction<PosterState['artists']>) {\n      return produce(state, draftState => {\n        draftState.artists = action.payload;\n      });\n    },\n    updateMeData(state, action: PayloadAction<SpotifyUserObject>) {\n      return produce(state, draftState => {\n        draftState.me = action.payload;\n      });\n    },\n    topArtistsTimeRangeUpdated(state, action: PayloadAction<string>) {\n      return produce(state, draftState => {\n        draftState.topArtistsTimeRange = action.payload;\n      });\n    },\n  },\n});\n\nexport const {\n  changeThemeType,\n  updateArtistList,\n  topArtistsTimeRangeUpdated,\n  changeLayoutType,\n  updateMeData,\n} = posterSlice.actions;\n\nexport default posterSlice.reducer;\n","import { combineReducers } from 'redux';\nimport systemSliceReducer from './system/systemSlice';\nimport posterSliceReducer from './Poster/posterSlice';\nimport { useSelector } from 'react-redux';\n\nexport const rootReducer = combineReducers({\n  poster: posterSliceReducer,\n  system: systemSliceReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst useTypedSelector = <T>(selector: (state: RootState) => T): T => {\n  const value = useSelector(selector);\n  return value;\n};\n\nexport default useTypedSelector;\n","// based off of the following comment from stackoverflow\n// https://stackoverflow.com/a/15666143/1215360\n\nexport const pixelRatio = (ctx: CanvasRenderingContext2D) => {\n  const dpr = window.devicePixelRatio || 1;\n  const bsr =\n    (ctx as any).webkitBackingStorePixelRatio ||\n    (ctx as any).mozBackingStorePixelRatio ||\n    (ctx as any).msBackingStorePixelRatio ||\n    (ctx as any).oBackingStorePixelRatio ||\n    (ctx as any).backingStorePixelRatio ||\n    1;\n  return Math.ceil(dpr / bsr);\n};\n\nexport const createHiDPICanvas = function(\n  can: HTMLCanvasElement,\n  w: number,\n  h: number,\n) {\n  const ctx = can.getContext('2d');\n  if (!ctx)\n    throw new Error('Could not get canvas context to create HiDPI canvas');\n  const ratio = pixelRatio(ctx);\n  can.width = w * ratio;\n  can.height = h * ratio;\n  can.style.width = w + 'px';\n  can.style.height = h + 'px';\n  ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\n  return can;\n};\n","import * as images from '../../images';\nimport useTypedSelector from '../../store/rootReducer';\nimport { AppError } from '../../error';\nimport { useMemo } from 'react';\n\nexport interface PosterTextStrokeInfo {\n  strokeStyle: string;\n  lineWidth: number;\n  offsetX: number;\n  offsetY: number;\n}\n\nexport abstract class PosterTheme {\n  public backgroundImage: string = '';\n\n  public festivalNameTopRatio: number = 0.03;\n  public festivalNameColor: string = 'TexasTango';\n  public festivalNameFont: string = 'serif';\n\n  public sideMarginRatio: number = 0;\n\n  public artistFont: string = 'WesternBangBang';\n  public artistColor: string = 'white';\n\n  public artistTopRatio = 0.4;\n  public artistFontRatio: number = 0.03;\n\n  public festivalNameFontRatio: number = 0.12;\n\n  public strokeInfo: PosterTextStrokeInfo | PosterTextStrokeInfo[] | null = {\n    strokeStyle: 'black',\n    lineWidth: 7,\n    offsetX: 0,\n    offsetY: 0,\n  };\n\n  public skewText: boolean = false;\n}\n\nexport class DesertTheme extends PosterTheme {\n  backgroundImage = images.desert;\n  festivalNameColor = 'orange';\n  festivalNameFont = 'TexasTango';\n\n  artistFont = 'WesternBangBang';\n  artistColor = 'orange';\n\n  sideMarginRatio = 0.03;\n}\n\nexport class PunkTheme extends PosterTheme {\n  backgroundImage = images.punk;\n  festivalNameColor = '#37C3E1';\n  festivalNameFont = 'WesternBangBang';\n\n  artistFont = 'WesternBangBang';\n  artistColor = '#37C3E1';\n  artistFontRatio = 0.037;\n}\n\nexport class RockTheme extends PosterTheme {\n  backgroundImage = images.metal;\n\n  festivalNameTopRatio = 0.05;\n  festivalNameColor = '#7C7170';\n  festivalNameFont = 'MadridGrunge';\n  sideMarginRatio = 0.035;\n\n  artistFont = 'PunkrockerStamp';\n  artistColor = '#7C7170';\n  artistFontRatio = 0.035;\n}\n\nexport class GalaxyTheme extends PosterTheme {\n  backgroundImage = images.galaxy;\n\n  festivalNameTopRatio = 0.05;\n  festivalNameColor = 'white';\n  festivalNameFont = 'Cocogoose';\n\n  artistFont = 'Monteral';\n  artistColor = 'white';\n\n  sideMarginRatio = 0.055;\n  artistFontRatio = 0.02;\n}\n\nexport class TestTheme extends PosterTheme {\n  backgroundImage = images.galaxy;\n\n  festivalNameTopRatio = 0.05;\n  festivalNameColor = 'white';\n  festivalNameFont = 'Cocogoose';\n\n  artistFont = 'Monteral';\n  artistColor = 'lime';\n\n  sideMarginRatio = 0.055;\n  artistFontRatio = 0.02;\n\n  strokeInfo = [\n    {\n      strokeStyle: 'yellow',\n      lineWidth: 10,\n      offsetX: 0,\n      offsetY: 0,\n    },\n    {\n      strokeStyle: 'blue',\n      lineWidth: 5,\n      offsetX: 0,\n      offsetY: 0,\n    },\n  ];\n\n  skewText = true;\n}\n\nexport const usePosterTheme = (): PosterTheme => {\n  const themeType = useTypedSelector(s => s.poster.themeType);\n  const themeMemo = useMemo(() => {\n    switch (themeType) {\n      case 'punk':\n        return new PunkTheme();\n      case 'rock':\n        return new RockTheme();\n      case 'desert':\n        return new DesertTheme();\n      case 'galaxy':\n        return new GalaxyTheme();\n      case 'test':\n        return new TestTheme();\n      default:\n        throw new AppError(`Invalid theme ${themeType}`);\n    }\n  }, [themeType]);\n  return themeMemo;\n};\n","import { Poster } from './Poster';\nimport useTypedSelector from '../../store/rootReducer';\nimport { AppError } from '../../error';\nimport { useMemo } from 'react';\n\ninterface ArtistBlockMetrics {\n  top: number;\n  bottom: number;\n  height: number;\n}\n\nexport abstract class PosterTextLayout {\n  constructor(private _poster?: Poster) {}\n\n  public set poster(poster: Poster) {\n    this._poster = poster;\n  }\n\n  public get poster() {\n    if (!this._poster)\n      throw new Error('Expected poster to be set before drawing');\n    return this._poster;\n  }\n\n  public get ctx() {\n    return this.poster.canvasCtx;\n  }\n\n  public get theme() {\n    return this.poster.theme;\n  }\n\n  protected fontString(fontRatio: number, font: string) {\n    return `${this.fontHeight(fontRatio)}px ${font}`;\n  }\n\n  protected fontHeight(fontSizeRatio: number) {\n    return Math.floor(fontSizeRatio * this.poster.h);\n  }\n\n  protected cutTrailingChar(s: string) {\n    return s.slice(0, s.length - 1);\n  }\n\n  protected get midX() {\n    return Math.floor(this.posterWidth / 2);\n  }\n\n  protected get midY() {\n    return Math.floor(this.posterHeight / 2);\n  }\n\n  protected get posterWidth() {\n    return this.poster.w;\n  }\n\n  protected get maxPosterWidth() {\n    return this.posterWidth - this.sideMargin * 2;\n  }\n\n  protected get posterHeight() {\n    return this.poster.h;\n  }\n\n  public get maxPosterHeight() {\n    return this.posterHeight;\n  }\n\n  protected get sideMargin() {\n    return Math.ceil(this.theme.sideMarginRatio * this.posterWidth);\n  }\n\n  protected get festivalNameTop() {\n    return Math.floor(this.theme.festivalNameTopRatio * this.posterHeight);\n  }\n\n  public get artistTop() {\n    return this.posterHeight * this.theme.artistTopRatio;\n  }\n\n  protected calculateTextWidth(...text: string[]) {\n    const fullText = text.reduce((prev, cur) => prev + cur, '');\n    const metrics = this.ctx.measureText(fullText);\n    const marginWidth = this.sideMargin * 2;\n    return Math.ceil(metrics.width) + marginWidth;\n  }\n\n  protected setArtistFont() {\n    this.ctx.font = this.fontString(\n      this.theme.artistFontRatio,\n      this.theme.artistFont,\n    );\n  }\n\n  protected artistLines() {\n    const lines: string[] = [];\n    const poster = this.poster;\n    this.setArtistFont();\n\n    let currentLine = '';\n    for (let artist of this.poster.artistNames) {\n      const lineWidth = this.calculateTextWidth(currentLine, artist);\n      if (lineWidth > this.maxPosterWidth) {\n        lines.push(this.cutTrailingChar(currentLine));\n        currentLine = artist + poster.artistSeperator;\n        continue;\n      }\n      currentLine = currentLine + artist + poster.artistSeperator;\n    }\n    if (currentLine !== '') lines.push(this.cutTrailingChar(currentLine));\n    return lines;\n  }\n\n  public drawArtistBlock(artistTopOverride?: number): ArtistBlockMetrics {\n    const ctx = this.poster.canvasCtx;\n    const baseTop = artistTopOverride || this.artistTop;\n    const lines = this.artistLines();\n\n    ctx.textBaseline = 'top';\n    ctx.textAlign = 'center';\n    ctx.fillStyle = this.theme.artistColor;\n\n    const fh = this.fontHeight(this.theme.artistFontRatio);\n    let movingTop: number = 0;\n    lines.forEach((line, i) => {\n      movingTop = baseTop + (i + 1) * fh;\n      this.printCenter(line, movingTop);\n    });\n\n    const bottom = movingTop + fh;\n\n    return {\n      top: baseTop,\n      bottom,\n      height: bottom - baseTop,\n    };\n  }\n\n  public clearTransform() {\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n\n  public stroke(str: string, x: number, y: number, maxWidth?: number) {\n    const { strokeInfo } = this.theme;\n    if (!strokeInfo) return;\n    const ctx = this.ctx;\n    const fillStyle = ctx.fillStyle;\n    const lineWidth = ctx.lineWidth;\n\n    const strokeList = Array.isArray(strokeInfo) ? strokeInfo : [strokeInfo];\n\n    strokeList.forEach(ss => {\n      ctx.strokeStyle = ss.strokeStyle;\n      ctx.lineWidth = ss.lineWidth;\n      ctx.strokeText(str, x + ss.offsetX, y + ss.offsetY, maxWidth);\n    });\n\n    ctx.lineWidth = lineWidth;\n    ctx.fillStyle = fillStyle;\n  }\n\n  public setSkew() {\n    if (this.theme.skewText) this.ctx.transform(1, 0.06, 0.06, 1, -20, 0);\n  }\n\n  public printCenter(str: string, top: number) {\n    const ctx = this.ctx;\n    ctx.textAlign = 'center';\n    this.stroke(str, this.midX, top, this.maxPosterWidth);\n    ctx.fillText(str, this.midX, top, this.maxPosterWidth);\n  }\n\n  public printLeft(str: string, top: number) {\n    const ctx = this.ctx;\n    ctx.textAlign = 'left';\n    this.stroke(str, this.sideMargin, top, this.maxPosterWidth);\n    ctx.fillText(str, this.sideMargin, top, this.maxPosterWidth);\n  }\n\n  public printRight(str: string, top: number) {\n    this.ctx.textAlign = 'right';\n    this.stroke(\n      str,\n      this.posterWidth - this.sideMargin,\n      top,\n      this.maxPosterWidth,\n    );\n    this.ctx.fillText(\n      str,\n      this.posterWidth - this.sideMargin,\n      top,\n      this.maxPosterWidth,\n    );\n  }\n\n  public drawFestivalName() {\n    const ctx = this.poster.canvasCtx;\n    ctx.font = this.fontString(\n      this.theme.festivalNameFontRatio,\n      this.theme.festivalNameFont,\n    );\n    ctx.fillStyle = this.theme.festivalNameColor;\n    ctx.textBaseline = 'top';\n    ctx.textAlign = 'center';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 2;\n\n    this.printCenter(this.poster.festivalName, this.festivalNameTop);\n  }\n}\n\nexport class BasicLayout extends PosterTextLayout {}\nexport class WeekendLayout extends PosterTextLayout {\n  dayFont() {\n    this.ctx.font = this.fontString(\n      this.theme.artistFontRatio * 2,\n      this.theme.artistFont,\n    );\n  }\n\n  artistFont() {\n    this.ctx.font = this.fontString(\n      this.theme.artistFontRatio,\n      this.theme.artistFont,\n    );\n  }\n\n  drawArtistBlock(artistTopOverride?: number): ArtistBlockMetrics {\n    this.setSkew();\n    const lines = this.artistLines();\n    const oneThird = Math.ceil(lines.length / 3);\n    const day1Lines = lines.slice(0, oneThird);\n    const day2Lines = lines.slice(oneThird, oneThird * 2);\n    const day3Lines = lines.slice(oneThird * 2);\n\n    this.ctx.textBaseline = 'bottom';\n    this.ctx.fillStyle = this.theme.artistColor;\n\n    const fh = this.fontHeight(this.theme.artistFontRatio);\n    const startTop = artistTopOverride || this.artistTop;\n    const actualTop = startTop - fh;\n    let movingTop = startTop;\n\n    this.dayFont();\n    this.printLeft('FRIDAY', movingTop);\n    this.artistFont();\n\n    day1Lines.forEach((line, i) => {\n      movingTop += fh;\n      this.printLeft(line, movingTop);\n    });\n\n    movingTop = movingTop + fh * 3;\n\n    this.dayFont();\n    this.printRight('SATURDAY', movingTop);\n    this.artistFont();\n\n    day2Lines.forEach((line, i) => {\n      movingTop += fh;\n      this.printRight(line, movingTop);\n    });\n\n    movingTop = movingTop + fh * 3;\n    this.ctx.textAlign = 'left';\n\n    this.dayFont();\n    this.printLeft('SUNDAY', movingTop);\n    this.artistFont();\n    day3Lines.forEach(line => {\n      movingTop += fh;\n      this.printLeft(line, movingTop);\n    });\n\n    this.clearTransform();\n    return {\n      top: actualTop,\n      bottom: movingTop,\n      height: movingTop - actualTop,\n    };\n  }\n}\n\nexport const usePosterLayout = (): PosterTextLayout => {\n  const layoutType = useTypedSelector(s => s.poster.layoutType);\n  const layoutMeme = useMemo(() => {\n    switch (layoutType) {\n      case 'basic':\n        return new BasicLayout();\n      case 'weekend':\n        return new WeekendLayout();\n      default:\n        throw new AppError(`Invalid theme ${layoutType}`);\n    }\n  }, [layoutType]);\n  return layoutMeme;\n};\n","import { AppError } from '../error';\n\nexport const SPOTIFY_API_HOST = 'https://api.spotify.com';\nexport const SPOTIFY_VERSION = 'v1';\n\nexport interface SpotifyUserObject {\n  country: string;\n  display_name: string;\n  email: string;\n  href: string;\n  id: string;\n  product: string;\n  type: string;\n  uri: string;\n}\n\nexport interface SpotifyPlaylistObject {\n  description: string;\n  href: string;\n  id: string;\n  name: string;\n  tracks: string;\n  type: string;\n  uri: string;\n}\nexport interface SpotifyPagingObject<T> {\n  href: string;\n  items: T[];\n  limit: number;\n  next: string;\n  offset: string;\n  previous: string;\n  total: number;\n}\n\nexport interface SpotifyAlbumObjectSimple {\n  album_type: 'album' | 'single' | 'compilation';\n  artists: SpotifyArtistObjectSimple[];\n  href: string; // A link to the Web API endpoint providing full details of the album.\n  name: string;\n  release_date: string;\n  type: 'album';\n  uri: string;\n}\n\nexport interface SpotifyArtistObjectSimple {\n  href: string; // A link to the Web API endpoint providing full details of the artist.\n  id: string;\n  name: string;\n  type: 'artist';\n  uri: string;\n}\n\nexport interface SpotifyArtistObject {\n  album: SpotifyAlbumObjectSimple;\n  artists: SpotifyArtistObjectSimple[];\n  duration_ms: number;\n  href: string; // A link to the Web API endpoint providing full details of the track.\n  id: string;\n  name: string;\n  popularity: number;\n  track_number: number;\n  type: 'artist';\n  uri: string;\n  images: SpotifyImage[];\n}\n\nexport interface SpotifyImage {\n  height: number;\n  width: number;\n  url: string;\n}\n\ntype TimeRange = 'long_term' | 'medium_term' | 'short_term';\n\nexport abstract class SpotifyAPI {\n  constructor(public apiKey: string) {}\n\n  public abstract async getPlaylists(): Promise<\n    SpotifyPlaylistObject[] | AppError\n  >;\n  public abstract async getPlaylistTracks(\n    playlistId: string,\n  ): Promise<SpotifyArtistObject[] | AppError>;\n  public abstract async me(): Promise<SpotifyUserObject | AppError>;\n  public async topArtists?(\n    query?: any,\n  ): Promise<SpotifyArtistObject[] | AppError>;\n\n  public async getPlaylistArtists(\n    playlistId: string,\n  ): Promise<string[] | AppError> {\n    const trackData = await this.getPlaylistTracks(playlistId);\n    if (trackData instanceof AppError) return trackData;\n    return extractArtistsFromTracks(trackData);\n  }\n\n  public async noAuthAPICall(url: string): Promise<any | AppError> {\n    try {\n      const res = await fetch(url);\n      const json = await unpackResponse(res, url);\n      return json;\n    } catch (e) {\n      return e;\n    }\n  }\n}\n\nexport class SpotifyAuthTokenAPI extends SpotifyAPI {\n  public getPlaylists() {\n    return spotifyPlaylistsFromToken(this.apiKey);\n  }\n\n  public getPlaylistTracks(playlistId: string) {\n    return spotifyTracksFromPlaylist(this.apiKey, playlistId);\n  }\n\n  public async me() {\n    return spotifyMe(this.apiKey);\n  }\n\n  // public async topArtists(limit: string = '30', offset: string = '0', time_range: TimeRange = 'long_term') {\n  public async topArtists({\n    limit = '50',\n    offset = '0',\n    time_range = 'medium_term',\n  } = {}) {\n    const data = await spotifyGETHelper<SpotifyArtistObject[]>(\n      this.apiKey,\n      ['me', 'top', 'artists'],\n      { limit, offset, time_range },\n    );\n    return data;\n  }\n}\n\nexport class SpotifyUserIdAPI extends SpotifyAPI {\n  public async getPlaylists() {\n    const url = apiurl('users', this.apiKey, 'playlists');\n    return await this.noAuthAPICall(url);\n  }\n\n  public async getPlaylistTracks(playlistId: string) {\n    const url = apiurl('playlists', this.apiKey, 'tracks');\n    return await this.noAuthAPICall(url);\n  }\n\n  public async me() {\n    const url = apiurl('users', this.apiKey);\n    return await this.noAuthAPICall(url);\n  }\n}\n\ninterface SpotifyAuth {\n  authToken: string;\n  userId: string;\n}\nexport function spotifyAPIFactory(\n  spotifyAuthObj: Partial<SpotifyAuth>,\n): SpotifyAPI | null {\n  const { authToken, userId } = spotifyAuthObj;\n  if (authToken && authToken !== '') {\n    return new SpotifyAuthTokenAPI(authToken);\n  } else if (userId && userId !== '') {\n    return new SpotifyUserIdAPI(userId);\n  } else {\n    return null;\n  }\n}\n\nexport function apiurl(...endpoints: string[]): string {\n  let epList = [SPOTIFY_VERSION, ...endpoints];\n  let endpointString = epList.join('/');\n  return new URL(endpointString, SPOTIFY_API_HOST).href;\n}\n\nexport async function unpackResponse(res: Response, url: string) {\n  if (!res.ok) {\n    if (res.status === 401)\n      return new AppError(\n        `Fetch for URL ${url} returned not ok status.  Status: ${res.status}`,\n        'NoSpotifyAccess',\n      );\n    return new AppError(\n      `Fetch for URL ${url} returned not ok status.  Status: ${res.status}`,\n      'NoSpotifyAccess',\n    );\n  }\n  if (res.status !== 200) {\n    return new AppError(\n      `Fetch for URL ${url} returned a status of ${res.status}`,\n      'NoSpotifyAccess',\n    );\n  }\n  try {\n    let json = await res.json();\n    return json;\n  } catch (e) {\n    return e;\n  }\n}\n\nexport async function spotifyFetch(\n  access_token: string,\n  url: string,\n): Promise<AppError | any> {\n  const headers = {\n    Authorization: `Bearer ${access_token}`,\n  };\n  let res;\n  try {\n    res = await fetch(url, { headers });\n    return unpackResponse(res, url);\n  } catch (e) {\n    return e;\n  }\n}\n\ntype QueryParamsObject = { [k: string]: string };\nfunction objectToQueryParams(queryObject?: QueryParamsObject): string {\n  if (!queryObject) return '';\n  const USP = new URLSearchParams();\n  for (const k in queryObject) {\n    USP.append(k, queryObject[k]);\n  }\n  return USP.toString();\n}\n\nasync function spotifyGETHelper<T>(\n  accessToken: string,\n  urlParams: string[],\n  queryParams?: QueryParamsObject,\n): Promise<T | AppError> {\n  const queryStr = objectToQueryParams(queryParams);\n  const url = apiurl(...urlParams, `?${queryStr}`);\n  const data = await spotifyFetch(accessToken, url);\n  if (data instanceof AppError) return data;\n  if (!data.hasOwnProperty('items')) {\n    throw new AppError(\n      `Returned paging object does not contain items field.  Url: ${url}`,\n    );\n  }\n  return data.items;\n}\n\nexport async function spotifyMe(\n  accessToken: string,\n): Promise<SpotifyUserObject> {\n  const url = apiurl('me');\n  const data = await spotifyFetch(accessToken, url);\n  return data;\n}\n\nexport async function spotifyPlaylistsFromToken(\n  accessToken: string,\n): Promise<SpotifyPlaylistObject[] | AppError> {\n  return spotifyGETHelper(accessToken, ['me', 'playlists']);\n}\n\nexport interface SpotifyPlaylistTrackObject {\n  track: SpotifyArtistObject;\n}\nexport async function spotifyTracksFromPlaylist(\n  accessToken: string,\n  playlist_id: string,\n): Promise<SpotifyArtistObject[] | AppError> {\n  const res = await spotifyGETHelper<SpotifyPlaylistTrackObject[]>(\n    accessToken,\n    ['playlists', playlist_id, 'tracks'],\n  );\n  // Strip off the PlaylistTrackObject information\n  if (res instanceof AppError) return res;\n  return res.map(playlistTrackObject => playlistTrackObject.track);\n}\n\nexport function extractArtistsFromTracks(\n  tracks: SpotifyArtistObject[],\n): string[] {\n  let artistsSet = new Set<string>();\n  tracks.forEach(track => {\n    artistsSet.add(track.artists[0].name);\n  });\n  return [...artistsSet];\n}\n","import { useState, useRef, useEffect } from 'react';\nimport { useWindowSize } from './useWindowSize';\n\nexport type UseBoundingRectangle<T> = [DOMRect | undefined, React.RefObject<T>];\nexport function useBoundingRectangle<\n  T extends HTMLElement\n>(): UseBoundingRectangle<T> {\n  const [w, h] = useWindowSize();\n  const [rect, setrect] = useState<DOMRect | undefined>(undefined);\n  const ref = useRef<T>(null);\n  const { current } = ref;\n\n  useEffect(() => {\n    const rect = current?.getBoundingClientRect();\n    setrect(rect);\n  }, [current, w, h]);\n  return [rect, ref];\n}\n","import { useState, useLayoutEffect } from 'react';\n\n// based off of this stackoverflow comment: https://stackoverflow.com/a/19014495/1215360\nexport function useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n","export * from './useBoundingRectangle';\nexport * from './useWindowSize';\n\nexport const nowSeconds = () => {\n  return Math.floor(Date.now() / 1000);\n};\n","import useTypedSelector from '../rootReducer';\nimport { nowSeconds } from '../../utils';\n\ntype UseSpotifyAccessToken =\n  | { status: 'NONE' }\n  | { status: 'EXPIRED' }\n  | { status: 'VALID'; accessToken: string };\nconst useSpotifyAccessToken = (): UseSpotifyAccessToken => {\n  const accessToken = useTypedSelector(s => s.system.spotifyAccessToken);\n  const expire = useTypedSelector(s => s.system.spotifyAccessTokenExpire);\n  if (accessToken === '' && expire === '') return { status: 'NONE' };\n  if (accessToken === '' || expire === '')\n    throw new Error('Spotify access token/expire in invalid state');\n\n  const expireTime = parseInt(expire, 10);\n  if (expireTime < nowSeconds()) return { status: 'EXPIRED' };\n  return {\n    status: 'VALID',\n    accessToken,\n  };\n};\n\nexport default useSpotifyAccessToken;\n","import React from 'react';\nimport { Button as RSButton, ButtonProps } from 'reactstrap';\n\ninterface Props extends ButtonProps {}\n\nconst AppButton: React.FC<Props> = ({ children, ...props }) => {\n  const color = props.color ? props.color : 'primary';\n  const size = props.size ? props.size : 'sm';\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    props.onClick?.(e);\n  };\n\n  return (\n    <RSButton color={color} size={size} onClick={handleClick} {...props}>\n      {children}\n    </RSButton>\n  );\n};\n\nexport default AppButton;\n","import React, { useState } from 'react';\nimport { ListItem, createNewListItem, ListHandler, ListProps } from './List';\nimport {\n  InputGroupAddon,\n  Input,\n  InputGroup,\n  ListGroupItem,\n  ButtonGroup,\n} from 'reactstrap';\nimport AppButton from '../AppButton';\nimport '../../style.css';\n\nexport function handleActionClick<T>(\n  e: any,\n  item: ListItem<T>,\n  handler: ListHandler<T>,\n) {\n  e.preventDefault();\n  handler(item);\n}\n\ninterface Props<T> extends ListProps<T> {\n  item: ListItem<T>;\n  isEditing: boolean;\n  setIsEditing: React.Dispatch<any>;\n  disableActions: boolean;\n  rowNumber?: number;\n}\ntype FCRow<T = any> = React.FC<Props<T>>;\nconst ListRow: FCRow = ({\n  rowNumber,\n  disableActions,\n  item,\n  isEditing,\n  setIsEditing,\n  renderData,\n  ...listProps\n}) => {\n  const [editText, setEditText] = useState(item.data);\n  const {\n    handleRemove,\n    handleEdit,\n    handleSelectionChange: handleSelect,\n  } = listProps;\n  const canEdit = listProps.canEditGlobal && item.canEdit && handleEdit;\n  const canRemove = !!(listProps.canRemove && handleRemove);\n  const canSelect = !!(listProps.canSelect && handleSelect !== undefined);\n  const isSelected = !!item.isSelected;\n\n  function renderIsEditing() {\n    return (\n      <ListGroupItem>\n        <InputGroup>\n          <Input\n            value={editText}\n            style={{\n              display: 'inline',\n            }}\n            onChange={e => {\n              setEditText(e.target.value);\n            }}\n          />\n\n          <InputGroupAddon addonType='append'>\n            <AppButton\n              onClick={e => {\n                if (!handleEdit)\n                  throw Error('Expected handleEdit to exist by this point');\n                handleActionClick(\n                  e,\n                  createNewListItem(item, { data: editText }),\n                  handleEdit,\n                );\n                setEditText('');\n                setIsEditing(false);\n              }}\n            >\n              Save\n            </AppButton>\n          </InputGroupAddon>\n          <InputGroupAddon addonType='append'>\n            <AppButton\n              color='danger'\n              onClick={e => {\n                setEditText('');\n                setIsEditing(false);\n              }}\n            >\n              X\n            </AppButton>\n          </InputGroupAddon>\n        </InputGroup>\n      </ListGroupItem>\n    );\n  }\n\n  const renderActionButtons = () => {\n    return (\n      <ButtonGroup>\n        {canEdit && handleEdit && (\n          <AppButton\n            disabled={disableActions}\n            onClick={e => setIsEditing(true)}\n          >\n            Edit\n          </AppButton>\n        )}\n        {canRemove && handleRemove && (\n          <AppButton\n            disabled={disableActions}\n            onClick={e => {\n              handleActionClick(e, item, handleRemove);\n            }}\n          >\n            Remove\n          </AppButton>\n        )}\n      </ButtonGroup>\n    );\n  };\n\n  const renderRow = () => {\n    const active = canSelect && isSelected;\n    return (\n      <ListGroupItem\n        key={item.id}\n        action={canSelect}\n        active={active}\n        className='noselect d-flex justify-content-between align-items-center py-1'\n        onClick={e => listProps.handleSelectionChange?.(item)}\n      >\n        {typeof rowNumber === 'number' && `${rowNumber + 1}. `}\n        {renderData(item.data)}\n        {renderActionButtons()}\n        {active ? '✅' : '❌'}\n      </ListGroupItem>\n    );\n  };\n\n  if (isEditing) {\n    return renderIsEditing();\n  } else {\n    return renderRow();\n  }\n};\n\nexport default ListRow;\n","import React, { useState, useCallback } from 'react';\nimport ListRow from './ListRow';\nimport AppButton from '../AppButton';\nimport {\n  ButtonGroup,\n  InputGroup,\n  Input,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport produce from 'immer';\n\nconst SELECTALL = 'Select All';\nconst CLEAR = 'Unselect All';\n\nexport interface ListItem<T> {\n  id: number;\n  data: T;\n  canEdit?: boolean;\n  isSelected: boolean;\n  userAdded?: boolean;\n}\nexport type ListItems<T> = ListItem<T>[];\n// Quick and dirty way to generate probably unique ids,\n// Should serve the purpose for this list implementation\nlet _ID = -1;\nconst generateId = () => {\n  _ID++;\n  return _ID;\n};\n\nexport function createNewListItem<T>(\n  oldItem: Omit<ListItem<T>, 'id'>,\n  newItem?: Omit<Partial<ListItem<T>>, 'id'>,\n): ListItem<T> {\n  return {\n    id: generateId(),\n    ...oldItem,\n    ...newItem,\n  };\n}\n\ntype UseList<T> = [\n  ListItems<T>,\n  (items: T[]) => void,\n  Required<ListHandlers<T>>,\n];\nexport function useList<T>(\n  handlerCallbacks?: ListHandlers<T>,\n  handlerMiddleware?: ListHandlerMiddleware<T>,\n): UseList<T> {\n  const [list, setList] = useState<ListItems<T>>([]);\n\n  const setListWrapper = useCallback((dataList: T[]) => {\n    const items = dataList.map(data => {\n      return createNewListItem({\n        data: data,\n        isSelected: true,\n        canEdit: false,\n        userAdded: false,\n      });\n    });\n    setList(items);\n  }, []);\n\n  const listItemHook = attachHandlers(\n    setList,\n    handlerCallbacks,\n    handlerMiddleware,\n  );\n  return [list, setListWrapper, listItemHook];\n}\n\ntype UseReduxList<T> = {\n  items: ListItems<T>;\n  setItems: (items: ListItems<T>) => void;\n  listProps: Omit<ListProps<T>, 'items'>;\n};\nexport function useReduxList<T>(\n  selectorFN: (state: any) => ListItems<T>,\n  actionFN: (newList: ListItems<T>) => void,\n  renderData: (data: T) => JSX.Element | string,\n): UseReduxList<T> {\n  const items = useSelector(selectorFN);\n  const dispatch = useDispatch();\n  const listFNSetter: ListSetter<T> = (\n    fn: (oldList: ListItems<T>) => ListItems<T>,\n  ) => {\n    const newList = fn(items);\n    dispatch(actionFN(newList));\n  };\n  const setItems = useCallback(\n    (items: ListItems<T>) => {\n      dispatch(actionFN(items));\n    },\n    [dispatch, actionFN],\n  );\n\n  const listProps = { ...attachHandlers(listFNSetter), renderData };\n  return {\n    items: items,\n    setItems,\n    listProps,\n  };\n}\n\n// TODO use immer produce for all of this\ntype ListSetter<T> = (fn: (oldList: ListItems<T>) => ListItems<T>) => void;\nexport function attachHandlers<T>(\n  setter: ListSetter<T>,\n  handlerCallbacks?: ListHandlers<T>,\n  handlerMiddleware?: ListHandlerMiddleware<T>,\n): Required<ListHandlers<T>> {\n  return {\n    handleRemove: toRemove => {\n      setter(oldItems => {\n        return oldItems.filter(i => i.id !== toRemove.id);\n      });\n      handlerCallbacks?.handleRemove?.(toRemove);\n    },\n    handleAddRow: addedItem => {\n      const newItem = handlerMiddleware?.addRow?.(addedItem) || addedItem;\n      setter(oldItems => {\n        return [...oldItems, newItem];\n      });\n      handlerCallbacks?.handleAddRow?.(newItem);\n    },\n    handleEdit: editedItem => {\n      setter(oldItems => {\n        const newItems = [...oldItems];\n        let itemToEdit = newItems.find(i => i.id === editedItem.id);\n        if (!itemToEdit)\n          throw new Error(\n            `Could not find edited item: ${JSON.stringify(editedItem)}`,\n          );\n        itemToEdit.data = editedItem.data;\n        return newItems;\n      });\n      handlerCallbacks?.handleEdit?.(editedItem);\n    },\n    handleSelectionChange: selectedItem => {\n      setter(oldItems => {\n        return produce(oldItems, draft => {\n          const i = draft.findIndex(i => i.id === selectedItem.id);\n          draft[i].isSelected = !selectedItem.isSelected;\n          handlerCallbacks?.handleSelectionChange?.(draft[i] as ListItem<T>);\n        });\n      });\n    },\n    handleSelectAll: () => {\n      setter(oldItems => {\n        let newItems = oldItems.map(i => {\n          return { ...i, isSelected: true };\n        });\n        const selectAllMW = handlerMiddleware?.selectAll;\n        if (selectAllMW) {\n          newItems = selectAllMW(newItems);\n        }\n        return newItems;\n      });\n    },\n    handleClear: () => {\n      setter(oldItems => {\n        let newItems = oldItems.map(i => {\n          return { ...i, isSelected: false };\n        });\n        const clearMW = handlerMiddleware?.clear;\n        if (clearMW) {\n          newItems = clearMW(newItems);\n        }\n        return newItems;\n      });\n    },\n  };\n}\n\nexport interface ListHandlerMiddleware<T> {\n  addRow?: (item: ListItem<T>) => ListItem<T>;\n  selectAll?: (items: ListItems<T>) => ListItems<T>;\n  clear?: (items: ListItems<T>) => ListItems<T>;\n}\n\nexport type ListHandler<T> = (item: ListItem<T>) => void;\nexport type ListActionHandler = (actionValue: any) => void;\nexport interface ListHandlers<T> {\n  handleRemove?: ListHandler<T>;\n  handleAddRow?: ListHandler<T>;\n  handleEdit?: ListHandler<T>;\n  handleSelectionChange?: ListHandler<T>;\n  handleSelectAll?: (newItems?: ListItem<T>[]) => void;\n  handleClear?: (newItems?: ListItems<T>) => void;\n}\nexport interface ListProps<T> extends ListHandlers<T> {\n  items: ListItems<T>;\n  renderData: (data: T) => JSX.Element | string;\n  name?: string;\n  canRemove?: boolean;\n  canAddRow?: boolean;\n  canEditGlobal?: boolean;\n  canSelect?: boolean;\n  rowNumbers?: boolean;\n}\n\ntype FCList<T = any> = React.FC<ListProps<T>>;\nconst List: FCList = props => {\n  const [isAddingRow, setisAddingRow] = useState(false);\n  const [addRowText, setAddRowText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const { items } = props;\n  const canSelectAll = props.canSelect && props.handleSelectAll;\n  const canClear = props.canSelect && props.handleClear;\n\n  const renderAddRow = () => {\n    const { handleAddRow, canAddRow } = props;\n    if (!(handleAddRow && canAddRow)) return null;\n    if (isAddingRow)\n      return (\n        <div>\n          <ListGroupItem>\n            <InputGroup>\n              <Input\n                value={addRowText}\n                onChange={e => setAddRowText(e.target.value)}\n              />\n              <ButtonGroup>\n                <AppButton\n                  onClick={() => {\n                    const newItem = createNewListItem(\n                      {\n                        data: addRowText,\n                        userAdded: true,\n                        isSelected: false,\n                      },\n                      {},\n                    );\n                    setisAddingRow(false);\n                    handleAddRow(newItem);\n                    setAddRowText('');\n                  }}\n                >\n                  Save\n                </AppButton>\n                <AppButton\n                  color='danger'\n                  onClick={() => {\n                    setisAddingRow(false);\n                    setAddRowText('');\n                  }}\n                >\n                  X\n                </AppButton>\n              </ButtonGroup>\n            </InputGroup>\n          </ListGroupItem>\n        </div>\n      );\n\n    return (\n      <ListGroupItem>\n        <AppButton\n          block\n          disabled={isEditing}\n          onClick={() => setisAddingRow(true)}\n        >\n          Add Row\n        </AppButton>\n      </ListGroupItem>\n    );\n  };\n\n  const renderListActions = () => {\n    let selectAll = null;\n    let clear = null;\n    if (canSelectAll) {\n      selectAll = (\n        <AppButton\n          color='success'\n          onClick={e => {\n            props.handleSelectAll?.();\n          }}\n        >\n          {SELECTALL}\n        </AppButton>\n      );\n    }\n    if (canClear) {\n      clear = (\n        <AppButton\n          color='warning'\n          onClick={e => {\n            props.handleClear?.();\n          }}\n        >\n          {CLEAR}\n        </AppButton>\n      );\n    }\n    return (\n      <div className='list__actions'>\n        <ButtonGroup>\n          {selectAll}\n          {clear}\n        </ButtonGroup>\n      </div>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <div\n        className='list__header'\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        {props.name ? <h3>{props.name}</h3> : null}\n        {renderListActions()}\n      </div>\n    );\n  };\n\n  function renderList() {\n    const rows = items.map((item, i) => {\n      const rowNumber = props.rowNumbers ? i : undefined;\n      return (\n        <ListRow\n          key={item.id}\n          item={item}\n          setIsEditing={setIsEditing}\n          isEditing={isEditing}\n          disableActions={isAddingRow}\n          rowNumber={rowNumber}\n          {...props}\n        />\n      );\n    });\n    return (\n      <div className='list'>\n        {renderHeader()}\n        <ListGroup>\n          {rows}\n          {renderAddRow()}\n        </ListGroup>\n      </div>\n    );\n  }\n  return <div className='list'>{renderList()}</div>;\n};\n\nexport default List;\n","const client_id = 'f775b626d4784dfba4491742d5453d55'; // Your client id\nconst redirect_uri = window.location.href;\n// process.env.NODE_ENV === 'development'\n//   ? window.location.href\n//   : 'https://danieladen.github.io/festival-poster-app/'; // TODO remove hard coded redirect\nconst scope = 'user-top-read';\nconst SPOTIFY_AUTH_URL = 'https://accounts.spotify.com/authorize';\nconst SPOTIFY_ACCESS_TOKEN_FIELD = 'access_token';\nconst SPOTIFY_TOKEN_TYPE_FIELD = 'token_type';\nconst SPOTIFY_EXPIRES_IN_FIELD = 'expires_in';\n\nconst authParams = {\n  client_id,\n  response_type: 'token',\n  redirect_uri,\n  scope,\n};\n\nexport function constructSpotifyAuthURL() {\n  const queryParamsList = [];\n  for (let [k, v] of Object.entries(authParams)) {\n    queryParamsList.push(`${k}=${v}`);\n  }\n  const paramsString = queryParamsList.join('&');\n  return `${SPOTIFY_AUTH_URL}?${paramsString}`;\n}\n\ninterface SpotifyAuthData {\n  access_token: string;\n  token_type: string;\n  expires_in: string;\n  state?: string;\n}\n\nlet MEMOED_AUTH_DATA: SpotifyAuthData | undefined;\n\ntype AuthDataStatus =\n  | 'AUTHORIZED'\n  | 'NOT_AUTHORIZED'\n  | 'ACCESS_DENIED'\n  | 'ERROR';\nexport function spotifyAuthFromWindow(): {\n  status: AuthDataStatus;\n  data?: SpotifyAuthData;\n  error?: string;\n} {\n  if (MEMOED_AUTH_DATA) {\n    return {\n      status: 'AUTHORIZED',\n      data: MEMOED_AUTH_DATA,\n    };\n  }\n  const data: any = {};\n  const urlList = window.location.href.split('#');\n  if (urlList.length !== 2) return { status: 'NOT_AUTHORIZED' }; // no hash fragment\n  const queryList = urlList[1].split('&');\n  for (let queryString of queryList) {\n    let [k, v] = queryString.split('=');\n    data[k] = v;\n  }\n\n  if (data.hasOwnProperty('error')) {\n    return { status: 'ACCESS_DENIED' };\n  }\n\n  let error = '';\n  if (!data.hasOwnProperty(SPOTIFY_ACCESS_TOKEN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_ACCESS_TOKEN_FIELD}`;\n  }\n  if (!data.hasOwnProperty(SPOTIFY_EXPIRES_IN_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_EXPIRES_IN_FIELD}`;\n  }\n  if (!data.hasOwnProperty(SPOTIFY_TOKEN_TYPE_FIELD)) {\n    error = `Hash fragment does not contain field: ${SPOTIFY_TOKEN_TYPE_FIELD}`;\n  }\n  if (error !== '') {\n    return {\n      status: 'ERROR',\n      error,\n    };\n  }\n\n  return {\n    status: 'AUTHORIZED',\n    data,\n  };\n}\n","// import useTypedSelector from \"./store/rootReducer\";\nimport { useDispatch } from 'react-redux';\nimport { caughtGlobalError } from './store/system/systemSlice';\nimport { useCallback } from 'react';\nimport { AppErrorType } from './error';\n\n// TODO implement smarter error logging.  This will so far\n//      only catch one error at a time.\nexport const useErrorLog = () => {\n  // const error = useTypedSelector(s => s.system.error)\n  const dispatch = useDispatch();\n\n  const log = useCallback(\n    (e: Error, type?: AppErrorType) => {\n      // if (error.isError) return;\n      if (type) (e as any).type = type;\n      dispatch(caughtGlobalError(e));\n    },\n    [dispatch],\n  );\n  return log;\n};\n\nexport const useAppLog = () => {\n  const log = useCallback((data: any) => {\n    console.log(data);\n  }, []);\n  return log;\n};\n","import { useEffect, useMemo } from 'react';\nimport {\n  spotifyAPIFactory,\n  SpotifyAPI,\n  SpotifyArtistObject,\n} from './SpotifyAPI';\nimport { useDispatch } from 'react-redux';\nimport useSpotifyAccessToken from '../store/system/useSpotifyAccessToken';\nimport useTypedSelector from '../store/rootReducer';\nimport {\n  updateArtistList,\n  topArtistsTimeRangeUpdated,\n  updateMeData,\n} from '../store/Poster/posterSlice';\nimport { createNewListItem, ListItems } from '../components/List/List';\nimport { useErrorLog, useAppLog } from '../AppLog';\nimport { AppError } from '../error';\n\nexport const useSpotifyAPI = (): SpotifyAPI | null => {\n  const tokenData = useSpotifyAccessToken();\n  const elog = useErrorLog();\n  let accessToken = '';\n  if (tokenData.status === 'NONE' || tokenData.status === 'EXPIRED') {\n    const e = new AppError(\n      `Spotify Access token status not valid.  status: ${tokenData.status}`,\n    );\n    elog(e, 'NoSpotifyAccess');\n  } else {\n    accessToken = tokenData.accessToken;\n  }\n  const memoedAPI = useMemo(() => {\n    if (accessToken === '') return null;\n    return spotifyAPIFactory({ authToken: accessToken });\n  }, [accessToken]);\n\n  return memoedAPI;\n};\n\nconst artistObjectsToListItems = (artistObjects: SpotifyArtistObject[]) => {\n  return artistObjects.map(ao => {\n    return createNewListItem({\n      isSelected: true,\n      data: ao,\n      canEdit: false,\n      userAdded: false,\n    });\n  });\n};\n\nlet count = 0; // TODO remove\ntype UseSpotifyTopArtists<T> = [ListItems<T>, (newTimeRange: string) => void];\nexport const useSpotifyTopArtists = () => {\n  const timeRange = useTypedSelector(s => s.poster.topArtistsTimeRange);\n  const topArtists = useTypedSelector(s => s.poster.artists);\n\n  const api = useSpotifyAPI();\n  const dispatch = useDispatch();\n  const log = useAppLog();\n  const elog = useErrorLog();\n\n  const setTopArtistsTimeRange = (newTimeRange: string) => {\n    dispatch(topArtistsTimeRangeUpdated(newTimeRange));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!api?.topArtists)\n        throw new Error(\n          'Expected topArtists method to exist on spotify api object',\n        );\n      count++;\n      if (count > 5) throw new Error('Max Count Reached');\n      log('Using api to retreive top Artists for range ' + timeRange);\n      let topArtistsData;\n      try {\n        topArtistsData = await api.topArtists({ time_range: timeRange });\n      } catch (e) {\n        elog(e, 'NoSpotifyAccess');\n      } finally {\n        // TODO this logic probably shouldn't be in a finally block, look into removing\n        if (!topArtistsData) throw new AppError('Expected top artists data');\n        if (topArtistsData instanceof Error) {\n          elog(topArtistsData);\n          return;\n        }\n        const topArtistsList = artistObjectsToListItems(topArtistsData);\n        dispatch(updateArtistList(topArtistsList));\n      }\n    };\n    if (!api) return;\n    fetchData();\n  }, [dispatch, log, elog, api, timeRange]);\n\n  return { topArtists, setTopArtistsTimeRange };\n};\n\nexport const useMe = () => {\n  const me = useTypedSelector(s => s.poster.me);\n  const api = useSpotifyAPI();\n  const dispatch = useDispatch();\n  const log = useAppLog();\n  const elog = useErrorLog();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!api) throw new Error('Expected api');\n      log('Using spotify api to fetch me data');\n      let meData;\n      try {\n        meData = await api.me();\n      } catch (e) {\n        elog(e);\n        return;\n      }\n      if (!meData) throw new Error('Expected me data');\n      if (meData instanceof Error)\n        throw new Error('Expected error to be caught');\n      dispatch(updateMeData(meData));\n    };\n    if (!api) return;\n    fetchData();\n  }, [api, dispatch, elog, log]);\n\n  return me;\n};\n","import { PosterState } from '../../store/Poster/posterSlice';\nimport { AppError } from '../../error';\nimport useTypedSelector from '../../store/rootReducer';\nimport { createHiDPICanvas } from './CanvasUtils';\nimport { PosterTheme, usePosterTheme } from './PosterTheme';\nimport { PosterTextLayout } from './PosterTextLayout';\nimport { usePosterLayout } from './PosterTextLayout';\nimport FontFaceObserver from 'fontfaceobserver';\nimport { useMemo } from 'react';\nimport { useMe } from '../../spotify/SpotifyAPIHooks';\n\nconst DEFAULT_FESTIVAL_NAME = 'My Festival';\nconst festivalNameTemplate = (one: string) => `${one} FEST`;\n\ntype Case = 'none' | 'upper';\nexport abstract class Poster {\n  public canvas!: HTMLCanvasElement;\n  public canvasCtx!: CanvasRenderingContext2D;\n  protected _w: number = 0;\n  protected _h: number = 0;\n  public img!: HTMLImageElement;\n  protected _drawBackground: boolean = true;\n\n  protected festivalNameText: string = DEFAULT_FESTIVAL_NAME;\n  protected festivalNameCase: Case = 'upper';\n\n  protected artistCase: Case = 'upper';\n\n  constructor(\n    protected ps: PosterState,\n    public theme: PosterTheme,\n    protected layout: PosterTextLayout,\n  ) {}\n\n  protected static getContext(can: HTMLCanvasElement) {\n    const ctx = can.getContext('2d');\n    if (!ctx) throw new AppError('Expected canvas context');\n    return ctx;\n  }\n\n  public setPosterSize(w: number, h: number) {\n    this._w = Math.floor(w);\n    this._h = Math.floor(h);\n  }\n\n  public get w() {\n    return this._w;\n  }\n\n  public get h() {\n    return this._h;\n  }\n\n  public get artistSeperator() {\n    return String.fromCharCode(8226);\n  }\n\n  public get festivalName(): string {\n    return this.festivalNameCase === 'upper'\n      ? this.festivalNameText.toUpperCase()\n      : this.festivalNameText;\n  }\n\n  public set display_name(displayName: string | undefined) {\n    if (!displayName) {\n      this.festivalNameText = DEFAULT_FESTIVAL_NAME;\n      return;\n    }\n    this.festivalNameText = festivalNameTemplate(displayName);\n  }\n\n  public get artistNames() {\n    let artists = this.ps.artists.filter(a => a.isSelected);\n    const artistNames = artists.map(a => {\n      let { name } = a.data;\n      if (this.artistCase === 'upper') name = name.toUpperCase();\n      return name;\n    });\n    return artistNames;\n  }\n\n  protected async load(can: HTMLCanvasElement, loadBackground: boolean) {\n    const artistFont = new FontFaceObserver(this.theme.artistFont);\n    const nameFont = new FontFaceObserver(this.theme.festivalNameFont);\n\n    const toAwait = [artistFont.load(), nameFont.load()];\n    if (loadBackground) toAwait.push(this.loadImage());\n    await this.loadImage();\n\n    try {\n      await Promise.all(toAwait);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  public async draw(can: HTMLCanvasElement, drawBackground = true) {\n    createHiDPICanvas(can, this.w, this.h);\n    await this.load(can, drawBackground);\n\n    this._drawBackground = drawBackground;\n    this.canvas = can;\n    this.canvasCtx = Poster.getContext(this.canvas);\n    this.layout.poster = this;\n    await this._draw();\n  }\n\n  protected async _draw({\n    drawBackground = true,\n    drawArtistBlock = true,\n    drawFestivalName = true,\n  } = {}) {\n    this.clear();\n    if (drawBackground && this._drawBackground)\n      await this.drawBackground(this.canvas);\n    if (drawFestivalName) this.layout.drawFestivalName();\n    if (drawArtistBlock) await this.drawArtistBlock();\n  }\n\n  protected async drawArtistBlock() {\n    const { bottom } = this.layout.drawArtistBlock();\n    const { maxPosterHeight } = this.layout;\n    if (bottom <= maxPosterHeight) return;\n    const newTop = this.layout.artistTop - (bottom - maxPosterHeight);\n    await this._draw({ drawArtistBlock: false });\n    this.layout.drawArtistBlock(newTop);\n  }\n\n  public clear() {\n    this.canvasCtx.clearRect(0, 0, this.w, this.h);\n  }\n\n  public async drawMultiCanvas(\n    can: HTMLCanvasElement,\n    backgroundCanvas?: HTMLCanvasElement,\n  ) {\n    createHiDPICanvas(can, this.w, this.h);\n    if (backgroundCanvas) await this.drawBackground(backgroundCanvas);\n    await this.draw(can, false);\n    return;\n  }\n\n  public async loadImage(imgWidth?: number, imgHeight?: number): Promise<void> {\n    this.img = new Image(imgWidth, imgHeight);\n    return new Promise(resolve => {\n      this.img.onload = () => {\n        resolve();\n      };\n      this.img.src = this.theme.backgroundImage;\n    });\n  }\n\n  public async drawBackground(can: HTMLCanvasElement): Promise<void> {\n    createHiDPICanvas(can, this.w, this.h);\n    await this.loadImage();\n    const imgWidth = this.img.naturalWidth;\n    const imgHeight = this.img.naturalHeight;\n    const ctx = Poster.getContext(can);\n    ctx.drawImage(this.img, 0, 0, imgWidth, imgHeight, 0, 0, this.w, this.h);\n  }\n}\n\nclass BasicPoster extends Poster {}\n\n// export const usePosterSize = () => {\n//   // const [, windowH] = useWindowSize();\n//   // const h = Math.floor(windowH * 0.8);\n//   // const w = Math.floor(h * 0.7);\n//   const w = 600;\n//   const h = 900;\n//   return [Math.min(w, MAX_POSTER_WIDTH), Math.min(h, MAX_POSTER_HEIGHT)];\n// };\n\nexport const usePoster = (): Poster => {\n  const me = useMe();\n  const theme = usePosterTheme();\n  const layout = usePosterLayout();\n  const ps = useTypedSelector(s => s.poster);\n\n  const posterMemo = useMemo(() => {\n    const poster = new BasicPoster(ps, theme, layout);\n    poster.display_name = me?.display_name;\n    return poster;\n  }, [layout, me, ps, theme]);\n  return posterMemo;\n};\n","import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport '../../style/Poster.css';\nimport { usePoster } from './Poster';\nimport { Spinner } from 'reactstrap';\n\nexport const POSTER_CANVAS_ID = 'poster-canvas';\n\nconst aspectRatio = [4, 5]; // 4:5\nconst getH = (w: number) => w * (aspectRatio[1] / aspectRatio[0]);\nconst maxHeight = (top: number) => document.documentElement.clientHeight - top;\nconst calculatePosterDims = (r?: DOMRect) => {\n  if (!r) return { w: 0, h: 0 };\n  let w = r.width;\n  let h = getH(w);\n  while (h >= maxHeight(r.top)) {\n    w = w - 5;\n    h = getH(w);\n  }\n  w = Math.floor(w);\n  h = Math.floor(h);\n  return { w, h };\n};\n\ninterface Props {\n  parentDomRect?: DOMRect;\n}\nconst PosterCanvas: React.FC<Props> = ({ parentDomRect }) => {\n  const poster = usePoster();\n  const [curBackgroundImage, setCurBackgroundImage] = useState('');\n  const [curW, setCurW] = useState(0);\n  const [curH, setCurH] = useState(0);\n  const [isLoading, setisLoading] = useState(false);\n  const ref = useRef<HTMLCanvasElement>(null);\n  const bgRef = useRef<HTMLCanvasElement>(null);\n\n  const { w: calculatedW, h: calculatedH } = calculatePosterDims(parentDomRect);\n  const { backgroundImage } = poster.theme;\n  poster.setPosterSize(calculatedW, calculatedH);\n\n  const needBackgroundImageUpdate = useCallback(() => {\n    return (\n      backgroundImage !== curBackgroundImage ||\n      curW !== calculatedW ||\n      curH !== calculatedH\n    );\n  }, [\n    backgroundImage,\n    calculatedH,\n    calculatedW,\n    curBackgroundImage,\n    curH,\n    curW,\n  ]);\n\n  const needPosterUpdate = useCallback(() => {\n    if (calculatedW === 0 || calculatedH === 0) return false;\n    return true;\n  }, [calculatedH, calculatedW]);\n\n  useEffect(() => {\n    const drawPoster = async () => {\n      const can = ref.current;\n      if (!can) throw new Error('Unable to retreive poster canvas element');\n\n      const bgcan = bgRef.current;\n      if (!bgcan)\n        throw new Error('Unable to retreive poster background canvas element');\n\n      const redrawBG = needBackgroundImageUpdate();\n      console.log(redrawBG);\n      if (redrawBG) setisLoading(true);\n      await poster.drawMultiCanvas(can, redrawBG ? bgcan : undefined);\n      setisLoading(false);\n      setCurBackgroundImage(poster.theme.backgroundImage);\n      setCurW(poster.w);\n      setCurH(poster.h);\n    };\n    if (needPosterUpdate()) {\n      drawPoster();\n    }\n  }, [needPosterUpdate, needBackgroundImageUpdate, poster]);\n\n  const canvasStyle = (): React.CSSProperties => {\n    return {\n      position: 'absolute',\n    };\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <Spinner style={{ width: '3rem', height: '3rem', zIndex: 99 }} />\n      )}\n      <canvas id='poster-bg' ref={bgRef} style={canvasStyle()}>\n        Poster BackGround\n      </canvas>\n      <canvas ref={ref} id={POSTER_CANVAS_ID} style={canvasStyle()}>\n        Festival Poster Viewer\n      </canvas>\n    </>\n  );\n};\n\nexport default PosterCanvas;\n","import React, { useState } from 'react';\nimport { Input, FormGroup, Label } from 'reactstrap';\n\ntype UseAppSelect = [string, Props];\nexport const useAppSelect = (\n  options: SelectOption[],\n  initialValue: string,\n  changeCB?: (value: string) => void,\n): UseAppSelect => {\n  const [selectedValue, setSelectedValue] = useState(initialValue);\n  const handleChange = (value: string) => {\n    setSelectedValue(value);\n    if (changeCB) changeCB(value);\n  };\n\n  return [\n    selectedValue,\n    {\n      options,\n      selected: selectedValue,\n      handleChange,\n    },\n  ];\n};\n\nexport interface SelectOption {\n  value: string;\n  text: string;\n}\ninterface Props {\n  labelText?: string;\n  selected: string;\n  options: SelectOption[];\n  handleChange?: (value: string) => void;\n}\nconst AppSelect: React.FC<Props> = ({\n  options,\n  handleChange,\n  selected,\n  labelText,\n}) => {\n  const optionEls = options.map(opt => {\n    return (\n      <option key={opt.value} value={opt.value}>\n        {opt.text}\n      </option>\n    );\n  });\n\n  return (\n    <FormGroup>\n      {labelText && <Label>{labelText}</Label>}\n      <Input\n        type='select'\n        value={selected}\n        onChange={e => {\n          if (handleChange) handleChange(e.target.value);\n        }}\n      >\n        {optionEls}\n      </Input>\n    </FormGroup>\n  );\n};\n\nexport default AppSelect;\n","import React, { useCallback } from 'react';\nimport { Form, Row, Col } from 'reactstrap';\nimport AppSelect, { useAppSelect, SelectOption } from './AppSelect/AppSelect';\nimport AppButton from './AppButton';\nimport { usePoster } from './Poster/Poster';\nimport { changeThemeType, changeLayoutType } from '../store/Poster/posterSlice';\nimport { useDispatch } from 'react-redux';\nimport useAppSelector from '../store/rootReducer';\n\nconst useCreateImage = () => {\n  const poster = usePoster();\n  const createImage = useCallback(async () => {\n    const can = document.createElement('canvas');\n    poster.setPosterSize(1600, 2000);\n    await poster.draw(can);\n    const dataURL = can.toDataURL('png', 1.0);\n    const w = window.open('_blank');\n    w?.document.write(`<img src=${dataURL}></img>`);\n  }, [poster]);\n  return createImage;\n};\n\nconst themeOptions: SelectOption[] = [\n  {\n    text: 'Desert',\n    value: 'desert',\n  },\n  {\n    text: 'Punk',\n    value: 'punk',\n  },\n  {\n    text: 'Rock',\n    value: 'rock',\n  },\n  {\n    text: 'Galaxy',\n    value: 'galaxy',\n  },\n  {\n    text: 'TEST',\n    value: 'test',\n  },\n];\n\nconst layoutOptions: SelectOption[] = [\n  {\n    text: 'Basic',\n    value: 'basic',\n  },\n  {\n    text: 'Weekend',\n    value: 'weekend',\n  },\n];\n\ninterface Props {}\n\nconst Options: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const themeType = useAppSelector(s => s.poster.themeType);\n  const layoutType = useAppSelector(s => s.poster.layoutType);\n\n  const [, themeSelectHook] = useAppSelect(themeOptions, themeType, value => {\n    dispatch(changeThemeType(value));\n  });\n  const [, layoutSelectHook] = useAppSelect(\n    layoutOptions,\n    layoutType,\n    value => {\n      dispatch(changeLayoutType(value));\n    },\n  );\n  const createImage = useCreateImage();\n  return (\n    <div className='options mb-2'>\n      <Form>\n        <Row form>\n          <Col md={6} xs={6}>\n            <AppSelect labelText={'Theme'} {...themeSelectHook} />\n          </Col>\n          <Col md={6} xs={6}>\n            <AppSelect labelText={'Text Layout'} {...layoutSelectHook} />\n          </Col>\n          <Col md={6} xs={6}></Col>\n        </Row>\n      </Form>\n      <AppButton color={'warning'} onClick={() => createImage()}>\n        Create Image\n      </AppButton>\n    </div>\n  );\n};\n\nexport default Options;\n","import React from 'react';\nimport { useSpotifyTopArtists } from '../spotify/SpotifyAPIHooks';\nimport List, { useReduxList } from './List/List';\nimport AppSelect, { useAppSelect } from './AppSelect/AppSelect';\nimport useTypedSelector, { RootState } from '../store/rootReducer';\nimport { updateArtistList } from '../store/Poster/posterSlice';\n\nconst listName = 'Top Artists';\nconst topArtistTROptions = [\n  {\n    text: 'Last 6 Months',\n    value: 'medium_term',\n  },\n  {\n    text: 'All Time',\n    value: 'long_term',\n  },\n  {\n    text: '1 Month',\n    value: 'short_term',\n  },\n];\n\ninterface Props {}\nconst TopArtistsList: React.FC<Props> = () => {\n  const { setTopArtistsTimeRange } = useSpotifyTopArtists();\n  const initialTimeRange = useTypedSelector(s => s.poster.topArtistsTimeRange);\n  const [, artistSelectProps] = useAppSelect(\n    topArtistTROptions,\n    initialTimeRange,\n    v => setTopArtistsTimeRange(v),\n  );\n\n  const { items, listProps } = useReduxList(\n    (state: RootState) => state.poster.artists,\n    updateArtistList,\n    data => {\n      const url = data.images[data.images.length - 1].url;\n      return (\n        <span>\n          <img\n            className=''\n            alt={data.name + ' photo'}\n            src={url}\n            style={{\n              height: '50px',\n              width: '50px',\n              marginRight: '5px',\n            }}\n          />\n          {data.name}\n        </span>\n      );\n    },\n  );\n\n  return (\n    <div>\n      <h3 style={{ display: 'inline-block' }}>{listName}</h3>\n      <AppSelect {...artistSelectProps} />\n      <List items={items} {...listProps} canSelect />\n    </div>\n  );\n};\n\nexport default TopArtistsList;\n","import React from 'react';\nimport { constructSpotifyAuthURL } from '../spotify/SpotifyAuth';\n\n// const centerContent = 'justify-content-md-center';\n// const uriFormText = `Enter a Spotify User URI`;\n// const userIdFormat = 'spotify:user:yourid';\n// const invalidURIMsg = `Invalid Spotify URI. Format should be '${userIdFormat}'`;\n// const testURI = 'spotify:user:1238922402'\n\n// function parseUserIdFromURI(uri: string) {\n//   const uriParts = uri.split(':')\n//   if (uriParts.length !== 3) return;\n//   if (uriParts[0] !== 'spotify' || uriParts[1] !== 'user') return;\n//   const userId = uriParts[2];\n//   if (userId === '') return;\n//   return userId;\n// }\n\ninterface Props {}\nconst SpotifyInfoCapturePanel: React.FC<Props> = () => {\n  return (\n    <div className='h-100 d-flex justify-content-center align-items-center'>\n      <a\n        className='btn btn-success'\n        role='button'\n        href={constructSpotifyAuthURL()}\n      >\n        Authorize Spotify\n      </a>\n    </div>\n  );\n};\n\nexport default SpotifyInfoCapturePanel;\n","import React from 'react';\nimport './SideNav.css';\nimport TopArtistsList from '../TopArtistsList';\nimport SpotifyInfoCapturePanel from '../SpotifyInfoCapturePanel';\nimport useSpotifyAccessToken from '../../store/system/useSpotifyAccessToken';\n\ninterface Props {\n  active: boolean;\n  toggle: () => void;\n}\nconst SideNav: React.FC<Props> = ({ active, toggle }) => {\n  const width = active ? 300 : 0;\n  const data = useSpotifyAccessToken();\n  const showAuth = data.status !== 'VALID';\n\n  return (\n    <div className='sidenav ' style={{ width }}>\n      <a href='#' className='closebtn' onClick={toggle}>\n        &times;\n      </a>\n      {showAuth && <SpotifyInfoCapturePanel />}\n      {!showAuth && <TopArtistsList />}\n    </div>\n  );\n};\n\nexport default SideNav;\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Nav } from 'reactstrap';\nimport PosterCanvas from './Poster/PosterCanvas';\nimport Options from './Options';\nimport AppButton from './AppButton';\nimport SideNav from './Toolbar/SideNav';\nimport { useBoundingRectangle } from '../utils';\n\nconst renderDevTools = () => {\n  if (process.env.NODE_ENV !== 'development') return null;\n  return (\n    <form className='form-inline'>\n      <button\n        className='btn btn-outline-danger'\n        type='button'\n        onClick={() => {\n          window.localStorage.clear();\n          window.location.reload();\n        }}\n      >\n        Clear Cache\n      </button>\n    </form>\n  );\n};\n\ninterface Props {}\nconst Home: React.FC<Props> = () => {\n  const [navActive, setNavActive] = useState(false);\n  const toggleNav = () => setNavActive(!navActive);\n  const [rect, ref] = useBoundingRectangle<HTMLDivElement>();\n\n  return (\n    <div className='home h-100'>\n      <Nav\n        className='navbar navbar-expand-sm navbar-light bg-light py-0'\n        style={{ marginBottom: '10px' }}\n      >\n        <AppButton className='mr-2' onClick={() => toggleNav()}>\n          Artists\n        </AppButton>\n        <div className='navbar-brand'>Poster App</div>\n        {renderDevTools()}\n      </Nav>\n      <SideNav active={navActive} toggle={toggleNav} />\n      <Options />\n      <div ref={ref} className='h-100'>\n        <Container className='h-100'>\n          <Row className='h-100'>\n            <Col className='d-flex justify-content-center h-100'>\n              <PosterCanvas parentDomRect={rect} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { spotifyAuthFromWindow } from '../spotify/SpotifyAuth';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { accessTokenUpdated } from '../store/system/systemSlice';\n\nconst redirectHome = () => {\n  return <Redirect to='/' />;\n};\n\ninterface Props {}\nconst SpotifyAuthorize: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  if (authData.status !== 'AUTHORIZED') {\n    console.log(`Non Authorized status: ${authData.status}`);\n    console.log(authData.error);\n    return redirectHome();\n  }\n\n  if (!authData.data)\n    throw new Error('Received authorized status without data');\n  const { access_token, expires_in } = authData.data;\n  dispatch(\n    accessTokenUpdated({\n      spotifyAccessToken: access_token,\n      spotifyAccessTokenExpire: expires_in,\n    }),\n  );\n  return redirectHome();\n};\n\nexport default SpotifyAuthorize;\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport { Switch, Route } from 'react-router-dom';\nimport SpotifyAuthorize from './components/SpotifyAuthorize';\nimport { useDispatch } from 'react-redux';\nimport { spotifyAuthFromWindow } from './spotify/SpotifyAuth';\nimport { accessTokenUpdated } from './store/system/systemSlice';\nimport { nowSeconds } from './utils';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const authData = spotifyAuthFromWindow();\n\n  // TODO update this to be safer\n  if (authData.status !== 'AUTHORIZED') {\n    // console.log(`Non Authorized status: ${authData.status}`)\n    // console.log(authData.error)\n  } else {\n    if (!authData.data)\n      throw new Error('Received authorized status without data');\n    const { access_token, expires_in } = authData.data;\n    const expiresInNum = parseInt(expires_in, 10);\n    if (isNaN(expiresInNum))\n      throw new Error(`Spotify did not return a valid number ${expires_in}`);\n    const expireTime = nowSeconds() + expiresInNum;\n    window.location.hash = '';\n    dispatch(\n      accessTokenUpdated({\n        spotifyAccessToken: access_token,\n        spotifyAccessTokenExpire: expireTime.toString(),\n      }),\n    );\n  }\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/authenticate'>\n          <SpotifyAuthorize />\n        </Route>\n        <Route exact path='/'>\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './rootReducer';\n\n// TODO this is only for development but still need to figure out a better way\n// to do this\nconst VERSION = 4;\nconst key = 'version';\nconst versionStr = window.localStorage.getItem(key);\nif (!versionStr) {\n  window.localStorage.clear();\n  window.localStorage.setItem(key, VERSION.toString());\n} else {\n  const version = parseInt(versionStr, 10);\n  if (version < VERSION) {\n    window.localStorage.clear();\n    window.localStorage.setItem(key, VERSION.toString());\n  }\n}\n\n// TODO look into other options to replicate this functionality.\n// works for now but obviously not very efficient\nexport const REDUX_LOCAL_STORAGE_KEY = '__REDUX_LOCAL_STORAGE_KEY';\nconst localStorageMiddleware = (store: any) => (next: any) => (action: any) => {\n  let res = next(action);\n  let state = store.getState();\n  let json = JSON.stringify(state);\n  window.localStorage.setItem(REDUX_LOCAL_STORAGE_KEY, json);\n  return res;\n};\n\nconst initialJSON = window.localStorage.getItem(REDUX_LOCAL_STORAGE_KEY);\nconst preloadedState = initialJSON ? JSON.parse(initialJSON) : undefined;\n\nconst middleware = [localStorageMiddleware];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n  middleware,\n});\n\nexport default store;\n","import React, { useState } from 'react';\nimport { Modal, ModalProps, ModalHeader, ModalBody } from 'reactstrap';\nimport { constructSpotifyAuthURL } from '../spotify/SpotifyAuth';\nimport useTypedSelector from '../store/rootReducer';\n\ninterface SpotifyAuthRefreshModalProps extends ModalProps {\n  toggle: () => void;\n}\n// const SpotifyAuthRefreshModal: React.FC<SpotifyAuthRefreshModalProps> = props => {\n//   const { toggle } = props;\n//   return (\n//     <Modal {...props} className='spotify-auth-refresh-modal'>\n//       <ModalHeader toggle={toggle}>\n//         Spotify Is Asking To Be Authorized\n//       </ModalHeader>\n//       <ModalBody>\n//         <a href={constructSpotifyAuthURL()}>Authorize Spotify</a>\n//       </ModalBody>\n//     </Modal>\n//   );\n// };\n\ninterface Props {}\nconst GlobalError: React.FC<Props> = ({ children }) => {\n  const errorData = useTypedSelector(s => s.system.error);\n  const [spotifyAccessRefreshModal, setSpotifyAccessRefreshModal] = useState(\n    false,\n  );\n\n  const toggleModal = () =>\n    setSpotifyAccessRefreshModal(!spotifyAccessRefreshModal);\n\n  if (!errorData.isError || !errorData.error) {\n    if (spotifyAccessRefreshModal) {\n      toggleModal();\n    }\n    return <>{children}</>;\n  }\n\n  const error = errorData.error;\n\n  let errorBanner;\n  console.log(\n    `isError: ${\n      errorData.isError\n    }, error: ${!!error}, errorData.error: ${!!errorData.error}`,\n  );\n  if (error) {\n    switch (error.type) {\n      case 'NoSpotifyAccess':\n        if (!spotifyAccessRefreshModal) setSpotifyAccessRefreshModal(true);\n        errorBanner = null; // Modal will take care of error message\n        break;\n      default:\n        errorBanner = <h3>Error</h3>;\n        console.error(error);\n    }\n  }\n\n  return (\n    <>\n      {/* {spotifyAccessRefreshModal && (\n        <SpotifyAuthRefreshModal\n          isOpen={spotifyAccessRefreshModal}\n          toggle={toggleModal}\n        />\n      )}\n      {errorBanner} */}\n      {children}\n    </>\n  );\n};\n\nexport default GlobalError;\n","import './index.css';\nimport './fonts/fonts.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport GlobalError from './components/GlobalError';\nimport { MemoryRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalError>\n      <Router>\n        <App />\n      </Router>\n    </GlobalError>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}